[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.type.TypeModifier;"
},
{
  "name":"[Lcom.google.common.collect.ImmutableMapEntry;"
},
{
  "name":"[Lio.trino.cost.LocalCostEstimate;"
},
{
  "name":"[Lio.trino.spi.predicate.Range;"
},
{
  "name":"[Lio.trino.spi.predicate.TupleDomain;"
},
{
  "name":"[Lio.trino.sql.planner.Symbol;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.invoke.MethodHandles$Lookup$ClassOption;"
},
{
  "name":"[Ljava.lang.reflect.Type;"
},
{
  "name":"[Ljava.util.Map$Entry;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lorg.eclipse.jetty.server.Handler;"
},
{
  "name":"[Lorg.eclipse.jetty.servlet.ServletMapping;"
},
{
  "name":"[Lorg.glassfish.jersey.servlet.internal.spi.ServletContainerProvider;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.NullValueProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.std.StdDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.base.Supplier",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.cache.Striped64",
  "fields":[
    {"name":"base"}, 
    {"name":"busy"}
  ]
},
{
  "name":"com.google.common.cache.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"com.google.common.collect.BiMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableBiMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableBiMapFauxverideShim",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.ImmutableSet$CachingAsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.Maps$AbstractFilteredMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.Maps$FilteredKeyMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.Maps$ViewCachingAbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.collect.RegularImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.RegularImmutableMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.RegularImmutableSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.SingletonImmutableBiMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.SingletonImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.collect.SingletonImmutableSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.google.common.reflect.Types$TypeVariableImpl",
  "queryAllPublicMethods":true
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[
    {"name":"listeners"}, 
    {"name":"value"}, 
    {"name":"waiters"}
  ]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[
    {"name":"next"}, 
    {"name":"thread"}
  ]
},
{
  "name":"com.google.common.util.concurrent.DirectExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.AbstractModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.Binder",
  "methods":[
    {"name":"bind","parameterTypes":["java.lang.Class"] }, 
    {"name":"disableCircularProxies","parameterTypes":[] }, 
    {"name":"install","parameterTypes":["com.google.inject.Module"] }, 
    {"name":"skipSources","parameterTypes":["java.lang.Class[]"] }
  ]
},
{
  "name":"com.google.inject.internal.Annotations",
  "methods":[{"name":"determineAnnotationToStringConfig","parameterTypes":[] }]
},
{
  "name":"com.google.inject.internal.Element",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.InjectorShell$RootModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.ProviderMethod",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.ProviderMethod$FastClassProviderMethod",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder$ExtensionRealMapProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder$ProviderMapEntry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder$RealMapBinderProviderWithDependencies",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder$RealMapProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMapBinder$RealProviderMapProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder$BaseFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder$ExtensionRealMultibinderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder$PermitDuplicatesModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder$RealMultibinderCollectionOfProvidersProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealMultibinder$RealMultibinderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$Actual",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$Default",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$JavaOptionalProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$JavaOptionalProviderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$RealDirectTypeProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$RealOptionalBinderProviderWithDependencies",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$RealOptionalKeyProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.internal.RealOptionalBinder$RealOptionalProviderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.kotlin.KotlinSupportImpl"
},
{
  "name":"com.google.inject.name.Named",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.inject.util.Modules$EmptyModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacSHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.CallbackProxy",
  "methods":[{"name":"callback","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"com.sun.jna.NativeLong",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.unix.LibCAPI$size_t",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.unix.LibCAPI$size_t$ByReference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getVMOption","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOrigin","parameterTypes":[] }, 
    {"name":"getValue","parameterTypes":[] }, 
    {"name":"isWriteable","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.tools.attach.VirtualMachine",
  "methods":[{"name":"attach","parameterTypes":["java.lang.String"] }]
},
{
  "name":"double",
  "queryAllDeclaredMethods":true
},
{
  "name":"groovy.lang.Closure"
},
{
  "name":"io.airlift.bootstrap.BootstrapConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getQuiet","parameterTypes":[] }, 
    {"name":"setQuiet","parameterTypes":["java.lang.Boolean"] }
  ]
},
{
  "name":"io.airlift.bootstrap.LifeCycleManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.bootstrap.LifeCycleModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.bootstrap.LifeCycleModule$$FastClassByGuice$$2776476",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.compress.lz4.Lz4Compressor",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.compress.lz4.Lz4Decompressor",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.concurrent.BoundedExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.concurrent.ThreadPoolExecutorMBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getActiveCount","parameterTypes":[] }, 
    {"name":"getCompletedTaskCount","parameterTypes":[] }, 
    {"name":"getCorePoolSize","parameterTypes":[] }, 
    {"name":"getKeepAliveTime","parameterTypes":[] }, 
    {"name":"getLargestPoolSize","parameterTypes":[] }, 
    {"name":"getMaximumPoolSize","parameterTypes":[] }, 
    {"name":"getPoolSize","parameterTypes":[] }, 
    {"name":"getQueuedTaskCount","parameterTypes":[] }, 
    {"name":"getRejectedExecutionHandler","parameterTypes":[] }, 
    {"name":"getTaskCount","parameterTypes":[] }, 
    {"name":"isAllowCoreThreadTimeOut","parameterTypes":[] }, 
    {"name":"isShutdown","parameterTypes":[] }, 
    {"name":"isTerminated","parameterTypes":[] }, 
    {"name":"isTerminating","parameterTypes":[] }, 
    {"name":"setAllowCoreThreadTimeOut","parameterTypes":["boolean"] }, 
    {"name":"setCorePoolSize","parameterTypes":["int"] }, 
    {"name":"setKeepAliveTime","parameterTypes":["java.lang.String"] }, 
    {"name":"setMaximumPoolSize","parameterTypes":["int"] }
  ]
},
{
  "name":"io.airlift.configuration.AbstractConfigurationAwareModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.ConditionalModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.Config",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.airlift.configuration.ConfigDefaultsHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.ConfigDescription",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.airlift.configuration.ConfigurationAwareModule$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.ConfigurationFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.ConfigurationModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.ConfigurationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.configuration.ConfigurationProvider$$FastClassByGuice$$31293224",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.configuration.DefunctConfig",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.airlift.configuration.GlobalDefaults",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.LegacyConfig",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.airlift.configuration.WarningsMonitor",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.configuration.validation.FileExists",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.configuration.validation.FileExistsValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.discovery.client.Announcement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getLocation","parameterTypes":[] }, 
    {"name":"getNodeId","parameterTypes":[] }, 
    {"name":"getPool","parameterTypes":[] }, 
    {"name":"getServices","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.client.AnnouncementHttpServerInfo",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.Announcer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"addServiceAnnouncement","parameterTypes":["io.airlift.discovery.client.ServiceAnnouncement"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"forceAnnounce","parameterTypes":[] }, 
    {"name":"getExecutor","parameterTypes":[] }, 
    {"name":"getServiceAnnouncements","parameterTypes":[] }, 
    {"name":"removeServiceAnnouncement","parameterTypes":["java.util.UUID"] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.client.Announcer$$FastClassByGuice$$14032487",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.CachingServiceSelectorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.CachingServiceSelectorFactory$$FastClassByGuice$$15646499",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.DiscoveryAnnouncementClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.DiscoveryBinder$HttpAnnouncementProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.DiscoveryBinder$HttpAnnouncementProvider$$FastClassByGuice$$34308496",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.DiscoveryClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getDiscoveryServiceURI","parameterTypes":[] }, 
    {"name":"setDiscoveryServiceURI","parameterTypes":["java.net.URI"] }
  ]
},
{
  "name":"io.airlift.discovery.client.DiscoveryLookupClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.DiscoveryModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.DiscoveryModule$$FastClassByGuice$$1102494",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.DiscoveryModule$DiscoveryExecutorProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.client.ForDiscoveryClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.HttpDiscoveryAnnouncementClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.HttpDiscoveryAnnouncementClient$$FastClassByGuice$$26139898",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.HttpDiscoveryLookupClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.HttpDiscoveryLookupClient$$FastClassByGuice$$24919980",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.MergingServiceSelector",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.MergingServiceSelectorFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.ServiceAnnouncement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.client.ServiceDescriptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.UUID","java.lang.String","java.lang.String","java.lang.String","java.lang.String","io.airlift.discovery.client.ServiceState","java.util.Map"] }]
},
{
  "name":"io.airlift.discovery.client.ServiceDescriptorsRepresentation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.List"] }]
},
{
  "name":"io.airlift.discovery.client.ServiceInventory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getServiceDescriptors","parameterTypes":[] }, 
    {"name":"getServiceDescriptors","parameterTypes":["java.lang.String"] }, 
    {"name":"getServiceDescriptors","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }, 
    {"name":"updateServiceInventory","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.client.ServiceInventory$$FastClassByGuice$$12613258",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.ServiceInventoryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getServiceInventoryUri","parameterTypes":[] }, 
    {"name":"getUpdateInterval","parameterTypes":[] }, 
    {"name":"setServiceInventoryUri","parameterTypes":["java.net.URI"] }, 
    {"name":"setUpdateInterval","parameterTypes":["io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.airlift.discovery.client.ServiceSelector",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getPool","parameterTypes":[] }, 
    {"name":"setPool","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorManager$$FastClassByGuice$$15736895",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.client.ServiceSelectorProvider$$FastClassByGuice$$312032086",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.client.ServiceState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.client.ServiceType",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.server.DiscoveryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxAge","parameterTypes":[] }, 
    {"name":"getStoreCacheTtl","parameterTypes":[] }, 
    {"name":"setMaxAge","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setStoreCacheTtl","parameterTypes":["io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.airlift.discovery.server.DiscoveryServiceSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.server.DiscoveryServiceSelector$$FastClassByGuice$$26623973",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.server.DynamicAnnouncement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.util.Set"] }]
},
{
  "name":"io.airlift.discovery.server.DynamicAnnouncementResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"delete","parameterTypes":["io.airlift.discovery.server.Id"] }, 
    {"name":"put","parameterTypes":["io.airlift.discovery.server.Id","javax.ws.rs.core.UriInfo","io.airlift.discovery.server.DynamicAnnouncement"] }
  ]
},
{
  "name":"io.airlift.discovery.server.DynamicAnnouncementResource$$FastClassByGuice$$18308431",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.server.DynamicServiceAnnouncement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["io.airlift.discovery.server.Id","java.lang.String","java.util.Map"] }]
},
{
  "name":"io.airlift.discovery.server.DynamicStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.server.EmbeddedDiscoveryModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.server.EmbeddedDiscoveryModule$EmptyStaticStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.discovery.server.ForDynamicStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.server.Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"get","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.airlift.discovery.server.ReplicatedDynamicStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.server.ReplicatedDynamicStore$$FastClassByGuice$$28051502",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.server.Service",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.airlift.discovery.server.Id","io.airlift.discovery.server.Id","java.lang.String","java.lang.String","java.lang.String","java.util.Map"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getLocation","parameterTypes":[] }, 
    {"name":"getNodeId","parameterTypes":[] }, 
    {"name":"getPool","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.server.ServiceResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getServices","parameterTypes":[] }, 
    {"name":"getServices","parameterTypes":["java.lang.String"] }, 
    {"name":"getServices","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"io.airlift.discovery.server.ServiceResource$$FastClassByGuice$$17776945",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.server.Services",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getServices","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.server.StaticStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.store.ConflictResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.discovery.store.ConflictResolver$$FastClassByGuice$$20835574",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.DistributedStore",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"delete","parameterTypes":["byte[]"] }, 
    {"name":"get","parameterTypes":["byte[]"] }, 
    {"name":"getAll","parameterTypes":[] }, 
    {"name":"getLastGcTimestamp","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"put","parameterTypes":["byte[]","byte[]"] }, 
    {"name":"put","parameterTypes":["byte[]","byte[]","io.airlift.units.Duration"] }, 
    {"name":"removeExpiredEntries","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.store.HttpRemoteStore",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLastRemoteServerRefreshTimestamp","parameterTypes":[] }, 
    {"name":"put","parameterTypes":["io.airlift.discovery.store.Entry"] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.store.InMemoryStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.store.InMemoryStore$$FastClassByGuice$$29613822",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.LocalStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.store.RealTimeSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.discovery.store.RealTimeSupplier$$FastClassByGuice$$29155601",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.RemoteStore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"put","parameterTypes":["io.airlift.discovery.store.Entry"] }]
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$DistributedStoreProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$DistributedStoreProvider$$FastClassByGuice$$34956143",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$RemoteHttpStoreProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$RemoteHttpStoreProvider$$FastClassByGuice$$37709660",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$ReplicatorProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.discovery.store.ReplicatedStoreModule$ReplicatorProvider$$FastClassByGuice$$36046827",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.discovery.store.Replicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLastReplicationTimestamp","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.discovery.store.StoreConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getGarbageCollectionInterval","parameterTypes":[] }, 
    {"name":"getMaxBatchSize","parameterTypes":[] }, 
    {"name":"getQueueSize","parameterTypes":[] }, 
    {"name":"getRemoteUpdateInterval","parameterTypes":[] }, 
    {"name":"getReplicationInterval","parameterTypes":[] }, 
    {"name":"getTombstoneMaxAge","parameterTypes":[] }, 
    {"name":"setGarbageCollectionInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setMaxBatchSize","parameterTypes":["int"] }, 
    {"name":"setQueueSize","parameterTypes":["int"] }, 
    {"name":"setRemoteUpdateInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setReplicationInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setTombstoneMaxAge","parameterTypes":["io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.airlift.discovery.store.StoreResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getAll","parameterTypes":["java.lang.String"] }, 
    {"name":"put","parameterTypes":["java.lang.String","java.lang.String","byte[]"] }, 
    {"name":"setMultipleEntries","parameterTypes":["java.lang.String","java.util.List"] }
  ]
},
{
  "name":"io.airlift.discovery.store.StoreResource$$FastClassByGuice$$19455049",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.event.client.EventClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.event.client.EventModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.event.client.MultiEventClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.event.client.MultiEventClient$$FastClassByGuice$$189188868",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.client.GlobalFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.http.client.HttpClient",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["io.airlift.http.client.Request","io.airlift.http.client.ResponseHandler"] }, 
    {"name":"executeAsync","parameterTypes":["io.airlift.http.client.Request","io.airlift.http.client.ResponseHandler"] }, 
    {"name":"getMaxContentLength","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.HttpClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAutomaticHttpsSharedSecret","parameterTypes":[] }, 
    {"name":"getConnectTimeout","parameterTypes":[] }, 
    {"name":"getHttp2InitialSessionReceiveWindowSize","parameterTypes":[] }, 
    {"name":"getHttp2InitialStreamReceiveWindowSize","parameterTypes":[] }, 
    {"name":"getHttp2InputBufferSize","parameterTypes":[] }, 
    {"name":"getHttpProxy","parameterTypes":[] }, 
    {"name":"getHttpsExcludedCipherSuites","parameterTypes":[] }, 
    {"name":"getHttpsIncludedCipherSuites","parameterTypes":[] }, 
    {"name":"getIdleTimeout","parameterTypes":[] }, 
    {"name":"getKeepAliveInterval","parameterTypes":[] }, 
    {"name":"getKeyStorePassword","parameterTypes":[] }, 
    {"name":"getKeyStorePath","parameterTypes":[] }, 
    {"name":"getLogBufferSize","parameterTypes":[] }, 
    {"name":"getLogFlushInterval","parameterTypes":[] }, 
    {"name":"getLogHistory","parameterTypes":[] }, 
    {"name":"getLogMaxFileSize","parameterTypes":[] }, 
    {"name":"getLogPath","parameterTypes":[] }, 
    {"name":"getLogQueueSize","parameterTypes":[] }, 
    {"name":"getMaxConnections","parameterTypes":[] }, 
    {"name":"getMaxConnectionsPerServer","parameterTypes":[] }, 
    {"name":"getMaxContentLength","parameterTypes":[] }, 
    {"name":"getMaxRequestsQueuedPerDestination","parameterTypes":[] }, 
    {"name":"getMaxThreads","parameterTypes":[] }, 
    {"name":"getMinThreads","parameterTypes":[] }, 
    {"name":"getRecordRequestComplete","parameterTypes":[] }, 
    {"name":"getRequestBufferSize","parameterTypes":[] }, 
    {"name":"getRequestTimeout","parameterTypes":[] }, 
    {"name":"getResponseBufferSize","parameterTypes":[] }, 
    {"name":"getSecureRandomAlgorithm","parameterTypes":[] }, 
    {"name":"getSelectorCount","parameterTypes":[] }, 
    {"name":"getSocksProxy","parameterTypes":[] }, 
    {"name":"getTimeoutConcurrency","parameterTypes":[] }, 
    {"name":"getTimeoutThreads","parameterTypes":[] }, 
    {"name":"getTrustStorePassword","parameterTypes":[] }, 
    {"name":"getTrustStorePath","parameterTypes":[] }, 
    {"name":"isConnectBlocking","parameterTypes":[] }, 
    {"name":"isHttp2Enabled","parameterTypes":[] }, 
    {"name":"isLogCompressionEnabled","parameterTypes":[] }, 
    {"name":"isLogEnabled","parameterTypes":[] }, 
    {"name":"isSecureProxy","parameterTypes":[] }, 
    {"name":"isVerifyHostname","parameterTypes":[] }, 
    {"name":"setAutomaticHttpsSharedSecret","parameterTypes":["java.lang.String"] }, 
    {"name":"setConnectBlocking","parameterTypes":["boolean"] }, 
    {"name":"setConnectTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setHttp2Enabled","parameterTypes":["boolean"] }, 
    {"name":"setHttp2InitialSessionReceiveWindowSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttp2InitialStreamReceiveWindowSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttp2InputBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttpProxy","parameterTypes":["com.google.common.net.HostAndPort"] }, 
    {"name":"setHttpsExcludedCipherSuites","parameterTypes":["java.lang.String"] }, 
    {"name":"setHttpsIncludedCipherSuites","parameterTypes":["java.lang.String"] }, 
    {"name":"setIdleTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setKeepAliveInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setKeyStorePassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setKeyStorePath","parameterTypes":["java.lang.String"] }, 
    {"name":"setLogBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLogCompressionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLogEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLogFlushInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setLogHistory","parameterTypes":["int"] }, 
    {"name":"setLogMaxFileSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLogPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setLogQueueSize","parameterTypes":["int"] }, 
    {"name":"setMaxConnections","parameterTypes":["int"] }, 
    {"name":"setMaxConnectionsPerServer","parameterTypes":["int"] }, 
    {"name":"setMaxContentLength","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxRequestsQueuedPerDestination","parameterTypes":["int"] }, 
    {"name":"setMaxThreads","parameterTypes":["int"] }, 
    {"name":"setMinThreads","parameterTypes":["int"] }, 
    {"name":"setRecordRequestComplete","parameterTypes":["boolean"] }, 
    {"name":"setRequestBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setRequestTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setResponseBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSecureProxy","parameterTypes":["boolean"] }, 
    {"name":"setSecureRandomAlgorithm","parameterTypes":["java.lang.String"] }, 
    {"name":"setSelectorCount","parameterTypes":["int"] }, 
    {"name":"setSocksProxy","parameterTypes":["com.google.common.net.HostAndPort"] }, 
    {"name":"setTimeoutConcurrency","parameterTypes":["int"] }, 
    {"name":"setTimeoutThreads","parameterTypes":["int"] }, 
    {"name":"setTrustStorePassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setTrustStorePath","parameterTypes":["java.lang.String"] }, 
    {"name":"setVerifyHostname","parameterTypes":["boolean"] }, 
    {"name":"validate","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.HttpClientModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.http.client.HttpClientModule$HttpClientProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.http.client.HttpClientModule$HttpClientProvider$$FastClassByGuice$$33395605",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.client.HttpRequestFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.http.client.RequestStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"get1xxResponse","parameterTypes":[] }, 
    {"name":"get2xxResponse","parameterTypes":[] }, 
    {"name":"get3xxResponse","parameterTypes":[] }, 
    {"name":"get4xxResponse","parameterTypes":[] }, 
    {"name":"get5xxResponse","parameterTypes":[] }, 
    {"name":"getAllResponse","parameterTypes":[] }, 
    {"name":"getReadBytes","parameterTypes":[] }, 
    {"name":"getRequestCanceled","parameterTypes":[] }, 
    {"name":"getRequestFailed","parameterTypes":[] }, 
    {"name":"getRequestTime","parameterTypes":[] }, 
    {"name":"getResponseTime","parameterTypes":[] }, 
    {"name":"getWrittenBytes","parameterTypes":[] }, 
    {"name":"recordRequestCanceled","parameterTypes":[] }, 
    {"name":"recordRequestFailed","parameterTypes":[] }, 
    {"name":"recordResponseReceived","parameterTypes":["java.lang.String","int","long","long","io.airlift.units.Duration","io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.airlift.http.client.TraceTokenRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.http.client.TraceTokenRequestFilter$$FastClassByGuice$$191188911",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.client.jetty.CachedDistribution",
  "methods":[
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getDistribution","parameterTypes":[] }, 
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getP01","parameterTypes":[] }, 
    {"name":"getP05","parameterTypes":[] }, 
    {"name":"getP10","parameterTypes":[] }, 
    {"name":"getP25","parameterTypes":[] }, 
    {"name":"getP50","parameterTypes":[] }, 
    {"name":"getP75","parameterTypes":[] }, 
    {"name":"getP90","parameterTypes":[] }, 
    {"name":"getP95","parameterTypes":[] }, 
    {"name":"getP99","parameterTypes":[] }, 
    {"name":"getPercentiles","parameterTypes":[] }, 
    {"name":"getTotal","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.jetty.ConnectionPoolDistribution",
  "queryAllPublicMethods":true
},
{
  "name":"io.airlift.http.client.jetty.ConnectionStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getConnectionDurationStdDev","parameterTypes":[] }, 
    {"name":"getMaxConnectionDuration","parameterTypes":[] }, 
    {"name":"getMaxOpenConnections","parameterTypes":[] }, 
    {"name":"getMeanConnectionDuration","parameterTypes":[] }, 
    {"name":"getOpenConnectionCount","parameterTypes":[] }, 
    {"name":"getReceivedBytes","parameterTypes":[] }, 
    {"name":"getReceivedMessageCount","parameterTypes":[] }, 
    {"name":"getSentBytes","parameterTypes":[] }, 
    {"name":"getSentMessageCount","parameterTypes":[] }, 
    {"name":"getTotalConnectionCount","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.jetty.DestinationDistribution",
  "queryAllPublicMethods":true
},
{
  "name":"io.airlift.http.client.jetty.JettyHttpClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"dump","parameterTypes":[] }, 
    {"name":"dumpAllDestinations","parameterTypes":[] }, 
    {"name":"dumpDestination","parameterTypes":["java.net.URI"] }, 
    {"name":"dumpStdErr","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["io.airlift.http.client.Request","io.airlift.http.client.ResponseHandler"] }, 
    {"name":"executeAsync","parameterTypes":["io.airlift.http.client.Request","io.airlift.http.client.ResponseHandler"] }, 
    {"name":"getActiveConnectionsPerDestination","parameterTypes":[] }, 
    {"name":"getConnectionStats","parameterTypes":[] }, 
    {"name":"getCreationLocation","parameterTypes":[] }, 
    {"name":"getCurrentQueuedTime","parameterTypes":[] }, 
    {"name":"getCurrentRequestSendTime","parameterTypes":[] }, 
    {"name":"getCurrentRequestTime","parameterTypes":[] }, 
    {"name":"getCurrentResponseProcessTime","parameterTypes":[] }, 
    {"name":"getCurrentResponseWaitTime","parameterTypes":[] }, 
    {"name":"getIdleConnectionsPerDestination","parameterTypes":[] }, 
    {"name":"getLoggerQueueSize","parameterTypes":[] }, 
    {"name":"getMaxContentLength","parameterTypes":[] }, 
    {"name":"getQueuedRequestsPerDestination","parameterTypes":[] }, 
    {"name":"getRequestFilters","parameterTypes":[] }, 
    {"name":"getRequestTimeoutMillis","parameterTypes":[] }, 
    {"name":"getStats","parameterTypes":[] }, 
    {"name":"getThreadPool","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.jetty.QueuedThreadPoolMBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getBusyThreads","parameterTypes":[] }, 
    {"name":"getIdleThreads","parameterTypes":[] }, 
    {"name":"getIdleTimeout","parameterTypes":[] }, 
    {"name":"getLowThreadsThreshold","parameterTypes":[] }, 
    {"name":"getMaxThreads","parameterTypes":[] }, 
    {"name":"getMinThreads","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPriority","parameterTypes":[] }, 
    {"name":"getQueueSize","parameterTypes":[] }, 
    {"name":"getThreads","parameterTypes":[] }, 
    {"name":"isLowOnThreads","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.client.jetty.RequestDistribution",
  "queryAllPublicMethods":true
},
{
  "name":"io.airlift.http.server.HttpServer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.http.server.HttpServer$ClientCertificate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.http.server.HttpServerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAdminMaxThreads","parameterTypes":[] }, 
    {"name":"getAdminMinThreads","parameterTypes":[] }, 
    {"name":"getAdminPort","parameterTypes":[] }, 
    {"name":"getHttp2InitialSessionReceiveWindowSize","parameterTypes":[] }, 
    {"name":"getHttp2InitialStreamReceiveWindowSize","parameterTypes":[] }, 
    {"name":"getHttp2InputBufferSize","parameterTypes":[] }, 
    {"name":"getHttp2MaxConcurrentStreams","parameterTypes":[] }, 
    {"name":"getHttp2StreamIdleTimeout","parameterTypes":[] }, 
    {"name":"getHttpAcceptQueueSize","parameterTypes":[] }, 
    {"name":"getHttpAcceptorThreads","parameterTypes":[] }, 
    {"name":"getHttpPort","parameterTypes":[] }, 
    {"name":"getHttpSelectorThreads","parameterTypes":[] }, 
    {"name":"getHttpsAcceptorThreads","parameterTypes":[] }, 
    {"name":"getHttpsSelectorThreads","parameterTypes":[] }, 
    {"name":"getLogHistory","parameterTypes":[] }, 
    {"name":"getLogMaxFileSize","parameterTypes":[] }, 
    {"name":"getLogPath","parameterTypes":[] }, 
    {"name":"getLogQueueSize","parameterTypes":[] }, 
    {"name":"getMaxRequestHeaderSize","parameterTypes":[] }, 
    {"name":"getMaxResponseHeaderSize","parameterTypes":[] }, 
    {"name":"getMaxThreads","parameterTypes":[] }, 
    {"name":"getMinThreads","parameterTypes":[] }, 
    {"name":"getNetworkMaxIdleTime","parameterTypes":[] }, 
    {"name":"getThreadMaxIdleTime","parameterTypes":[] }, 
    {"name":"getUserAuthFile","parameterTypes":[] }, 
    {"name":"isAdminEnabled","parameterTypes":[] }, 
    {"name":"isHttpEnabled","parameterTypes":[] }, 
    {"name":"isHttpsEnabled","parameterTypes":[] }, 
    {"name":"isLogCompressionEnabled","parameterTypes":[] }, 
    {"name":"isLogEnabled","parameterTypes":[] }, 
    {"name":"isProcessForwarded","parameterTypes":[] }, 
    {"name":"isShowStackTrace","parameterTypes":[] }, 
    {"name":"setAdminEnabled","parameterTypes":["boolean"] }, 
    {"name":"setAdminMaxThreads","parameterTypes":["int"] }, 
    {"name":"setAdminMinThreads","parameterTypes":["int"] }, 
    {"name":"setAdminPort","parameterTypes":["int"] }, 
    {"name":"setHttp2InitialSessionReceiveWindowSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttp2InitialStreamReceiveWindowSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttp2InputBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHttp2MaxConcurrentStreams","parameterTypes":["int"] }, 
    {"name":"setHttp2StreamIdleTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setHttpAcceptQueueSize","parameterTypes":["int"] }, 
    {"name":"setHttpAcceptorThreads","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setHttpEnabled","parameterTypes":["boolean"] }, 
    {"name":"setHttpPort","parameterTypes":["int"] }, 
    {"name":"setHttpSelectorThreads","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setHttpsAcceptorThreads","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setHttpsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setHttpsSelectorThreads","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setLogCompressionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLogEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLogHistory","parameterTypes":["int"] }, 
    {"name":"setLogMaxFileSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLogPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setLogQueueSize","parameterTypes":["int"] }, 
    {"name":"setMaxRequestHeaderSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxResponseHeaderSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxThreads","parameterTypes":["int"] }, 
    {"name":"setMinThreads","parameterTypes":["int"] }, 
    {"name":"setNetworkMaxIdleTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setProcessForwarded","parameterTypes":["boolean"] }, 
    {"name":"setShowStackTrace","parameterTypes":["boolean"] }, 
    {"name":"setThreadMaxIdleTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setUserAuthFile","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.airlift.http.server.HttpServerInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.http.server.HttpServerInfo$$FastClassByGuice$$6805295",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.server.LocalAnnouncementHttpServerInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.http.server.LocalAnnouncementHttpServerInfo$$FastClassByGuice$$21225274",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.server.TheServlet",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.http.server.testing.TestingHttpServer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.http.server.testing.TestingHttpServer$$FastClassByGuice$$7730759",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.http.server.testing.TestingHttpServerModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.jaxrs.AbstractJacksonMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType","javax.ws.rs.core.MultivaluedMap","java.io.InputStream"] }, 
    {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType","javax.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }
  ]
},
{
  "name":"io.airlift.jaxrs.JaxrsModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.jaxrs.JaxrsModule$$FastClassByGuice$$553419",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.jaxrs.JaxrsModule$JaxRsApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.jaxrs.JaxrsModule$JaxRsApplication$$FastClassByGuice$$23498233",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.jaxrs.JaxrsResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.jaxrs.JsonMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setUriInfo","parameterTypes":["javax.ws.rs.core.UriInfo"] }]
},
{
  "name":"io.airlift.jaxrs.JsonMapper$$FastClassByGuice$$10070235",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.jaxrs.ParsingExceptionMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"toResponse","parameterTypes":["io.airlift.jaxrs.ParsingException"] }
  ]
},
{
  "name":"io.airlift.jaxrs.ParsingExceptionMapper$$FastClassByGuice$$11951240",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.jaxrs.SmileMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.jaxrs.SmileMapper$$FastClassByGuice$$11159072",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.jmx.CacheStatsMBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getHitRate","parameterTypes":[] }, 
    {"name":"getMissRate","parameterTypes":[] }, 
    {"name":"getRequestCount","parameterTypes":[] }, 
    {"name":"size","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.jmx.testing.TestingJmxModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.json.JsonCodec",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.json.JsonCodecFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.json.JsonCodecFactory$$FastClassByGuice$$8919841",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.json.JsonCodecProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.json.JsonCodecProvider$$FastClassByGuice$$31891446",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.json.JsonKeySerde",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.json.JsonModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.json.ObjectMapperProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.airlift.json.ObjectMapperProvider$$FastClassByGuice$$23009024",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.node.NodeConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.node.NodeInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getBinarySpec","parameterTypes":[] }, 
    {"name":"getBindIp","parameterTypes":[] }, 
    {"name":"getConfigSpec","parameterTypes":[] }, 
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getExternalAddress","parameterTypes":[] }, 
    {"name":"getInstanceId","parameterTypes":[] }, 
    {"name":"getInternalAddress","parameterTypes":[] }, 
    {"name":"getLocation","parameterTypes":[] }, 
    {"name":"getNodeId","parameterTypes":[] }, 
    {"name":"getPool","parameterTypes":[] }, 
    {"name":"getStartTime","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.node.NodeInfo$$FastClassByGuice$$5450089",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.node.testing.TestingNodeModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.slice.BasicSliceInput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.BasicSliceOutput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.DynamicSliceOutput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.FixedLengthSliceInput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.OutputStreamSliceOutput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.Slice",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.SliceInput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.slice.SliceOutput",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.stats.CounterStat",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getFifteenMinute","parameterTypes":[] }, 
    {"name":"getFiveMinute","parameterTypes":[] }, 
    {"name":"getOneMinute","parameterTypes":[] }, 
    {"name":"getTotalCount","parameterTypes":[] }, 
    {"name":"merge","parameterTypes":["io.airlift.stats.CounterStat"] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"resetTo","parameterTypes":["io.airlift.stats.CounterStat"] }, 
    {"name":"snapshot","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["long"] }
  ]
},
{
  "name":"io.airlift.stats.DecayCounter",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["long"] }, 
    {"name":"duplicate","parameterTypes":[] }, 
    {"name":"getAlpha","parameterTypes":[] }, 
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getRate","parameterTypes":[] }, 
    {"name":"merge","parameterTypes":["io.airlift.stats.DecayCounter"] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"resetTo","parameterTypes":["io.airlift.stats.DecayCounter"] }, 
    {"name":"snapshot","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.Distribution",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["long"] }, 
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"duplicate","parameterTypes":[] }, 
    {"name":"getAvg","parameterTypes":[] }, 
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getP01","parameterTypes":[] }, 
    {"name":"getP05","parameterTypes":[] }, 
    {"name":"getP10","parameterTypes":[] }, 
    {"name":"getP25","parameterTypes":[] }, 
    {"name":"getP50","parameterTypes":[] }, 
    {"name":"getP75","parameterTypes":[] }, 
    {"name":"getP90","parameterTypes":[] }, 
    {"name":"getP95","parameterTypes":[] }, 
    {"name":"getP99","parameterTypes":[] }, 
    {"name":"getPercentiles","parameterTypes":[] }, 
    {"name":"getPercentiles","parameterTypes":["java.util.List"] }, 
    {"name":"getTotal","parameterTypes":[] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"snapshot","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.Distribution$DistributionSnapshot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["double","double","double","double","double","double","double","double","double","double","double","double","double","double"] }, 
    {"name":"getAvg","parameterTypes":[] }, 
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getP01","parameterTypes":[] }, 
    {"name":"getP05","parameterTypes":[] }, 
    {"name":"getP10","parameterTypes":[] }, 
    {"name":"getP25","parameterTypes":[] }, 
    {"name":"getP50","parameterTypes":[] }, 
    {"name":"getP75","parameterTypes":[] }, 
    {"name":"getP90","parameterTypes":[] }, 
    {"name":"getP95","parameterTypes":[] }, 
    {"name":"getP99","parameterTypes":[] }, 
    {"name":"getTotal","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.DistributionStat",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["long"] }, 
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"getAllTime","parameterTypes":[] }, 
    {"name":"getFifteenMinutes","parameterTypes":[] }, 
    {"name":"getFiveMinutes","parameterTypes":[] }, 
    {"name":"getOneMinute","parameterTypes":[] }, 
    {"name":"snapshot","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.GcMonitor",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getMajorGcCount","parameterTypes":[] }, 
    {"name":"getMajorGcTime","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.JmxGcMonitor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMajorGc","parameterTypes":[] }, 
    {"name":"getMajorGcCount","parameterTypes":[] }, 
    {"name":"getMajorGcTime","parameterTypes":[] }, 
    {"name":"getMinorGc","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.JmxGcMonitor$$FastClassByGuice$$257874186",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.stats.PauseMeter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"get10msTo50msPauses","parameterTypes":[] }, 
    {"name":"get10sTo1mPauses","parameterTypes":[] }, 
    {"name":"get1sTo10sPauses","parameterTypes":[] }, 
    {"name":"get500msTo1sPauses","parameterTypes":[] }, 
    {"name":"get50msTo500msPauses","parameterTypes":[] }, 
    {"name":"getCounts","parameterTypes":[] }, 
    {"name":"getGreaterThan1mPauses","parameterTypes":[] }, 
    {"name":"getLessThan10msPauses","parameterTypes":[] }, 
    {"name":"getSums","parameterTypes":[] }, 
    {"name":"getTotalPauseSeconds","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.PauseMeter$$FastClassByGuice$$130714219",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.stats.TDigest",
  "allDeclaredFields":true
},
{
  "name":"io.airlift.stats.TimeDistribution",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["long"] }, 
    {"name":"getAvg","parameterTypes":[] }, 
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getP50","parameterTypes":[] }, 
    {"name":"getP75","parameterTypes":[] }, 
    {"name":"getP90","parameterTypes":[] }, 
    {"name":"getP95","parameterTypes":[] }, 
    {"name":"getP99","parameterTypes":[] }, 
    {"name":"getPercentiles","parameterTypes":[] }, 
    {"name":"getUnit","parameterTypes":[] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"snapshot","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.stats.TimeStat",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["double","java.util.concurrent.TimeUnit"] }, 
    {"name":"add","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"addNanos","parameterTypes":["long"] }, 
    {"name":"getAllTime","parameterTypes":[] }, 
    {"name":"getFifteenMinutes","parameterTypes":[] }, 
    {"name":"getFiveMinutes","parameterTypes":[] }, 
    {"name":"getOneMinute","parameterTypes":[] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"snapshot","parameterTypes":[] }, 
    {"name":"time","parameterTypes":[] }, 
    {"name":"time","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"io.airlift.tracetoken.TraceTokenManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.tracetoken.TraceTokenManager$$FastClassByGuice$$46730113",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.airlift.tracetoken.TraceTokenModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.airlift.units.DataSize",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"toBytesValueString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.airlift.units.Duration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.airlift.units.MaxDataSize",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.units.MaxDataSizeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.units.MaxDuration",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.units.MaxDurationValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.units.MinDataSize",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.units.MinDataSizeValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.airlift.units.MinDuration",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"io.airlift.units.MinDurationValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.jsonwebtoken.Claims",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.ClaimsMutator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.Header",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.JwsHeader",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.impl.DefaultClaims",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.jsonwebtoken.impl.DefaultHeader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.impl.DefaultJwsHeader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.jsonwebtoken.impl.JwtMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.jsonwebtoken.impl.compression.DeflateCompressionCodec",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.jsonwebtoken.impl.compression.GzipCompressionCodec",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.BooleanDistinctStateSerializer_20230111_212629_2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.BooleanDistinctStateSerializer_20230111_212629_3",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CentralMomentsStateSerializer_20230111_212629_7",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CentralMomentsStateSerializer_20230111_212629_8",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CorrelationStateSerializer_20230111_212630_33",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CorrelationStateSerializer_20230111_212630_34",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CovarianceStateSerializer_20230111_212630_29",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CovarianceStateSerializer_20230111_212630_30",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.CursorProcessor_20230111_212706_39",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.DoubleStateSerializer_20230111_212629_15",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.DoubleStateSerializer_20230111_212629_17",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.DoubleStateSerializer_20230111_212629_19",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.DoubleStateSerializer_20230111_212629_21",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.DoubleStateSerializer_20230111_212630_23",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212629_12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212629_13",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212630_24",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212630_25",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212630_26",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212630_27",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongAndDoubleStateSerializer_20230111_212630_28",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongDoubleStateSerializer_20230111_212629_10",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongLongStateSerializer_20230111_212629_11",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_14",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_16",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_18",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_20",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_4",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212629_9",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212630_22",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.LongStateSerializer_20230111_212636_35",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.PageFilter_20230111_212706_40",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.PageWithPositionComparator_20230111_212701_36",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.PageWithPositionComparator_20230111_212706_38",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.PagesIndexComparator_20230111_212701_37",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.PagesIndexComparator_20230111_212707_41",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.RegressionStateSerializer_20230111_212630_31",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.RegressionStateSerializer_20230111_212630_32",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.Trino_testversion____20230111_212627_1",
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"<init>","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"io.trino.$gen.VarianceStateSerializer_20230111_212629_5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.$gen.VarianceStateSerializer_20230111_212629_6",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.FeaturesConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applyFaultTolerantExecutionDefaults","parameterTypes":[] }, 
    {"name":"getAggregationOperatorUnspillMemoryLimit","parameterTypes":[] }, 
    {"name":"getExchangeDataIntegrityVerification","parameterTypes":[] }, 
    {"name":"getFilterAndProjectMinOutputPageRowCount","parameterTypes":[] }, 
    {"name":"getFilterAndProjectMinOutputPageSize","parameterTypes":[] }, 
    {"name":"getMaxGroupingSets","parameterTypes":[] }, 
    {"name":"getMaxRecursionDepth","parameterTypes":[] }, 
    {"name":"getMemoryRevokingTarget","parameterTypes":[] }, 
    {"name":"getMemoryRevokingThreshold","parameterTypes":[] }, 
    {"name":"getRe2JDfaRetries","parameterTypes":[] }, 
    {"name":"getRe2JDfaStatesLimit","parameterTypes":[] }, 
    {"name":"getRegexLibrary","parameterTypes":[] }, 
    {"name":"getSpillMaxUsedSpaceThreshold","parameterTypes":[] }, 
    {"name":"getSpillerSpillPaths","parameterTypes":[] }, 
    {"name":"getSpillerThreads","parameterTypes":[] }, 
    {"name":"getWriterMinSize","parameterTypes":[] }, 
    {"name":"isAllowSetViewAuthorization","parameterTypes":[] }, 
    {"name":"isExchangeCompressionEnabled","parameterTypes":[] }, 
    {"name":"isFaultTolerantExecutionExchangeEncryptionEnabled","parameterTypes":[] }, 
    {"name":"isForceSpillingJoin","parameterTypes":[] }, 
    {"name":"isHideInaccessibleColumns","parameterTypes":[] }, 
    {"name":"isIncrementalHashArrayLoadFactorEnabled","parameterTypes":[] }, 
    {"name":"isLateMaterializationEnabled","parameterTypes":[] }, 
    {"name":"isLegacyCatalogRoles","parameterTypes":[] }, 
    {"name":"isLegacyUpdateDeleteImplementation","parameterTypes":[] }, 
    {"name":"isOmitDateTimeTypePrecision","parameterTypes":[] }, 
    {"name":"isPagesIndexEagerCompactionEnabled","parameterTypes":[] }, 
    {"name":"isParseDecimalLiteralsAsDouble","parameterTypes":[] }, 
    {"name":"isRedistributeWrites","parameterTypes":[] }, 
    {"name":"isScaleWriters","parameterTypes":[] }, 
    {"name":"isSpillEnabled","parameterTypes":[] }, 
    {"name":"setAggregationOperatorUnspillMemoryLimit","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setAllowSetViewAuthorization","parameterTypes":["boolean"] }, 
    {"name":"setExchangeCompressionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setExchangeDataIntegrityVerification","parameterTypes":["io.trino.FeaturesConfig$DataIntegrityVerification"] }, 
    {"name":"setFaultTolerantExecutionExchangeEncryptionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setFilterAndProjectMinOutputPageRowCount","parameterTypes":["int"] }, 
    {"name":"setFilterAndProjectMinOutputPageSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setForceSpillingJoin","parameterTypes":["boolean"] }, 
    {"name":"setHideInaccessibleColumns","parameterTypes":["boolean"] }, 
    {"name":"setIncrementalHashArrayLoadFactorEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLateMaterializationEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLegacyCatalogRoles","parameterTypes":["boolean"] }, 
    {"name":"setLegacyUpdateDeleteImplementation","parameterTypes":["boolean"] }, 
    {"name":"setMaxGroupingSets","parameterTypes":["int"] }, 
    {"name":"setMaxRecursionDepth","parameterTypes":["int"] }, 
    {"name":"setMemoryRevokingTarget","parameterTypes":["double"] }, 
    {"name":"setMemoryRevokingThreshold","parameterTypes":["double"] }, 
    {"name":"setOmitDateTimeTypePrecision","parameterTypes":["boolean"] }, 
    {"name":"setPagesIndexEagerCompactionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setParseDecimalLiteralsAsDouble","parameterTypes":["boolean"] }, 
    {"name":"setRe2JDfaRetries","parameterTypes":["int"] }, 
    {"name":"setRe2JDfaStatesLimit","parameterTypes":["int"] }, 
    {"name":"setRedistributeWrites","parameterTypes":["boolean"] }, 
    {"name":"setRegexLibrary","parameterTypes":["io.trino.sql.analyzer.RegexLibrary"] }, 
    {"name":"setScaleWriters","parameterTypes":["boolean"] }, 
    {"name":"setSpillEnabled","parameterTypes":["boolean"] }, 
    {"name":"setSpillMaxUsedSpaceThreshold","parameterTypes":["double"] }, 
    {"name":"setSpillerSpillPaths","parameterTypes":["java.lang.String"] }, 
    {"name":"setSpillerThreads","parameterTypes":["int"] }, 
    {"name":"setWriterMinSize","parameterTypes":["io.airlift.units.DataSize"] }
  ]
},
{
  "name":"io.trino.SessionRepresentation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.util.Optional","boolean","java.lang.String","java.util.Set","java.util.Optional","java.util.Set","java.util.Optional","java.util.Optional","java.util.Optional","io.trino.sql.SqlPath","java.util.Optional","io.trino.spi.type.TimeZoneKey","java.util.Locale","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Set","java.util.Set","io.trino.spi.session.ResourceEstimates","java.time.Instant","java.util.Map","java.util.Map","java.util.Map","java.util.Map","java.lang.String"] }, 
    {"name":"getCatalog","parameterTypes":[] }, 
    {"name":"getCatalogProperties","parameterTypes":[] }, 
    {"name":"getCatalogRoles","parameterTypes":[] }, 
    {"name":"getClientCapabilities","parameterTypes":[] }, 
    {"name":"getClientInfo","parameterTypes":[] }, 
    {"name":"getClientTags","parameterTypes":[] }, 
    {"name":"getEnabledRoles","parameterTypes":[] }, 
    {"name":"getGroups","parameterTypes":[] }, 
    {"name":"getLocale","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getPreparedStatements","parameterTypes":[] }, 
    {"name":"getPrincipal","parameterTypes":[] }, 
    {"name":"getProtocolName","parameterTypes":[] }, 
    {"name":"getQueryId","parameterTypes":[] }, 
    {"name":"getRemoteUserAddress","parameterTypes":[] }, 
    {"name":"getResourceEstimates","parameterTypes":[] }, 
    {"name":"getSchema","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":[] }, 
    {"name":"getStart","parameterTypes":[] }, 
    {"name":"getSystemProperties","parameterTypes":[] }, 
    {"name":"getTimeZone","parameterTypes":[] }, 
    {"name":"getTimeZoneKey","parameterTypes":[] }, 
    {"name":"getTraceToken","parameterTypes":[] }, 
    {"name":"getTransactionId","parameterTypes":[] }, 
    {"name":"getUser","parameterTypes":[] }, 
    {"name":"getUserAgent","parameterTypes":[] }, 
    {"name":"isClientTransactionSupport","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.SystemSessionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.SystemSessionProperties$$FastClassByGuice$$118334831",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.SystemSessionPropertiesProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.array.ReferenceCountMap",
  "allDeclaredFields":true
},
{
  "name":"io.trino.block.BlockJsonSerde$Deserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.block.BlockJsonSerde$Deserializer$$FastClassByGuice$$303434344",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.block.BlockJsonSerde$Serializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.block.BlockJsonSerde$Serializer$$FastClassByGuice$$302668468",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.block.BlockSerdeUtil",
  "methods":[
    {"name":"readBlock","parameterTypes":["io.trino.spi.block.BlockEncodingSerde","io.airlift.slice.Slice"] }, 
    {"name":"readBlockValue","parameterTypes":["io.trino.spi.block.BlockEncodingSerde","io.trino.spi.type.Type","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.cli.ClientOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.cli.Console",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.cli.Trino$VersionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.client.ClientTypeSignature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.util.List"] }, 
    {"name":"getArguments","parameterTypes":[] }, 
    {"name":"getRawType","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.ClientTypeSignatureParameter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getKind","parameterTypes":[] }, 
    {"name":"getValue","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.ClientTypeSignatureParameter$ClientTypeSignatureParameterDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.client.ClientTypeSignatureParameter$ParameterKind",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromJsonValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.trino.client.Column",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","io.trino.client.ClientTypeSignature"] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"getTypeSignature","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.ErrorLocation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.client.FailureInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.client.NodeVersion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.client.QueryData",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.client.QueryError",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.client.QueryResults",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.net.URI","java.net.URI","java.net.URI","java.util.List","java.util.List","io.trino.client.StatementStats","io.trino.client.QueryError","java.util.List","java.lang.String","java.lang.Long"] }, 
    {"name":"getColumns","parameterTypes":[] }, 
    {"name":"getData","parameterTypes":[] }, 
    {"name":"getError","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getInfoUri","parameterTypes":[] }, 
    {"name":"getNextUri","parameterTypes":[] }, 
    {"name":"getPartialCancelUri","parameterTypes":[] }, 
    {"name":"getStats","parameterTypes":[] }, 
    {"name":"getUpdateCount","parameterTypes":[] }, 
    {"name":"getUpdateType","parameterTypes":[] }, 
    {"name":"getWarnings","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.QueryStatusInfo",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.client.StageStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","boolean","int","int","int","int","int","long","long","long","long","long","int","boolean","java.util.List"] }, 
    {"name":"getCompletedSplits","parameterTypes":[] }, 
    {"name":"getCpuTimeMillis","parameterTypes":[] }, 
    {"name":"getFailedTasks","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":[] }, 
    {"name":"getPhysicalInputBytes","parameterTypes":[] }, 
    {"name":"getProcessedBytes","parameterTypes":[] }, 
    {"name":"getProcessedRows","parameterTypes":[] }, 
    {"name":"getQueuedSplits","parameterTypes":[] }, 
    {"name":"getRunningSplits","parameterTypes":[] }, 
    {"name":"getStageId","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getSubStages","parameterTypes":[] }, 
    {"name":"getTotalSplits","parameterTypes":[] }, 
    {"name":"getWallTimeMillis","parameterTypes":[] }, 
    {"name":"isCoordinatorOnly","parameterTypes":[] }, 
    {"name":"isDone","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.StatementStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","boolean","boolean","int","int","int","int","int","long","long","long","long","long","long","long","long","long","io.trino.client.StageStats"] }, 
    {"name":"getCompletedSplits","parameterTypes":[] }, 
    {"name":"getCpuTimeMillis","parameterTypes":[] }, 
    {"name":"getElapsedTimeMillis","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":[] }, 
    {"name":"getPeakMemoryBytes","parameterTypes":[] }, 
    {"name":"getPhysicalInputBytes","parameterTypes":[] }, 
    {"name":"getProcessedBytes","parameterTypes":[] }, 
    {"name":"getProcessedRows","parameterTypes":[] }, 
    {"name":"getProgressPercentage","parameterTypes":[] }, 
    {"name":"getQueuedSplits","parameterTypes":[] }, 
    {"name":"getQueuedTimeMillis","parameterTypes":[] }, 
    {"name":"getRootStage","parameterTypes":[] }, 
    {"name":"getRunningSplits","parameterTypes":[] }, 
    {"name":"getSpilledBytes","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getTotalSplits","parameterTypes":[] }, 
    {"name":"getWallTimeMillis","parameterTypes":[] }, 
    {"name":"isQueued","parameterTypes":[] }, 
    {"name":"isScheduled","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.client.Warning",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.client.Warning$Code",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.CatalogFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.CatalogManagerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getCatalogMangerKind","parameterTypes":[] }, 
    {"name":"setCatalogMangerKind","parameterTypes":["io.trino.connector.CatalogManagerConfig$CatalogMangerKind"] }
  ]
},
{
  "name":"io.trino.connector.CatalogManagerModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.CatalogProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.connector.CatalogHandle","java.lang.String","java.util.Map"] }, 
    {"name":"getCatalogHandle","parameterTypes":[] }, 
    {"name":"getConnectorName","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.connector.CatalogServiceProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.CatalogServiceProviderModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.CatalogServiceProviderModule$$FastClassByGuice$$38939665",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.CatalogServiceProviderModule$ConnectorAccessControlLazyRegister",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.CatalogServiceProviderModule$ConnectorAccessControlLazyRegister$$FastClassByGuice$$58551781",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.CatalogStore",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.CatalogStoreConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getCatalogStoreKind","parameterTypes":[] }, 
    {"name":"setCatalogStoreKind","parameterTypes":["io.trino.connector.CatalogStoreConfig$CatalogStoreKind"] }
  ]
},
{
  "name":"io.trino.connector.ConnectorAwareNodeManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.ConnectorCatalogServiceProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.ConnectorServicesProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.CoordinatorDynamicCatalogManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"stop","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.CoordinatorDynamicCatalogManager$$FastClassByGuice$$56340032",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.DefaultCatalogFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.DefaultCatalogFactory$$FastClassByGuice$$53490839",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.DynamicCatalogManagerModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.DynamicCatalogManagerModule$CoordinatorLazyRegister",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.DynamicCatalogManagerModule$CoordinatorLazyRegister$$FastClassByGuice$$56988098",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.LazyCatalogFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.LazyCatalogFactory$$FastClassByGuice$$54827226",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.informationschema.InformationSchemaColumnHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"getColumnName","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.connector.informationschema.InformationSchemaSplit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.List"] }, 
    {"name":"getAddresses","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.connector.informationschema.InformationSchemaTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toStringValue","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.informationschema.InformationSchemaTableHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","io.trino.connector.informationschema.InformationSchemaTable","java.util.Set","java.util.OptionalLong"] }, 
    {"name":"getCatalogName","parameterTypes":[] }, 
    {"name":"getLimit","parameterTypes":[] }, 
    {"name":"getPrefixes","parameterTypes":[] }, 
    {"name":"getTable","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.connector.informationschema.InformationSchemaTransactionHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.transaction.TransactionId"] }, 
    {"name":"getTransactionId","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.connector.system.AbstractPropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.system.AnalyzePropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.AnalyzePropertiesSystemTable$$FastClassByGuice$$280600721",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.CatalogSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.CatalogSystemTable$$FastClassByGuice$$273571796",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.ColumnPropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.ColumnPropertiesSystemTable$$FastClassByGuice$$279675597",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.GlobalSystemConnector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.GlobalSystemConnector$$FastClassByGuice$$168629902",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.KillQueryProcedure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"killQuery","parameterTypes":["java.lang.String","java.lang.String","io.trino.spi.connector.ConnectorSession"] }]
},
{
  "name":"io.trino.connector.system.KillQueryProcedure$$FastClassByGuice$$166890751",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.MaterializedViewPropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.MaterializedViewPropertiesSystemTable$$FastClassByGuice$$278609277",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.MaterializedViewSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.MaterializedViewSystemTable$$FastClassByGuice$$277807884",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.NodeSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.NodeSystemTable$$FastClassByGuice$$270531672",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.QuerySystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.QuerySystemTable$$FastClassByGuice$$271429979",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.RuleStatsSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.RuleStatsSystemTable$$FastClassByGuice$$282760613",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.SchemaPropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.SchemaPropertiesSystemTable$$FastClassByGuice$$275062705",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.SystemColumnHandle",
  "allDeclaredFields":true
},
{
  "name":"io.trino.connector.system.SystemConnectorModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.SystemConnectorModule$$FastClassByGuice$$43750716",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.TableCommentSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.TableCommentSystemTable$$FastClassByGuice$$274256192",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.TablePropertiesSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.TablePropertiesSystemTable$$FastClassByGuice$$276087857",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.TaskSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.TaskSystemTable$$FastClassByGuice$$272129163",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.TransactionsSystemTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.TransactionsSystemTable$$FastClassByGuice$$281630265",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.AttributeJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.AttributeJdbcTable$$FastClassByGuice$$283318444",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.CatalogJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.jdbc.CatalogJdbcTable$$FastClassByGuice$$285110153",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.ColumnJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.jdbc.ColumnJdbcTable$$FastClassByGuice$$286159596",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.JdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.connector.system.jdbc.ProcedureColumnJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.ProcedureColumnJdbcTable$$FastClassByGuice$$287980890",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.ProcedureJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.ProcedureJdbcTable$$FastClassByGuice$$288841892",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.PseudoColumnJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.PseudoColumnJdbcTable$$FastClassByGuice$$290411228",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.SchemaJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.jdbc.SchemaJdbcTable$$FastClassByGuice$$290700350",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.SuperTableJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.SuperTableJdbcTable$$FastClassByGuice$$292352438",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.SuperTypeJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.SuperTypeJdbcTable$$FastClassByGuice$$292594464",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.TableJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.jdbc.TableJdbcTable$$FastClassByGuice$$294403440",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.TableTypeJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.TableTypeJdbcTable$$FastClassByGuice$$294746374",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.TypesJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.connector.system.jdbc.TypesJdbcTable$$FastClassByGuice$$287272105",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.connector.system.jdbc.UdtJdbcTable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.connector.system.jdbc.UdtJdbcTable$$FastClassByGuice$$296260941",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.ComposableStatsCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.ComposableStatsCalculator$$FastClassByGuice$$198914569",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.CostCalculator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.cost.CostCalculator$EstimatedExchanges",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.cost.CostCalculatorUsingExchanges",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.CostCalculatorUsingExchanges$$FastClassByGuice$$200265355",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.CostCalculatorWithEstimatedExchanges",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.CostCalculatorWithEstimatedExchanges$$FastClassByGuice$$200905930",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.CostComparator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.CostComparator$$FastClassByGuice$$90492605",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.FilterStatsCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.FilterStatsCalculator$$FastClassByGuice$$88251641",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.LocalCostEstimate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.PlanCostEstimate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.PlanNodeStatsEstimate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.ScalarStatsCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.ScalarStatsCalculator$$FastClassByGuice$$88046242",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.StatsAndCosts",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Map","java.util.Map"] }, 
    {"name":"getCosts","parameterTypes":[] }, 
    {"name":"getStats","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.cost.StatsCalculator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.cost.StatsCalculatorModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.cost.StatsCalculatorModule$StatsRulesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.StatsCalculatorModule$StatsRulesProvider$$FastClassByGuice$$198052969",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.StatsNormalizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.cost.StatsNormalizer$$FastClassByGuice$$86989769",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.cost.SymbolStatsEstimate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.TaskCountEstimator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.cost.TaskCountEstimator$$FastClassByGuice$$90165547",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.dispatcher.DispatchExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.trino.dispatcher.DispatchExecutor$$FastClassByGuice$$82754207",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.dispatcher.DispatchManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"cancelQuery","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"createQuery","parameterTypes":["io.trino.spi.QueryId","io.trino.server.protocol.Slug","io.trino.server.SessionContext","java.lang.String"] }, 
    {"name":"createQueryId","parameterTypes":[] }, 
    {"name":"failQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.Throwable"] }, 
    {"name":"getDispatchInfo","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"getFullQueryInfo","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"getQueries","parameterTypes":[] }, 
    {"name":"getQuery","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"getQueryInfo","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"getQueuedQueries","parameterTypes":[] }, 
    {"name":"getRunningQueries","parameterTypes":[] }, 
    {"name":"getStats","parameterTypes":[] }, 
    {"name":"isQueryRegistered","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }, 
    {"name":"waitForDispatched","parameterTypes":["io.trino.spi.QueryId"] }
  ]
},
{
  "name":"io.trino.dispatcher.DispatchManager$$FastClassByGuice$$80263516",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.dispatcher.DispatchQueryFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.dispatcher.FailedDispatchQueryFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.dispatcher.FailedDispatchQueryFactory$$FastClassByGuice$$81431158",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.dispatcher.LocalDispatchQueryFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.dispatcher.LocalDispatchQueryFactory$$FastClassByGuice$$194849013",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.dispatcher.QueuedStatementResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cancelQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","long"] }, 
    {"name":"getStatus","parameterTypes":["io.trino.spi.QueryId","java.lang.String","long","io.airlift.units.Duration","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"postStatement","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders","javax.ws.rs.core.UriInfo"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.dispatcher.QueuedStatementResource$$FastClassByGuice$$64193915",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.event.QueryMonitor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.event.QueryMonitor$$FastClassByGuice$$72191682",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.event.QueryMonitorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxOutputStageJsonSize","parameterTypes":[] }, 
    {"name":"setMaxOutputStageJsonSize","parameterTypes":["io.airlift.units.DataSize"] }
  ]
},
{
  "name":"io.trino.event.SplitMonitor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.event.SplitMonitor$$FastClassByGuice$$169228782",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.eventlistener.EventListenerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.eventlistener.EventListenerConfig$$FastClassByGuice$$180106981",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.eventlistener.EventListenerManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.exchange.DirectExchangeInput",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.execution.TaskId","java.lang.String"] }, 
    {"name":"getLocation","parameterTypes":[] }, 
    {"name":"getTaskId","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.exchange.ExchangeInput",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.exchange.ExchangeManagerRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.exchange.ExchangeManagerRegistry$$FastClassByGuice$$187908982",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.AddColumnTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.AddColumnTask$$FastClassByGuice$$214310551",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CallTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CallTask$$FastClassByGuice$$215837887",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.ClusterSizeMonitor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getRequiredWorkers","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }, 
    {"name":"waitForMinimumWorkers","parameterTypes":["int","io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.trino.execution.ClusterSizeMonitor$$FastClassByGuice$$85737584",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CommentTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CommentTask$$FastClassByGuice$$216856666",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CommitTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CommitTask$$FastClassByGuice$$217108038",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CreateMaterializedViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CreateMaterializedViewTask$$FastClassByGuice$$230927781",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CreateRoleTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CreateRoleTask$$FastClassByGuice$$218713894",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CreateSchemaTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CreateSchemaTask$$FastClassByGuice$$219245783",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CreateTableTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CreateTableTask$$FastClassByGuice$$220228372",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.CreateViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.CreateViewTask$$FastClassByGuice$$221503604",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DataDefinitionExecution$DataDefinitionExecutionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DataDefinitionExecution$DataDefinitionExecutionFactory$$FastClassByGuice$$108933818",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DataDefinitionTask",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.DeallocateTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.DeallocateTask$$FastClassByGuice$$223232217",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DenyTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DenyTask$$FastClassByGuice$$224386179",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropColumnTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropColumnTask$$FastClassByGuice$$225077865",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropMaterializedViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropMaterializedViewTask$$FastClassByGuice$$232781583",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropRoleTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropRoleTask$$FastClassByGuice$$226066564",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropSchemaTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropSchemaTask$$FastClassByGuice$$227173784",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropTableTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropTableTask$$FastClassByGuice$$228433448",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DropViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.DropViewTask$$FastClassByGuice$$228673725",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.DynamicFilterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getLargeBroadcastMaxDistinctValuesPerDriver","parameterTypes":[] }, 
    {"name":"getLargeBroadcastMaxSizePerDriver","parameterTypes":[] }, 
    {"name":"getLargeBroadcastMaxSizePerOperator","parameterTypes":[] }, 
    {"name":"getLargeBroadcastRangeRowLimitPerDriver","parameterTypes":[] }, 
    {"name":"getLargeMaxSizePerFilter","parameterTypes":[] }, 
    {"name":"getLargePartitionedMaxDistinctValuesPerDriver","parameterTypes":[] }, 
    {"name":"getLargePartitionedMaxSizePerDriver","parameterTypes":[] }, 
    {"name":"getLargePartitionedMaxSizePerOperator","parameterTypes":[] }, 
    {"name":"getLargePartitionedRangeRowLimitPerDriver","parameterTypes":[] }, 
    {"name":"getSmallBroadcastMaxDistinctValuesPerDriver","parameterTypes":[] }, 
    {"name":"getSmallBroadcastMaxSizePerDriver","parameterTypes":[] }, 
    {"name":"getSmallBroadcastMaxSizePerOperator","parameterTypes":[] }, 
    {"name":"getSmallBroadcastRangeRowLimitPerDriver","parameterTypes":[] }, 
    {"name":"getSmallMaxSizePerFilter","parameterTypes":[] }, 
    {"name":"getSmallPartitionedMaxDistinctValuesPerDriver","parameterTypes":[] }, 
    {"name":"getSmallPartitionedMaxSizePerDriver","parameterTypes":[] }, 
    {"name":"getSmallPartitionedMaxSizePerOperator","parameterTypes":[] }, 
    {"name":"getSmallPartitionedRangeRowLimitPerDriver","parameterTypes":[] }, 
    {"name":"isEnableCoordinatorDynamicFiltersDistribution","parameterTypes":[] }, 
    {"name":"isEnableDynamicFiltering","parameterTypes":[] }, 
    {"name":"isEnableLargeDynamicFilters","parameterTypes":[] }, 
    {"name":"setEnableCoordinatorDynamicFiltersDistribution","parameterTypes":["boolean"] }, 
    {"name":"setEnableDynamicFiltering","parameterTypes":["boolean"] }, 
    {"name":"setEnableLargeDynamicFilters","parameterTypes":["boolean"] }, 
    {"name":"setLargeBroadcastMaxDistinctValuesPerDriver","parameterTypes":["int"] }, 
    {"name":"setLargeBroadcastMaxSizePerDriver","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLargeBroadcastMaxSizePerOperator","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLargeBroadcastRangeRowLimitPerDriver","parameterTypes":["int"] }, 
    {"name":"setLargeMaxSizePerFilter","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLargePartitionedMaxDistinctValuesPerDriver","parameterTypes":["int"] }, 
    {"name":"setLargePartitionedMaxSizePerDriver","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLargePartitionedMaxSizePerOperator","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setLargePartitionedRangeRowLimitPerDriver","parameterTypes":["int"] }, 
    {"name":"setSmallBroadcastMaxDistinctValuesPerDriver","parameterTypes":["int"] }, 
    {"name":"setSmallBroadcastMaxSizePerDriver","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSmallBroadcastMaxSizePerOperator","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSmallBroadcastRangeRowLimitPerDriver","parameterTypes":["int"] }, 
    {"name":"setSmallMaxSizePerFilter","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSmallPartitionedMaxDistinctValuesPerDriver","parameterTypes":["int"] }, 
    {"name":"setSmallPartitionedMaxSizePerDriver","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSmallPartitionedMaxSizePerOperator","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSmallPartitionedRangeRowLimitPerDriver","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.execution.ExecutionFailureInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.ExplainAnalyzeContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.ExplainAnalyzeContext$$FastClassByGuice$$98843840",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.FailureInjectionConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExpirationPeriod","parameterTypes":[] }, 
    {"name":"getRequestTimeout","parameterTypes":[] }, 
    {"name":"setExpirationPeriod","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRequestTimeout","parameterTypes":["io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.trino.execution.FailureInjector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.FailureInjector$$FastClassByGuice$$123619436",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.ForQueryExecution",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.GrantRolesTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.GrantRolesTask$$FastClassByGuice$$234033575",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.GrantTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.GrantTask$$FastClassByGuice$$232995309",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.LocationFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.MemoryRevokingScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.MemoryRevokingScheduler$$FastClassByGuice$$129950696",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.NodeTaskMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.NodeTaskMap$$FastClassByGuice$$122376250",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.PrepareTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.PrepareTask$$FastClassByGuice$$235199351",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.QueryExecution$QueryExecutionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.QueryExecutionMBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getExecutor","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.QueryExecutionMBean$$FastClassByGuice$$101520483",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.QueryIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.QueryIdGenerator$$FastClassByGuice$$76150267",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.QueryManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.QueryManagerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applyFaultTolerantExecutionDefaults","parameterTypes":[] }, 
    {"name":"getClientTimeout","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionMaxTaskSplitCount","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionMinTaskSplitCount","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionPartitionCount","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTargetTaskInputSize","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTargetTaskSplitCount","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTaskDescriptorStorageMaxMemory","parameterTypes":[] }, 
    {"name":"getHashPartitionCount","parameterTypes":[] }, 
    {"name":"getMaxConcurrentQueries","parameterTypes":[] }, 
    {"name":"getMaxQueryHistory","parameterTypes":[] }, 
    {"name":"getMaxQueryLength","parameterTypes":[] }, 
    {"name":"getMaxQueuedQueries","parameterTypes":[] }, 
    {"name":"getMaxStageCount","parameterTypes":[] }, 
    {"name":"getMaxTasksWaitingForNodePerStage","parameterTypes":[] }, 
    {"name":"getMinQueryExpireAge","parameterTypes":[] }, 
    {"name":"getMinScheduleSplitBatchSize","parameterTypes":[] }, 
    {"name":"getQueryExecutionPolicy","parameterTypes":[] }, 
    {"name":"getQueryExecutorPoolSize","parameterTypes":[] }, 
    {"name":"getQueryManagerExecutorPoolSize","parameterTypes":[] }, 
    {"name":"getQueryMaxCpuTime","parameterTypes":[] }, 
    {"name":"getQueryMaxExecutionTime","parameterTypes":[] }, 
    {"name":"getQueryMaxPlanningTime","parameterTypes":[] }, 
    {"name":"getQueryMaxRunTime","parameterTypes":[] }, 
    {"name":"getQueryMaxScanPhysicalBytes","parameterTypes":[] }, 
    {"name":"getQueryRetryAttempts","parameterTypes":[] }, 
    {"name":"getRemoteTaskMaxCallbackThreads","parameterTypes":[] }, 
    {"name":"getRemoteTaskMaxErrorDuration","parameterTypes":[] }, 
    {"name":"getRemoteTaskMinErrorDuration","parameterTypes":[] }, 
    {"name":"getRequiredWorkers","parameterTypes":[] }, 
    {"name":"getRequiredWorkersMaxWait","parameterTypes":[] }, 
    {"name":"getRetryDelayScaleFactor","parameterTypes":[] }, 
    {"name":"getRetryInitialDelay","parameterTypes":[] }, 
    {"name":"getRetryMaxDelay","parameterTypes":[] }, 
    {"name":"getRetryPolicy","parameterTypes":[] }, 
    {"name":"getScheduleSplitBatchSize","parameterTypes":[] }, 
    {"name":"getStageCountWarningThreshold","parameterTypes":[] }, 
    {"name":"getTaskRetryAttemptsOverall","parameterTypes":[] }, 
    {"name":"getTaskRetryAttemptsPerTask","parameterTypes":[] }, 
    {"name":"isFaultTolerantExecutionEventDrivenSchedulerEnabled","parameterTypes":[] }, 
    {"name":"isFaultTolerantExecutionForcePreferredWritePartitioningEnabled","parameterTypes":[] }, 
    {"name":"setClientTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setFaultTolerantExecutionEventDrivenSchedulerEnabled","parameterTypes":["boolean"] }, 
    {"name":"setFaultTolerantExecutionForcePreferredWritePartitioningEnabled","parameterTypes":["boolean"] }, 
    {"name":"setFaultTolerantExecutionMaxTaskSplitCount","parameterTypes":["int"] }, 
    {"name":"setFaultTolerantExecutionMinTaskSplitCount","parameterTypes":["int"] }, 
    {"name":"setFaultTolerantExecutionPartitionCount","parameterTypes":["int"] }, 
    {"name":"setFaultTolerantExecutionTargetTaskInputSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setFaultTolerantExecutionTargetTaskSplitCount","parameterTypes":["int"] }, 
    {"name":"setFaultTolerantExecutionTaskDescriptorStorageMaxMemory","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setHashPartitionCount","parameterTypes":["int"] }, 
    {"name":"setMaxConcurrentQueries","parameterTypes":["int"] }, 
    {"name":"setMaxQueryHistory","parameterTypes":["int"] }, 
    {"name":"setMaxQueryLength","parameterTypes":["int"] }, 
    {"name":"setMaxQueuedQueries","parameterTypes":["int"] }, 
    {"name":"setMaxStageCount","parameterTypes":["int"] }, 
    {"name":"setMaxTasksWaitingForNodePerStage","parameterTypes":["int"] }, 
    {"name":"setMinQueryExpireAge","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setMinScheduleSplitBatchSize","parameterTypes":["int"] }, 
    {"name":"setQueryExecutionPolicy","parameterTypes":["java.lang.String"] }, 
    {"name":"setQueryExecutorPoolSize","parameterTypes":["int"] }, 
    {"name":"setQueryManagerExecutorPoolSize","parameterTypes":["int"] }, 
    {"name":"setQueryMaxCpuTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setQueryMaxExecutionTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setQueryMaxPlanningTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setQueryMaxRunTime","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setQueryMaxScanPhysicalBytes","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setQueryRetryAttempts","parameterTypes":["int"] }, 
    {"name":"setRemoteTaskMaxCallbackThreads","parameterTypes":["int"] }, 
    {"name":"setRemoteTaskMaxErrorDuration","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRemoteTaskMinErrorDuration","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRequiredWorkers","parameterTypes":["int"] }, 
    {"name":"setRequiredWorkersMaxWait","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRetryDelayScaleFactor","parameterTypes":["double"] }, 
    {"name":"setRetryInitialDelay","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRetryMaxDelay","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setRetryPolicy","parameterTypes":["io.trino.operator.RetryPolicy"] }, 
    {"name":"setScheduleSplitBatchSize","parameterTypes":["int"] }, 
    {"name":"setStageCountWarningThreshold","parameterTypes":["int"] }, 
    {"name":"setTaskRetryAttemptsOverall","parameterTypes":["int"] }, 
    {"name":"setTaskRetryAttemptsPerTask","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.execution.QueryManagerStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getAbandonedQueries","parameterTypes":[] }, 
    {"name":"getCanceledQueries","parameterTypes":[] }, 
    {"name":"getCompletedQueries","parameterTypes":[] }, 
    {"name":"getConsumedCpuTimeSecs","parameterTypes":[] }, 
    {"name":"getConsumedInputBytes","parameterTypes":[] }, 
    {"name":"getConsumedInputRows","parameterTypes":[] }, 
    {"name":"getCpuInputByteRate","parameterTypes":[] }, 
    {"name":"getExecutionTime","parameterTypes":[] }, 
    {"name":"getExternalFailures","parameterTypes":[] }, 
    {"name":"getFailedQueries","parameterTypes":[] }, 
    {"name":"getInsufficientResourcesFailures","parameterTypes":[] }, 
    {"name":"getInternalFailures","parameterTypes":[] }, 
    {"name":"getQueuedTime","parameterTypes":[] }, 
    {"name":"getStartedQueries","parameterTypes":[] }, 
    {"name":"getSubmittedQueries","parameterTypes":[] }, 
    {"name":"getUserErrorFailures","parameterTypes":[] }, 
    {"name":"getWallInputBytesRate","parameterTypes":[] }, 
    {"name":"trackQueryStats","parameterTypes":["io.trino.dispatcher.DispatchQuery"] }, 
    {"name":"trackQueryStats","parameterTypes":["io.trino.execution.QueryExecution"] }
  ]
},
{
  "name":"io.trino.execution.QueryPerformanceFetcher",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.QueryPreparer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.QueryPreparer$$FastClassByGuice$$76772077",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RemoteTaskFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createRemoteTask","parameterTypes":["io.trino.Session","io.trino.execution.TaskId","io.trino.metadata.InternalNode","io.trino.sql.planner.PlanFragment","com.google.common.collect.Multimap","io.trino.execution.buffer.OutputBuffers","io.trino.execution.NodeTaskMap$PartitionedSplitCountTracker","java.util.Set","java.util.Optional","boolean"] }]
},
{
  "name":"io.trino.execution.RenameColumnTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RenameColumnTask$$FastClassByGuice$$236120369",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RenameMaterializedViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RenameMaterializedViewTask$$FastClassByGuice$$237628327",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RenameSchemaTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RenameSchemaTask$$FastClassByGuice$$238669290",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RenameTableTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RenameTableTask$$FastClassByGuice$$239980771",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RenameViewTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RenameViewTask$$FastClassByGuice$$240343601",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.ResetSessionTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.ResetSessionTask$$FastClassByGuice$$241904692",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RevokeRolesTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RevokeRolesTask$$FastClassByGuice$$243977072",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RevokeTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RevokeTask$$FastClassByGuice$$243212329",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.RollbackTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.RollbackTask$$FastClassByGuice$$244376331",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.ScheduledSplit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["long","io.trino.sql.planner.plan.PlanNodeId","io.trino.metadata.Split"] }, 
    {"name":"getPlanNodeId","parameterTypes":[] }, 
    {"name":"getSequenceId","parameterTypes":[] }, 
    {"name":"getSplit","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.SetColumnTypeTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetColumnTypeTask$$FastClassByGuice$$246308260",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetPathTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetPathTask$$FastClassByGuice$$247009905",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetPropertiesTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetPropertiesTask$$FastClassByGuice$$247699976",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetRoleTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetRoleTask$$FastClassByGuice$$250445186",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetSchemaAuthorizationTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetSchemaAuthorizationTask$$FastClassByGuice$$250991412",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetSessionTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetSessionTask$$FastClassByGuice$$252025818",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetTableAuthorizationTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetTableAuthorizationTask$$FastClassByGuice$$253117219",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetTimeZoneTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetTimeZoneTask$$FastClassByGuice$$249050912",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SetViewAuthorizationTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SetViewAuthorizationTask$$FastClassByGuice$$254204266",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SplitAssignment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","java.util.Set","boolean"] }, 
    {"name":"getPlanNodeId","parameterTypes":[] }, 
    {"name":"getSplits","parameterTypes":[] }, 
    {"name":"isNoMoreSplits","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.SqlQueryExecution$SqlQueryExecutionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.SqlQueryExecution$SqlQueryExecutionFactory$$FastClassByGuice$$107229436",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SqlQueryManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.SqlQueryManager$$FastClassByGuice$$191985653",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.SqlTaskIoStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getInputDataSize","parameterTypes":[] }, 
    {"name":"getInputPositions","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getOutputPositions","parameterTypes":[] }, 
    {"name":"merge","parameterTypes":["io.trino.execution.SqlTaskIoStats"] }, 
    {"name":"resetTo","parameterTypes":["io.trino.execution.SqlTaskIoStats"] }
  ]
},
{
  "name":"io.trino.execution.SqlTaskManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"abortTask","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"acknowledgeAndGetNewDynamicFilterDomains","parameterTypes":["io.trino.execution.TaskId","long"] }, 
    {"name":"acknowledgeTaskResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId","long"] }, 
    {"name":"addSourceTaskFailureListener","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.TaskFailureListener"] }, 
    {"name":"addStateChangeListener","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.StateMachine$StateChangeListener"] }, 
    {"name":"cancelTask","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"destroyTaskResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId"] }, 
    {"name":"failStuckSplitTasks","parameterTypes":[] }, 
    {"name":"failTask","parameterTypes":["io.trino.execution.TaskId","java.lang.Throwable"] }, 
    {"name":"getAllTaskInfo","parameterTypes":[] }, 
    {"name":"getAllTasks","parameterTypes":[] }, 
    {"name":"getFailedTasks","parameterTypes":[] }, 
    {"name":"getIoStats","parameterTypes":[] }, 
    {"name":"getQueryContext","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"getTaskInfo","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"getTaskInfo","parameterTypes":["io.trino.execution.TaskId","long"] }, 
    {"name":"getTaskInstanceId","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"getTaskNotificationExecutor","parameterTypes":[] }, 
    {"name":"getTaskResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId","long","io.airlift.units.DataSize"] }, 
    {"name":"getTaskStatus","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"getTaskStatus","parameterTypes":["io.trino.execution.TaskId","long"] }, 
    {"name":"getTraceToken","parameterTypes":["io.trino.execution.TaskId"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"updateTask","parameterTypes":["io.trino.Session","io.trino.execution.TaskId","java.util.Optional","java.util.List","io.trino.execution.buffer.OutputBuffers","java.util.Map"] }
  ]
},
{
  "name":"io.trino.execution.SqlTaskManager$$FastClassByGuice$$127009178",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.StartTransactionTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.StartTransactionTask$$FastClassByGuice$$255378328",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.TableExecuteContextManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.TableExecuteContextManager$$FastClassByGuice$$128098934",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.TaskId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.execution.TaskInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.execution.TaskStatus","org.joda.time.DateTime","io.trino.execution.buffer.OutputBufferInfo","java.util.Set","io.trino.operator.TaskStats","java.util.Optional","boolean"] }, 
    {"name":"getEstimatedMemory","parameterTypes":[] }, 
    {"name":"getLastHeartbeat","parameterTypes":[] }, 
    {"name":"getNoMoreSplits","parameterTypes":[] }, 
    {"name":"getOutputBuffers","parameterTypes":[] }, 
    {"name":"getStats","parameterTypes":[] }, 
    {"name":"getTaskStatus","parameterTypes":[] }, 
    {"name":"isNeedsPlan","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.TaskManagementExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.TaskManagementExecutor$$FastClassByGuice$$126807551",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.TaskManagerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applyFaultTolerantExecutionDefaults","parameterTypes":[] }, 
    {"name":"getClientTimeout","parameterTypes":[] }, 
    {"name":"getHttpResponseThreads","parameterTypes":[] }, 
    {"name":"getHttpTimeoutThreads","parameterTypes":[] }, 
    {"name":"getInfoMaxAge","parameterTypes":[] }, 
    {"name":"getInfoUpdateInterval","parameterTypes":[] }, 
    {"name":"getInitialSplitsPerNode","parameterTypes":[] }, 
    {"name":"getInterruptStuckSplitTasksDetectionInterval","parameterTypes":[] }, 
    {"name":"getInterruptStuckSplitTasksTimeout","parameterTypes":[] }, 
    {"name":"getInterruptStuckSplitTasksWarningThreshold","parameterTypes":[] }, 
    {"name":"getLevelTimeMultiplier","parameterTypes":[] }, 
    {"name":"getMaxDriversPerTask","parameterTypes":[] }, 
    {"name":"getMaxIndexMemoryUsage","parameterTypes":[] }, 
    {"name":"getMaxLocalExchangeBufferSize","parameterTypes":[] }, 
    {"name":"getMaxPagePartitioningBufferSize","parameterTypes":[] }, 
    {"name":"getMaxPartialAggregationMemoryUsage","parameterTypes":[] }, 
    {"name":"getMaxPartialTopNMemory","parameterTypes":[] }, 
    {"name":"getMaxWorkerThreads","parameterTypes":[] }, 
    {"name":"getMinDrivers","parameterTypes":[] }, 
    {"name":"getMinDriversPerTask","parameterTypes":[] }, 
    {"name":"getPartitionedWriterCount","parameterTypes":[] }, 
    {"name":"getScaleWritersMaxWriterCount","parameterTypes":[] }, 
    {"name":"getSinkMaxBroadcastBufferSize","parameterTypes":[] }, 
    {"name":"getSinkMaxBufferSize","parameterTypes":[] }, 
    {"name":"getSplitConcurrencyAdjustmentInterval","parameterTypes":[] }, 
    {"name":"getStatusRefreshMaxWait","parameterTypes":[] }, 
    {"name":"getTaskConcurrency","parameterTypes":[] }, 
    {"name":"getTaskNotificationThreads","parameterTypes":[] }, 
    {"name":"getTaskYieldThreads","parameterTypes":[] }, 
    {"name":"getWriterCount","parameterTypes":[] }, 
    {"name":"isInterruptStuckSplitTasksEnabled","parameterTypes":[] }, 
    {"name":"isPerOperatorCpuTimerEnabled","parameterTypes":[] }, 
    {"name":"isScaleWritersEnabled","parameterTypes":[] }, 
    {"name":"isShareIndexLoading","parameterTypes":[] }, 
    {"name":"isStatisticsCpuTimerEnabled","parameterTypes":[] }, 
    {"name":"isTaskCpuTimerEnabled","parameterTypes":[] }, 
    {"name":"setClientTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setHttpResponseThreads","parameterTypes":["int"] }, 
    {"name":"setHttpTimeoutThreads","parameterTypes":["int"] }, 
    {"name":"setInfoMaxAge","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setInfoUpdateInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setInitialSplitsPerNode","parameterTypes":["int"] }, 
    {"name":"setInterruptStuckSplitTasksDetectionInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setInterruptStuckSplitTasksEnabled","parameterTypes":["boolean"] }, 
    {"name":"setInterruptStuckSplitTasksTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setInterruptStuckSplitTasksWarningThreshold","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setLevelTimeMultiplier","parameterTypes":["java.math.BigDecimal"] }, 
    {"name":"setMaxDriversPerTask","parameterTypes":["int"] }, 
    {"name":"setMaxIndexMemoryUsage","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxLocalExchangeBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxPagePartitioningBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxPartialAggregationMemoryUsage","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxPartialTopNMemory","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxWorkerThreads","parameterTypes":["int"] }, 
    {"name":"setMinDrivers","parameterTypes":["int"] }, 
    {"name":"setMinDriversPerTask","parameterTypes":["int"] }, 
    {"name":"setPartitionedWriterCount","parameterTypes":["int"] }, 
    {"name":"setPerOperatorCpuTimerEnabled","parameterTypes":["boolean"] }, 
    {"name":"setScaleWritersEnabled","parameterTypes":["boolean"] }, 
    {"name":"setScaleWritersMaxWriterCount","parameterTypes":["int"] }, 
    {"name":"setShareIndexLoading","parameterTypes":["boolean"] }, 
    {"name":"setSinkMaxBroadcastBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSinkMaxBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSplitConcurrencyAdjustmentInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setStatisticsCpuTimerEnabled","parameterTypes":["boolean"] }, 
    {"name":"setStatusRefreshMaxWait","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setTaskConcurrency","parameterTypes":["int"] }, 
    {"name":"setTaskCpuTimerEnabled","parameterTypes":["boolean"] }, 
    {"name":"setTaskNotificationThreads","parameterTypes":["int"] }, 
    {"name":"setTaskYieldThreads","parameterTypes":["int"] }, 
    {"name":"setWriterCount","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.execution.TaskState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.TaskStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.execution.TaskId","java.lang.String","long","io.trino.execution.TaskState","java.net.URI","java.lang.String","java.util.List","int","int","io.trino.execution.buffer.OutputBufferStatus","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","long","io.airlift.units.Duration","long","long","long"] }, 
    {"name":"getDynamicFiltersVersion","parameterTypes":[] }, 
    {"name":"getFailures","parameterTypes":[] }, 
    {"name":"getFullGcCount","parameterTypes":[] }, 
    {"name":"getFullGcTime","parameterTypes":[] }, 
    {"name":"getMemoryReservation","parameterTypes":[] }, 
    {"name":"getNodeId","parameterTypes":[] }, 
    {"name":"getOutputBufferStatus","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getPeakMemoryReservation","parameterTypes":[] }, 
    {"name":"getPhysicalWrittenDataSize","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getRunningPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getRunningPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getSelf","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getTaskId","parameterTypes":[] }, 
    {"name":"getTaskInstanceId","parameterTypes":[] }, 
    {"name":"getVersion","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.TruncateTableTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.TruncateTableTask$$FastClassByGuice$$230170249",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.UseTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.UseTask$$FastClassByGuice$$256356418",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.buffer.BufferState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.buffer.OutputBufferInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","io.trino.execution.buffer.BufferState","boolean","boolean","long","long","long","long","java.util.Optional","java.util.Optional","java.util.Optional"] }, 
    {"name":"getPipelinedBufferStates","parameterTypes":[] }, 
    {"name":"getSpoolingOutputStats","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getTotalBufferedBytes","parameterTypes":[] }, 
    {"name":"getTotalBufferedPages","parameterTypes":[] }, 
    {"name":"getTotalPagesSent","parameterTypes":[] }, 
    {"name":"getTotalRowsSent","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"getUtilization","parameterTypes":[] }, 
    {"name":"isCanAddBuffers","parameterTypes":[] }, 
    {"name":"isCanAddPages","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.buffer.OutputBufferStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.OptionalLong","boolean","boolean"] }, 
    {"name":"getOutputBuffersVersion","parameterTypes":[] }, 
    {"name":"isExchangeSinkInstanceHandleUpdateRequired","parameterTypes":[] }, 
    {"name":"isOverutilized","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.buffer.OutputBuffers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getVersion","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.buffer.PageDeserializer",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PageDeserializer$ReadBuffer",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PageDeserializer$SerializedPageInput",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PageSerializer",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PageSerializer$SerializedPageOutput",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PageSerializer$WriteBuffer",
  "allDeclaredFields":true
},
{
  "name":"io.trino.execution.buffer.PipelinedBufferInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.buffer.PipelinedOutputBuffers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["long","io.trino.execution.buffer.PipelinedOutputBuffers$BufferType","java.util.Map","boolean"] }, 
    {"name":"getBuffers","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"isNoMoreBufferIds","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.buffer.PipelinedOutputBuffers$BufferType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromString","parameterTypes":["java.lang.String"] }, 
    {"name":"getId","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.buffer.SpoolingOutputStats$Snapshot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.executor.MultilevelSplitQueue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"computeLevel","parameterTypes":["long"] }, 
    {"name":"getLevel0Time","parameterTypes":[] }, 
    {"name":"getLevel1Time","parameterTypes":[] }, 
    {"name":"getLevel2Time","parameterTypes":[] }, 
    {"name":"getLevel3Time","parameterTypes":[] }, 
    {"name":"getLevel4Time","parameterTypes":[] }, 
    {"name":"getLevelMinPriority","parameterTypes":["int","long"] }, 
    {"name":"getSelectedCountLevel0","parameterTypes":[] }, 
    {"name":"getSelectedCountLevel1","parameterTypes":[] }, 
    {"name":"getSelectedCountLevel2","parameterTypes":[] }, 
    {"name":"getSelectedCountLevel3","parameterTypes":[] }, 
    {"name":"getSelectedCountLevel4","parameterTypes":[] }, 
    {"name":"offer","parameterTypes":["io.trino.execution.executor.PrioritizedSplitRunner"] }, 
    {"name":"remove","parameterTypes":["io.trino.execution.executor.PrioritizedSplitRunner"] }, 
    {"name":"removeAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"take","parameterTypes":[] }, 
    {"name":"updatePriority","parameterTypes":["io.trino.execution.executor.Priority","long","long"] }
  ]
},
{
  "name":"io.trino.execution.executor.MultilevelSplitQueue$$FastClassByGuice$$134679415",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.executor.TaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"addTask","parameterTypes":["io.trino.execution.TaskId","java.util.function.DoubleSupplier","int","io.airlift.units.Duration","java.util.OptionalInt"] }, 
    {"name":"enqueueSplits","parameterTypes":["io.trino.execution.executor.TaskHandle","boolean","java.util.List"] }, 
    {"name":"getBlockedQuantaWallTime","parameterTypes":[] }, 
    {"name":"getBlockedSplits","parameterTypes":[] }, 
    {"name":"getCompletedSplitsLevel0","parameterTypes":[] }, 
    {"name":"getCompletedSplitsLevel1","parameterTypes":[] }, 
    {"name":"getCompletedSplitsLevel2","parameterTypes":[] }, 
    {"name":"getCompletedSplitsLevel3","parameterTypes":[] }, 
    {"name":"getCompletedSplitsLevel4","parameterTypes":[] }, 
    {"name":"getCompletedTasksLevel0","parameterTypes":[] }, 
    {"name":"getCompletedTasksLevel1","parameterTypes":[] }, 
    {"name":"getCompletedTasksLevel2","parameterTypes":[] }, 
    {"name":"getCompletedTasksLevel3","parameterTypes":[] }, 
    {"name":"getCompletedTasksLevel4","parameterTypes":[] }, 
    {"name":"getGlobalCpuTimeMicros","parameterTypes":[] }, 
    {"name":"getGlobalScheduledTimeMicros","parameterTypes":[] }, 
    {"name":"getIntermediateSplitCpuTime","parameterTypes":[] }, 
    {"name":"getIntermediateSplitScheduledTime","parameterTypes":[] }, 
    {"name":"getIntermediateSplitWaitTime","parameterTypes":[] }, 
    {"name":"getIntermediateSplitWallTime","parameterTypes":[] }, 
    {"name":"getIntermediateSplits","parameterTypes":[] }, 
    {"name":"getLeafSplitCpuTime","parameterTypes":[] }, 
    {"name":"getLeafSplitScheduledTime","parameterTypes":[] }, 
    {"name":"getLeafSplitWaitTime","parameterTypes":[] }, 
    {"name":"getLeafSplitWallTime","parameterTypes":[] }, 
    {"name":"getLeafSplitsSize","parameterTypes":[] }, 
    {"name":"getMaxActiveSplitsInfo","parameterTypes":[] }, 
    {"name":"getMinimumNumberOfDrivers","parameterTypes":[] }, 
    {"name":"getProcessorExecutor","parameterTypes":[] }, 
    {"name":"getRunAwaySplitCount","parameterTypes":[] }, 
    {"name":"getRunnerThreads","parameterTypes":[] }, 
    {"name":"getRunningSplits","parameterTypes":[] }, 
    {"name":"getRunningTasksLevel0","parameterTypes":[] }, 
    {"name":"getRunningTasksLevel1","parameterTypes":[] }, 
    {"name":"getRunningTasksLevel2","parameterTypes":[] }, 
    {"name":"getRunningTasksLevel3","parameterTypes":[] }, 
    {"name":"getRunningTasksLevel4","parameterTypes":[] }, 
    {"name":"getSplitQueuedTime","parameterTypes":[] }, 
    {"name":"getSplitWallTime","parameterTypes":[] }, 
    {"name":"getStuckSplitTaskIds","parameterTypes":["io.airlift.units.Duration","java.util.function.Predicate"] }, 
    {"name":"getTasks","parameterTypes":[] }, 
    {"name":"getTotalSplits","parameterTypes":[] }, 
    {"name":"getUnblockedQuantaWallTime","parameterTypes":[] }, 
    {"name":"getWaitingSplits","parameterTypes":[] }, 
    {"name":"removeTask","parameterTypes":["io.trino.execution.executor.TaskHandle"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.executor.TaskExecutor$$FastClassByGuice$$133745118",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.resourcegroups.InternalResourceGroupManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"addConfigurationManagerFactory","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupConfigurationManagerFactory"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getConfigurationManager","parameterTypes":[] }, 
    {"name":"getQueriesQueuedOnInternal","parameterTypes":[] }, 
    {"name":"loadConfigurationManager","parameterTypes":[] }, 
    {"name":"selectGroup","parameterTypes":["io.trino.spi.resourcegroups.SelectionCriteria"] }, 
    {"name":"setConfigurationManager","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"submit","parameterTypes":["io.trino.execution.ManagedQueryExecution","io.trino.spi.resourcegroups.SelectionContext","java.util.concurrent.Executor"] }, 
    {"name":"tryGetPathToRoot","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupId"] }, 
    {"name":"tryGetResourceGroupInfo","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupId"] }
  ]
},
{
  "name":"io.trino.execution.resourcegroups.InternalResourceGroupManager$$FastClassByGuice$$78293906",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.resourcegroups.LegacyResourceGroupConfigurationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.resourcegroups.LegacyResourceGroupConfigurationManager$$FastClassByGuice$$78698810",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.resourcegroups.ResourceGroupManager",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addConfigurationManagerFactory","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupConfigurationManagerFactory"] }, 
    {"name":"loadConfigurationManager","parameterTypes":[] }, 
    {"name":"selectGroup","parameterTypes":["io.trino.spi.resourcegroups.SelectionCriteria"] }, 
    {"name":"submit","parameterTypes":["io.trino.execution.ManagedQueryExecution","io.trino.spi.resourcegroups.SelectionContext","java.util.concurrent.Executor"] }, 
    {"name":"tryGetPathToRoot","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupId"] }, 
    {"name":"tryGetResourceGroupInfo","parameterTypes":["io.trino.spi.resourcegroups.ResourceGroupId"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.BinPackingNodeAllocatorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.scheduler.BinPackingNodeAllocatorService$$FastClassByGuice$$84398836",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.EventDrivenTaskSourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.scheduler.EventDrivenTaskSourceFactory$$FastClassByGuice$$103854371",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.NodeAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.NodeAllocatorService",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.NodeScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"calculateLowWatermark","parameterTypes":["long"] }, 
    {"name":"canAssignSplitBasedOnWeight","parameterTypes":["long","long","io.trino.spi.SplitWeight"] }, 
    {"name":"createNodeSelector","parameterTypes":["io.trino.Session","java.util.Optional"] }, 
    {"name":"filterNodes","parameterTypes":["io.trino.execution.scheduler.NodeMap","boolean","java.util.Set"] }, 
    {"name":"getAllNodes","parameterTypes":["io.trino.execution.scheduler.NodeMap","boolean"] }, 
    {"name":"randomizedNodes","parameterTypes":["io.trino.execution.scheduler.NodeMap","boolean","java.util.Set"] }, 
    {"name":"selectDistributionNodes","parameterTypes":["io.trino.execution.scheduler.NodeMap","io.trino.execution.NodeTaskMap","long","long","int","java.util.Set","java.util.List","io.trino.execution.scheduler.BucketNodeMap"] }, 
    {"name":"selectExactNodes","parameterTypes":["io.trino.execution.scheduler.NodeMap","java.util.List","boolean"] }, 
    {"name":"selectNodes","parameterTypes":["int","java.util.Iterator"] }, 
    {"name":"toWhenHasSplitQueueSpaceFuture","parameterTypes":["java.util.List","long"] }, 
    {"name":"toWhenHasSplitQueueSpaceFuture","parameterTypes":["java.util.Set","java.util.List","long"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.NodeScheduler$$FastClassByGuice$$121102410",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.NodeSchedulerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAllowedNoMatchingNodePeriod","parameterTypes":[] }, 
    {"name":"getMaxAdjustedPendingSplitsWeightPerTask","parameterTypes":[] }, 
    {"name":"getMaxSplitsPerNode","parameterTypes":[] }, 
    {"name":"getMaxUnacknowledgedSplitsPerTask","parameterTypes":[] }, 
    {"name":"getMinCandidates","parameterTypes":[] }, 
    {"name":"getMinPendingSplitsPerTask","parameterTypes":[] }, 
    {"name":"getNodeAllocatorType","parameterTypes":[] }, 
    {"name":"getNodeSchedulerPolicy","parameterTypes":[] }, 
    {"name":"getOptimizedLocalScheduling","parameterTypes":[] }, 
    {"name":"getSplitsBalancingPolicy","parameterTypes":[] }, 
    {"name":"isIncludeCoordinator","parameterTypes":[] }, 
    {"name":"setAllowedNoMatchingNodePeriod","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setIncludeCoordinator","parameterTypes":["boolean"] }, 
    {"name":"setMaxAdjustedPendingSplitsWeightPerTask","parameterTypes":["int"] }, 
    {"name":"setMaxSplitsPerNode","parameterTypes":["int"] }, 
    {"name":"setMaxUnacknowledgedSplitsPerTask","parameterTypes":["int"] }, 
    {"name":"setMinCandidates","parameterTypes":["int"] }, 
    {"name":"setMinPendingSplitsPerTask","parameterTypes":["int"] }, 
    {"name":"setNodeAllocatorType","parameterTypes":["java.lang.String"] }, 
    {"name":"setNodeSchedulerPolicy","parameterTypes":["java.lang.String"] }, 
    {"name":"setOptimizedLocalScheduling","parameterTypes":["boolean"] }, 
    {"name":"setSplitsBalancingPolicy","parameterTypes":["io.trino.execution.scheduler.NodeSchedulerConfig$SplitsBalancingPolicy"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.NodeSelectorFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.PartitionMemoryEstimatorFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.SplitSchedulerStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getGetSplitTime","parameterTypes":[] }, 
    {"name":"getSleepTime","parameterTypes":[] }, 
    {"name":"getSplitQueuesFull","parameterTypes":[] }, 
    {"name":"getSplitsScheduledPerIteration","parameterTypes":[] }, 
    {"name":"getWaitingForSource","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.execution.scheduler.SplitSchedulerStats$$FastClassByGuice$$102805538",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.StageTaskSourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.scheduler.StageTaskSourceFactory$$FastClassByGuice$$209731688",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.TaskDescriptorStorage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"destroy","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"get","parameterTypes":["io.trino.execution.StageId","int"] }, 
    {"name":"getReservedBytes","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":["io.trino.spi.QueryId"] }, 
    {"name":"put","parameterTypes":["io.trino.execution.StageId","io.trino.execution.scheduler.TaskDescriptor"] }, 
    {"name":"remove","parameterTypes":["io.trino.execution.StageId","int"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.TaskDescriptorStorage$$FastClassByGuice$$105107614",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.TaskExecutionStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAbortedTasks","parameterTypes":[] }, 
    {"name":"getFailedTasks","parameterTypes":[] }, 
    {"name":"getFinishedTasks","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["io.trino.execution.TaskInfo"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.TaskExecutionStats$$FastClassByGuice$$106044666",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.TaskExecutionStats$ExecutionStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getCpuTime","parameterTypes":[] }, 
    {"name":"getElapsedTime","parameterTypes":[] }, 
    {"name":"getInputBlockedTime","parameterTypes":[] }, 
    {"name":"getOutputBlockedTime","parameterTypes":[] }, 
    {"name":"getPeakMemoryReservationInBytes","parameterTypes":[] }, 
    {"name":"getScheduledTime","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["io.trino.operator.TaskStats"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.TaskExecutionStats$FailedTasksStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getExternalError","parameterTypes":[] }, 
    {"name":"getInsufficientResources","parameterTypes":[] }, 
    {"name":"getInternalError","parameterTypes":[] }, 
    {"name":"getUserError","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["io.trino.execution.TaskInfo"] }
  ]
},
{
  "name":"io.trino.execution.scheduler.TaskSourceFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.UniformNodeSelectorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.scheduler.UniformNodeSelectorFactory$$FastClassByGuice$$258965812",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.UniformNodeSelectorModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.policy.AllAtOnceExecutionPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.scheduler.policy.AllAtOnceExecutionPolicy$$FastClassByGuice$$210996722",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.policy.ExecutionPolicy",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.execution.scheduler.policy.LegacyPhasedExecutionPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.execution.scheduler.policy.LegacyPhasedExecutionPolicy$$FastClassByGuice$$212275638",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.scheduler.policy.PhasedExecutionPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.execution.scheduler.policy.PhasedExecutionPolicy$$FastClassByGuice$$213501420",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.execution.warnings.WarningCollectorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxWarnings","parameterTypes":[] }, 
    {"name":"setMaxWarnings","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.execution.warnings.WarningCollectorFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.failuredetector.FailureDetector",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getFailed","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":["io.trino.spi.HostAddress"] }
  ]
},
{
  "name":"io.trino.failuredetector.FailureDetectorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExpirationGraceInterval","parameterTypes":[] }, 
    {"name":"getFailureRatioThreshold","parameterTypes":[] }, 
    {"name":"getHeartbeatInterval","parameterTypes":[] }, 
    {"name":"getWarmupInterval","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setExpirationGraceInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setFailureRatioThreshold","parameterTypes":["double"] }, 
    {"name":"setHeartbeatInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setWarmupInterval","parameterTypes":["io.airlift.units.Duration"] }
  ]
},
{
  "name":"io.trino.failuredetector.FailureDetectorModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.failuredetector.ForFailureDetector",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.failuredetector.HeartbeatFailureDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getActiveCount","parameterTypes":[] }, 
    {"name":"getExecutor","parameterTypes":[] }, 
    {"name":"getFailed","parameterTypes":[] }, 
    {"name":"getFailedCount","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":["io.trino.spi.HostAddress"] }, 
    {"name":"getStats","parameterTypes":[] }, 
    {"name":"getTotalCount","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.failuredetector.HeartbeatFailureDetector$$FastClassByGuice$$68729819",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.index.IndexManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.index.IndexManager$$FastClassByGuice$$164708668",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.ClusterMemoryManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"addChangeListener","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getClusterMemoryBytes","parameterTypes":[] }, 
    {"name":"getClusterTotalMemoryReservation","parameterTypes":[] }, 
    {"name":"getClusterUserMemoryReservation","parameterTypes":[] }, 
    {"name":"getNumberOfLeakedQueries","parameterTypes":[] }, 
    {"name":"getQueriesKilledDueToOutOfMemory","parameterTypes":[] }, 
    {"name":"getTasksKilledDueToOutOfMemory","parameterTypes":[] }, 
    {"name":"getTotalAvailableProcessors","parameterTypes":[] }, 
    {"name":"getWorkerMemoryInfo","parameterTypes":[] }, 
    {"name":"process","parameterTypes":["java.lang.Iterable","java.util.function.Supplier"] }
  ]
},
{
  "name":"io.trino.memory.ClusterMemoryManager$$FastClassByGuice$$83158641",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.ClusterMemoryPool",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getAssignedQueries","parameterTypes":[] }, 
    {"name":"getBlockedNodes","parameterTypes":[] }, 
    {"name":"getFreeDistributedBytes","parameterTypes":[] }, 
    {"name":"getInfo","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":[] }, 
    {"name":"getQueryMemoryReservations","parameterTypes":[] }, 
    {"name":"getQueryMemoryRevocableReservations","parameterTypes":[] }, 
    {"name":"getReservedDistributedBytes","parameterTypes":[] }, 
    {"name":"getReservedRevocableDistributedBytes","parameterTypes":[] }, 
    {"name":"getTotalDistributedBytes","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["java.util.List","int"] }
  ]
},
{
  "name":"io.trino.memory.ForMemoryManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.memory.LocalMemoryManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.memory.LocalMemoryManager$$FastClassByGuice$$131539875",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.LocalMemoryManagerExporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"destroy","parameterTypes":[] }]
},
{
  "name":"io.trino.memory.LocalMemoryManagerExporter$$FastClassByGuice$$132455601",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.LowMemoryKiller",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.memory.LowMemoryKiller$ForQueryLowMemoryKiller",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.memory.LowMemoryKiller$ForTaskLowMemoryKiller",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.memory.MemoryInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["int","io.trino.spi.memory.MemoryPoolInfo"] }, 
    {"name":"getAvailableProcessors","parameterTypes":[] }, 
    {"name":"getPool","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.memory.MemoryManagerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applyFaultTolerantExecutionDefaults","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionCoordinatorTaskMemory","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTaskMemory","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTaskMemoryEstimationQuantile","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTaskMemoryGrowthFactor","parameterTypes":[] }, 
    {"name":"getFaultTolerantExecutionTaskRuntimeMemoryEstimationOverhead","parameterTypes":[] }, 
    {"name":"getKillOnOutOfMemoryDelay","parameterTypes":[] }, 
    {"name":"getLowMemoryQueryKillerPolicy","parameterTypes":[] }, 
    {"name":"getLowMemoryTaskKillerPolicy","parameterTypes":[] }, 
    {"name":"getMaxQueryMemory","parameterTypes":[] }, 
    {"name":"getMaxQueryTotalMemory","parameterTypes":[] }, 
    {"name":"setFaultTolerantExecutionCoordinatorTaskMemory","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setFaultTolerantExecutionTaskMemory","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setFaultTolerantExecutionTaskMemoryEstimationQuantile","parameterTypes":["double"] }, 
    {"name":"setFaultTolerantExecutionTaskMemoryGrowthFactor","parameterTypes":["double"] }, 
    {"name":"setFaultTolerantExecutionTaskRuntimeMemoryEstimationOverhead","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setKillOnOutOfMemoryDelay","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setLowMemoryQueryKillerPolicy","parameterTypes":["io.trino.memory.MemoryManagerConfig$LowMemoryQueryKillerPolicy"] }, 
    {"name":"setLowMemoryTaskKillerPolicy","parameterTypes":["io.trino.memory.MemoryManagerConfig$LowMemoryTaskKillerPolicy"] }, 
    {"name":"setMaxQueryMemory","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxQueryTotalMemory","parameterTypes":["io.airlift.units.DataSize"] }
  ]
},
{
  "name":"io.trino.memory.MemoryPool",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"addListener","parameterTypes":["io.trino.memory.MemoryPoolListener"] }, 
    {"name":"free","parameterTypes":["io.trino.execution.TaskId","java.lang.String","long"] }, 
    {"name":"freeRevocable","parameterTypes":["io.trino.execution.TaskId","long"] }, 
    {"name":"getFreeBytes","parameterTypes":[] }, 
    {"name":"getInfo","parameterTypes":[] }, 
    {"name":"getMaxBytes","parameterTypes":[] }, 
    {"name":"getQueryMemoryReservations","parameterTypes":[] }, 
    {"name":"getQueryRevocableMemoryReservations","parameterTypes":[] }, 
    {"name":"getReservedBytes","parameterTypes":[] }, 
    {"name":"getReservedRevocableBytes","parameterTypes":[] }, 
    {"name":"getTaggedMemoryAllocations","parameterTypes":[] }, 
    {"name":"getTaskMemoryReservations","parameterTypes":[] }, 
    {"name":"getTaskRevocableMemoryReservations","parameterTypes":[] }, 
    {"name":"removeListener","parameterTypes":["io.trino.memory.MemoryPoolListener"] }, 
    {"name":"reserve","parameterTypes":["io.trino.execution.TaskId","java.lang.String","long"] }, 
    {"name":"reserveRevocable","parameterTypes":["io.trino.execution.TaskId","long"] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"tryReserve","parameterTypes":["io.trino.execution.TaskId","java.lang.String","long"] }
  ]
},
{
  "name":"io.trino.memory.MemoryResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getMemoryInfo","parameterTypes":[] }]
},
{
  "name":"io.trino.memory.MemoryResource$$FastClassByGuice$$145806625",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.NodeMemoryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getHeapHeadroom","parameterTypes":[] }, 
    {"name":"getMaxQueryMemoryPerNode","parameterTypes":[] }, 
    {"name":"setHeapHeadroom","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxQueryMemoryPerNode","parameterTypes":["io.airlift.units.DataSize"] }
  ]
},
{
  "name":"io.trino.memory.TotalReservationOnBlockedNodesQueryLowMemoryKiller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.memory.TotalReservationOnBlockedNodesQueryLowMemoryKiller$$FastClassByGuice$$196894537",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.memory.TotalReservationOnBlockedNodesTaskLowMemoryKiller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.memory.TotalReservationOnBlockedNodesTaskLowMemoryKiller$$FastClassByGuice$$195628284",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.AbstractCatalogPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.AbstractTypedJacksonModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.AnalyzePropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.BlockEncodingManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.metadata.BlockEncodingManager$$FastClassByGuice$$173401976",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.CatalogManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.ColumnPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.DisabledSystemSecurityMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.metadata.DisabledSystemSecurityMetadata$$FastClassByGuice$$264776495",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.DiscoveryNodeManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"addNodeChangeListener","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getActiveCatalogNodes","parameterTypes":["io.trino.spi.connector.CatalogHandle"] }, 
    {"name":"getActiveNodeCount","parameterTypes":[] }, 
    {"name":"getActiveNodesSnapshot","parameterTypes":[] }, 
    {"name":"getAllNodes","parameterTypes":[] }, 
    {"name":"getCoordinators","parameterTypes":[] }, 
    {"name":"getCurrentNode","parameterTypes":[] }, 
    {"name":"getInactiveNodeCount","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":["io.trino.metadata.NodeState"] }, 
    {"name":"getShuttingDownNodeCount","parameterTypes":[] }, 
    {"name":"refreshNodes","parameterTypes":[] }, 
    {"name":"removeNodeChangeListener","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"startPollingNodeStates","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.metadata.DiscoveryNodeManager$$FastClassByGuice$$120574209",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.ForNodeManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.FunctionBundle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.FunctionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.FunctionManager$$FastClassByGuice$$157713939",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.GlobalFunctionCatalog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.metadata.GlobalFunctionCatalog$$FastClassByGuice$$150968842",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.HandleJsonModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$$FastClassByGuice$$42368819",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.HandleJsonModule$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$10",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$11",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$12",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$2",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$3",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$4",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$5",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$6",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$7",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$8",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleJsonModule$9",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.HandleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.HandleResolver$$FastClassByGuice$$165844428",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.InternalBlockEncodingSerde",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.InternalBlockEncodingSerde$$FastClassByGuice$$304441447",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.InternalFunctionBundle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.InternalNodeManager",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addNodeChangeListener","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"getActiveCatalogNodes","parameterTypes":["io.trino.spi.connector.CatalogHandle"] }, 
    {"name":"getActiveNodesSnapshot","parameterTypes":[] }, 
    {"name":"getAllNodes","parameterTypes":[] }, 
    {"name":"getCoordinators","parameterTypes":[] }, 
    {"name":"getCurrentNode","parameterTypes":[] }, 
    {"name":"getNodes","parameterTypes":["io.trino.metadata.NodeState"] }, 
    {"name":"refreshNodes","parameterTypes":[] }, 
    {"name":"removeNodeChangeListener","parameterTypes":["java.util.function.Consumer"] }
  ]
},
{
  "name":"io.trino.metadata.MaterializedViewPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.Metadata",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.MetadataManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.MetadataManager$$FastClassByGuice$$149482611",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.NodeState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.ProcedureRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.ProcedureRegistry$$FastClassByGuice$$153477100",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.QualifiedTablePrefix",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.util.Optional","java.util.Optional"] }, 
    {"name":"getCatalogName","parameterTypes":[] }, 
    {"name":"getSchemaName","parameterTypes":[] }, 
    {"name":"getTableName","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.metadata.SchemaPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.SessionPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.Split",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.connector.CatalogHandle","io.trino.spi.connector.ConnectorSplit"] }, 
    {"name":"getCatalogHandle","parameterTypes":[] }, 
    {"name":"getConnectorSplit","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.metadata.SystemSecurityMetadata",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.TableFunctionRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.TableFunctionRegistry$$FastClassByGuice$$155742767",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.TableHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.connector.CatalogHandle","io.trino.spi.connector.ConnectorTableHandle","io.trino.spi.connector.ConnectorTransactionHandle"] }, 
    {"name":"getCatalogHandle","parameterTypes":[] }, 
    {"name":"getConnectorHandle","parameterTypes":[] }, 
    {"name":"getTransaction","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.metadata.TableProceduresPropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.TableProceduresRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.TableProceduresRegistry$$FastClassByGuice$$155042854",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.metadata.TablePropertyManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.metadata.TypeRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.metadata.TypeRegistry$$FastClassByGuice$$161262466",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.BlockedReason",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.DirectExchangeClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getClientThreads","parameterTypes":[] }, 
    {"name":"getConcurrentRequestMultiplier","parameterTypes":[] }, 
    {"name":"getDeduplicationBufferSize","parameterTypes":[] }, 
    {"name":"getMaxBufferSize","parameterTypes":[] }, 
    {"name":"getMaxErrorDuration","parameterTypes":[] }, 
    {"name":"getMaxResponseSize","parameterTypes":[] }, 
    {"name":"getMinErrorDuration","parameterTypes":[] }, 
    {"name":"getPageBufferClientMaxCallbackThreads","parameterTypes":[] }, 
    {"name":"isAcknowledgePages","parameterTypes":[] }, 
    {"name":"setAcknowledgePages","parameterTypes":["boolean"] }, 
    {"name":"setClientThreads","parameterTypes":["int"] }, 
    {"name":"setConcurrentRequestMultiplier","parameterTypes":["int"] }, 
    {"name":"setDeduplicationBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxBufferSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMaxErrorDuration","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setMaxResponseSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setMinErrorDuration","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setPageBufferClientMaxCallbackThreads","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.operator.DirectExchangeClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"stop","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.DirectExchangeClientFactory$$FastClassByGuice$$262866368",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.DirectExchangeClientStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["long","long","long","long","int","int","long","boolean","java.util.List"] }, 
    {"name":"getAverageBytesPerRequest","parameterTypes":[] }, 
    {"name":"getBufferedBytes","parameterTypes":[] }, 
    {"name":"getBufferedPages","parameterTypes":[] }, 
    {"name":"getMaxBufferedBytes","parameterTypes":[] }, 
    {"name":"getPageBufferClientStatuses","parameterTypes":[] }, 
    {"name":"getSpilledBytes","parameterTypes":[] }, 
    {"name":"getSpilledPages","parameterTypes":[] }, 
    {"name":"getSuccessfulRequestsCount","parameterTypes":[] }, 
    {"name":"isNoMoreLocations","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.DirectExchangeClientSupplier",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.DriverStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getBlockedReasons","parameterTypes":[] }, 
    {"name":"getCreateTime","parameterTypes":[] }, 
    {"name":"getElapsedTime","parameterTypes":[] }, 
    {"name":"getEndTime","parameterTypes":[] }, 
    {"name":"getInputBlockedTime","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputDataSize","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputPositions","parameterTypes":[] }, 
    {"name":"getOperatorStats","parameterTypes":[] }, 
    {"name":"getOutputBlockedTime","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getOutputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputDataSize","parameterTypes":[] }, 
    {"name":"getPhysicalInputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputReadTime","parameterTypes":[] }, 
    {"name":"getPhysicalWrittenDataSize","parameterTypes":[] }, 
    {"name":"getProcessedInputDataSize","parameterTypes":[] }, 
    {"name":"getProcessedInputPositions","parameterTypes":[] }, 
    {"name":"getQueuedTime","parameterTypes":[] }, 
    {"name":"getRawInputDataSize","parameterTypes":[] }, 
    {"name":"getRawInputPositions","parameterTypes":[] }, 
    {"name":"getRawInputReadTime","parameterTypes":[] }, 
    {"name":"getRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getStartTime","parameterTypes":[] }, 
    {"name":"getTotalBlockedTime","parameterTypes":[] }, 
    {"name":"getTotalCpuTime","parameterTypes":[] }, 
    {"name":"getTotalScheduledTime","parameterTypes":[] }, 
    {"name":"getUserMemoryReservation","parameterTypes":[] }, 
    {"name":"isFullyBlocked","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.ForExchange",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.ForScheduler",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.GroupByHashPageIndexerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.operator.GroupByHashPageIndexerFactory$$FastClassByGuice$$307033195",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.OperatorFactories",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.OperatorInfo",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.OperatorStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["int","int","int","io.trino.sql.planner.plan.PlanNodeId","java.lang.String","long","long","io.airlift.units.Duration","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.DataSize","io.airlift.units.DataSize","long","double","long","io.airlift.units.Duration","io.airlift.units.Duration","io.airlift.units.DataSize","long","long","io.trino.spi.metrics.Metrics","io.trino.spi.metrics.Metrics","io.airlift.units.DataSize","io.airlift.units.Duration","long","io.airlift.units.Duration","io.airlift.units.Duration","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","java.util.Optional","io.trino.operator.OperatorInfo"] }, 
    {"name":"getAddInputCalls","parameterTypes":[] }, 
    {"name":"getAddInputCpu","parameterTypes":[] }, 
    {"name":"getAddInputWall","parameterTypes":[] }, 
    {"name":"getBlockedReason","parameterTypes":[] }, 
    {"name":"getBlockedWall","parameterTypes":[] }, 
    {"name":"getConnectorMetrics","parameterTypes":[] }, 
    {"name":"getDynamicFilterSplitsProcessed","parameterTypes":[] }, 
    {"name":"getFinishCalls","parameterTypes":[] }, 
    {"name":"getFinishCpu","parameterTypes":[] }, 
    {"name":"getFinishWall","parameterTypes":[] }, 
    {"name":"getGetOutputCalls","parameterTypes":[] }, 
    {"name":"getGetOutputCpu","parameterTypes":[] }, 
    {"name":"getGetOutputWall","parameterTypes":[] }, 
    {"name":"getInfo","parameterTypes":[] }, 
    {"name":"getInputDataSize","parameterTypes":[] }, 
    {"name":"getInputPositions","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputDataSize","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputPositions","parameterTypes":[] }, 
    {"name":"getMetrics","parameterTypes":[] }, 
    {"name":"getOperatorId","parameterTypes":[] }, 
    {"name":"getOperatorType","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getOutputPositions","parameterTypes":[] }, 
    {"name":"getPeakRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getPeakTotalMemoryReservation","parameterTypes":[] }, 
    {"name":"getPeakUserMemoryReservation","parameterTypes":[] }, 
    {"name":"getPhysicalInputDataSize","parameterTypes":[] }, 
    {"name":"getPhysicalInputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputReadTime","parameterTypes":[] }, 
    {"name":"getPhysicalWrittenDataSize","parameterTypes":[] }, 
    {"name":"getPipelineId","parameterTypes":[] }, 
    {"name":"getPlanNodeId","parameterTypes":[] }, 
    {"name":"getRawInputDataSize","parameterTypes":[] }, 
    {"name":"getRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getSpilledDataSize","parameterTypes":[] }, 
    {"name":"getStageId","parameterTypes":[] }, 
    {"name":"getSumSquaredInputPositions","parameterTypes":[] }, 
    {"name":"getTotalDrivers","parameterTypes":[] }, 
    {"name":"getUserMemoryReservation","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.PageBufferClientStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getHttpRequestState","parameterTypes":[] }, 
    {"name":"getLastUpdate","parameterTypes":[] }, 
    {"name":"getPagesReceived","parameterTypes":[] }, 
    {"name":"getPagesRejected","parameterTypes":[] }, 
    {"name":"getRequestsCompleted","parameterTypes":[] }, 
    {"name":"getRequestsFailed","parameterTypes":[] }, 
    {"name":"getRequestsScheduled","parameterTypes":[] }, 
    {"name":"getRequestsSucceeded","parameterTypes":[] }, 
    {"name":"getRowsReceived","parameterTypes":[] }, 
    {"name":"getRowsRejected","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getUri","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.PagesIndex",
  "allDeclaredFields":true
},
{
  "name":"io.trino.operator.PagesIndex$DefaultFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.operator.PagesIndex$DefaultFactory$$FastClassByGuice$$260359135",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.PagesIndex$Factory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.PagesIndexPageSorter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.operator.PagesIndexPageSorter$$FastClassByGuice$$305983577",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.PipelineStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["int","org.joda.time.DateTime","org.joda.time.DateTime","org.joda.time.DateTime","boolean","boolean","int","int","int","long","int","int","long","int","int","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.stats.Distribution$DistributionSnapshot","io.airlift.stats.Distribution$DistributionSnapshot","io.airlift.units.Duration","io.airlift.units.Duration","io.airlift.units.Duration","boolean","java.util.Set","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.DataSize","long","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","java.util.List","java.util.List"] }, 
    {"name":"getBlockedDrivers","parameterTypes":[] }, 
    {"name":"getBlockedReasons","parameterTypes":[] }, 
    {"name":"getCompletedDrivers","parameterTypes":[] }, 
    {"name":"getDrivers","parameterTypes":[] }, 
    {"name":"getElapsedTime","parameterTypes":[] }, 
    {"name":"getFirstStartTime","parameterTypes":[] }, 
    {"name":"getInputBlockedTime","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputDataSize","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputPositions","parameterTypes":[] }, 
    {"name":"getLastEndTime","parameterTypes":[] }, 
    {"name":"getLastStartTime","parameterTypes":[] }, 
    {"name":"getOperatorSummaries","parameterTypes":[] }, 
    {"name":"getOutputBlockedTime","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getOutputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputDataSize","parameterTypes":[] }, 
    {"name":"getPhysicalInputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputReadTime","parameterTypes":[] }, 
    {"name":"getPhysicalWrittenDataSize","parameterTypes":[] }, 
    {"name":"getPipelineId","parameterTypes":[] }, 
    {"name":"getProcessedInputDataSize","parameterTypes":[] }, 
    {"name":"getProcessedInputPositions","parameterTypes":[] }, 
    {"name":"getQueuedDrivers","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getQueuedTime","parameterTypes":[] }, 
    {"name":"getRawInputDataSize","parameterTypes":[] }, 
    {"name":"getRawInputPositions","parameterTypes":[] }, 
    {"name":"getRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getRunningDrivers","parameterTypes":[] }, 
    {"name":"getRunningPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getRunningPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getTotalBlockedTime","parameterTypes":[] }, 
    {"name":"getTotalCpuTime","parameterTypes":[] }, 
    {"name":"getTotalDrivers","parameterTypes":[] }, 
    {"name":"getTotalScheduledTime","parameterTypes":[] }, 
    {"name":"getUserMemoryReservation","parameterTypes":[] }, 
    {"name":"isFullyBlocked","parameterTypes":[] }, 
    {"name":"isInputPipeline","parameterTypes":[] }, 
    {"name":"isOutputPipeline","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.RetryPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.operator.SplitOperatorInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.connector.CatalogHandle","java.lang.Object"] }, 
    {"name":"getCatalogHandle","parameterTypes":[] }, 
    {"name":"getSplitInfo","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.TaskStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.joda.time.DateTime","org.joda.time.DateTime","org.joda.time.DateTime","org.joda.time.DateTime","org.joda.time.DateTime","io.airlift.units.Duration","io.airlift.units.Duration","int","int","int","long","int","int","long","int","int","double","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.DataSize","io.airlift.units.Duration","io.airlift.units.Duration","io.airlift.units.Duration","boolean","java.util.Set","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.DataSize","long","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","long","io.airlift.units.Duration","io.airlift.units.DataSize","int","io.airlift.units.Duration","java.util.List"] }, 
    {"name":"getBlockedDrivers","parameterTypes":[] }, 
    {"name":"getBlockedReasons","parameterTypes":[] }, 
    {"name":"getCompletedDrivers","parameterTypes":[] }, 
    {"name":"getCreateTime","parameterTypes":[] }, 
    {"name":"getCumulativeUserMemory","parameterTypes":[] }, 
    {"name":"getElapsedTime","parameterTypes":[] }, 
    {"name":"getEndTime","parameterTypes":[] }, 
    {"name":"getFirstStartTime","parameterTypes":[] }, 
    {"name":"getFullGcCount","parameterTypes":[] }, 
    {"name":"getFullGcTime","parameterTypes":[] }, 
    {"name":"getInputBlockedTime","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputDataSize","parameterTypes":[] }, 
    {"name":"getInternalNetworkInputPositions","parameterTypes":[] }, 
    {"name":"getLastEndTime","parameterTypes":[] }, 
    {"name":"getLastStartTime","parameterTypes":[] }, 
    {"name":"getOutputBlockedTime","parameterTypes":[] }, 
    {"name":"getOutputDataSize","parameterTypes":[] }, 
    {"name":"getOutputPositions","parameterTypes":[] }, 
    {"name":"getPeakUserMemoryReservation","parameterTypes":[] }, 
    {"name":"getPhysicalInputDataSize","parameterTypes":[] }, 
    {"name":"getPhysicalInputPositions","parameterTypes":[] }, 
    {"name":"getPhysicalInputReadTime","parameterTypes":[] }, 
    {"name":"getPhysicalWrittenDataSize","parameterTypes":[] }, 
    {"name":"getPipelines","parameterTypes":[] }, 
    {"name":"getProcessedInputDataSize","parameterTypes":[] }, 
    {"name":"getProcessedInputPositions","parameterTypes":[] }, 
    {"name":"getQueuedDrivers","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getQueuedPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getQueuedTime","parameterTypes":[] }, 
    {"name":"getRawInputDataSize","parameterTypes":[] }, 
    {"name":"getRawInputPositions","parameterTypes":[] }, 
    {"name":"getRevocableMemoryReservation","parameterTypes":[] }, 
    {"name":"getRunningDrivers","parameterTypes":[] }, 
    {"name":"getRunningPartitionedDrivers","parameterTypes":[] }, 
    {"name":"getRunningPartitionedSplitsWeight","parameterTypes":[] }, 
    {"name":"getTotalBlockedTime","parameterTypes":[] }, 
    {"name":"getTotalCpuTime","parameterTypes":[] }, 
    {"name":"getTotalDrivers","parameterTypes":[] }, 
    {"name":"getTotalScheduledTime","parameterTypes":[] }, 
    {"name":"getUserMemoryReservation","parameterTypes":[] }, 
    {"name":"isFullyBlocked","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.TrinoOperatorFactories",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.TrinoOperatorFactories$$FastClassByGuice$$261673856",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.aggregation.ApproximateCountDistinctAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.operator.aggregation.state.HyperLogLogState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.Block","int","double"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","double","double"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","long","double"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","java.lang.Object","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateDoublePercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.operator.aggregation.state.TDigestAndPercentileState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","double","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","double","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateDoublePercentileArrayAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.operator.aggregation.state.TDigestAndPercentileArrayState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","double","io.trino.spi.block.Block"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","double","double","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateLongPercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.operator.aggregation.state.TDigestAndPercentileState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","long","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","long","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateLongPercentileArrayAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.operator.aggregation.state.TDigestAndPercentileArrayState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","long","io.trino.spi.block.Block"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","long","double","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateRealPercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.operator.aggregation.state.TDigestAndPercentileState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","long","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileState","long","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateRealPercentileArrayAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.operator.aggregation.state.TDigestAndPercentileArrayState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","long","io.trino.spi.block.Block"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestAndPercentileArrayState","long","double","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateSetAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.operator.aggregation.state.HyperLogLogState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","double"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ApproximateSetGenericAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.operator.aggregation.state.HyperLogLogState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.Block","int"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","boolean"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","double"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","long"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","java.lang.Object"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ArbitraryAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.function.InOut"] }, 
    {"name":"input","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.AverageAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.operator.aggregation.state.LongAndDoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","double"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","double"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BigintApproximateMostFrequent",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.BigintApproximateMostFrequent$State","io.trino.operator.aggregation.BigintApproximateMostFrequent$State"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.BigintApproximateMostFrequent$State","long","long","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.BigintApproximateMostFrequent$State","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BitwiseAndAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bitAnd","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","long"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BitwiseOrAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bitOr","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","long"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BooleanAndAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"booleanAnd","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","boolean"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","io.trino.operator.aggregation.state.TriStateBooleanState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BooleanApproximateCountDistinctAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","io.trino.operator.aggregation.state.BooleanDistinctState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","boolean","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BooleanDefaultApproximateCountDistinctAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","io.trino.operator.aggregation.state.BooleanDistinctState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.BooleanDistinctState","boolean"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.BooleanOrAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"booleanOr","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","boolean"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","io.trino.operator.aggregation.state.TriStateBooleanState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TriStateBooleanState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.CentralMomentsAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bigintInput","parameterTypes":["io.trino.operator.aggregation.state.CentralMomentsState","long"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.CentralMomentsState","io.trino.operator.aggregation.state.CentralMomentsState"] }, 
    {"name":"doubleInput","parameterTypes":["io.trino.operator.aggregation.state.CentralMomentsState","double"] }, 
    {"name":"kurtosis","parameterTypes":["io.trino.operator.aggregation.state.CentralMomentsState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"skewness","parameterTypes":["io.trino.operator.aggregation.state.CentralMomentsState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ChecksumAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.CountAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.LongState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongState"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.CountColumn",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.LongState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.CountIfAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.LongState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongState","boolean"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongState","boolean"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DecimalAverageAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongState","io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongState"] }, 
    {"name":"inputLongDecimal","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongState","io.trino.spi.block.Block","int"] }, 
    {"name":"inputShortDecimal","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongState","io.trino.spi.block.Block","int"] }, 
    {"name":"outputShortDecimal","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DecimalSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowState","io.trino.operator.aggregation.state.LongDecimalWithOverflowState"] }, 
    {"name":"inputLongDecimal","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowState","io.trino.spi.block.Block","int"] }, 
    {"name":"inputShortDecimal","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowState","long"] }, 
    {"name":"outputLongDecimal","parameterTypes":["io.trino.operator.aggregation.state.LongDecimalWithOverflowState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DefaultApproximateCountDistinctAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combineState","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.operator.aggregation.state.HyperLogLogState"] }, 
    {"name":"evaluateFinal","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.Block","int"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","double"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","long"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.operator.aggregation.state.HyperLogLogState","java.lang.Object"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DoubleCorrelationAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","io.trino.operator.aggregation.state.CorrelationState"] }, 
    {"name":"corr","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DoubleCovarianceAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.operator.aggregation.state.CovarianceState"] }, 
    {"name":"covarPop","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"covarSamp","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DoubleHistogramAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","long","double"] }, 
    {"name":"add","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","long","double","double"] }, 
    {"name":"merge","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","io.trino.operator.aggregation.DoubleHistogramAggregation$State"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DoubleRegressionAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.operator.aggregation.state.RegressionState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","double","double"] }, 
    {"name":"regrIntercept","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"regrSlope","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.DoubleSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.LongDoubleState","io.trino.operator.aggregation.LongDoubleState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.LongDoubleState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.LongDoubleState","double"] }, 
    {"name":"sum","parameterTypes":["io.trino.operator.aggregation.LongDoubleState","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.GeometricMeanAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.operator.aggregation.state.LongAndDoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","double"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.IntervalDayToSecondAverageAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.operator.aggregation.state.LongAndDoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.IntervalDayToSecondSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"sum","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.IntervalYearToMonthAverageAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.operator.aggregation.state.LongAndDoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.IntervalYearToMonthSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"sum","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LegacyApproximateDoublePercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.operator.aggregation.state.QuantileDigestAndPercentileState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","double","double","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LegacyApproximateLongPercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.operator.aggregation.state.QuantileDigestAndPercentileState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","long","double","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LegacyApproximateRealPercentileAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.operator.aggregation.state.QuantileDigestAndPercentileState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestAndPercentileState","long","double","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LongApproximateMostFrequentStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.LongApproximateMostFrequentStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.LongDoubleState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getFirst","parameterTypes":[] }, 
    {"name":"getSecond","parameterTypes":[] }, 
    {"name":"isFirstNull","parameterTypes":[] }, 
    {"name":"isSecondNull","parameterTypes":[] }, 
    {"name":"setFirst","parameterTypes":["long"] }, 
    {"name":"setFirstNull","parameterTypes":["boolean"] }, 
    {"name":"setSecond","parameterTypes":["double"] }, 
    {"name":"setSecondNull","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LongLongState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getFirst","parameterTypes":[] }, 
    {"name":"getSecond","parameterTypes":[] }, 
    {"name":"isFirstNull","parameterTypes":[] }, 
    {"name":"isSecondNull","parameterTypes":[] }, 
    {"name":"setFirst","parameterTypes":["long"] }, 
    {"name":"setFirstNull","parameterTypes":["boolean"] }, 
    {"name":"setSecond","parameterTypes":["long"] }, 
    {"name":"setSecondNull","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.LongSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.LongLongState","io.trino.operator.aggregation.LongLongState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.LongLongState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.LongLongState","long"] }, 
    {"name":"sum","parameterTypes":["io.trino.operator.aggregation.LongLongState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MapAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.operator.aggregation.state.KeyValuePairsState"] }, 
    {"name":"input","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionEqual","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.type.Type","io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.spi.block.Block","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MapUnionAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.operator.aggregation.state.KeyValuePairsState"] }, 
    {"name":"input","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionEqual","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.type.Type","io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.spi.block.Block"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.KeyValuePairsState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MaxAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MaxByAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.function.InOut"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.block.Block","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MaxDataSizeForStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MergeHyperLogLogAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.operator.aggregation.state.HyperLogLogState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.airlift.slice.Slice"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.HyperLogLogState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MergeQuantileDigestFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.operator.aggregation.state.QuantileDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.QuantileDigestState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.QuantileDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MergeTDigestAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","io.trino.operator.aggregation.state.TDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","java.lang.Object"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MinAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.MinByAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.function.InOut"] }, 
    {"name":"input","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.block.Block","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.function.InOut","io.trino.spi.function.InOut","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.NumericHistogramStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.QuantileDigestAggregationFunction$BigintQuantileDigestAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.operator.aggregation.state.QuantileDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long","long","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.QuantileDigestAggregationFunction$DoubleQuantileDigestAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.operator.aggregation.state.QuantileDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","double"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","double","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","double","long","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.QuantileDigestAggregationFunction$RealQuantileDigestAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.operator.aggregation.state.QuantileDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long","long"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","long","long","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.QuantileDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealAverageAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.DoubleState","io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.DoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.DoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.DoubleState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"removeInput","parameterTypes":["io.trino.operator.aggregation.state.LongState","io.trino.operator.aggregation.state.DoubleState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealCorrelationAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","io.trino.operator.aggregation.state.CorrelationState"] }, 
    {"name":"corr","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.CorrelationState","long","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealCovarianceAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.operator.aggregation.state.CovarianceState"] }, 
    {"name":"covarPop","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"covarSamp","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.CovarianceState","long","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealGeometricMeanAggregations",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.operator.aggregation.state.LongAndDoubleState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.LongAndDoubleState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealHistogramAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","long","long","double"] }, 
    {"name":"merge","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","io.trino.operator.aggregation.DoubleHistogramAggregation$State"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.DoubleHistogramAggregation$State","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealRegressionAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.operator.aggregation.state.RegressionState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","long","long"] }, 
    {"name":"regrIntercept","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"regrSlope","parameterTypes":["io.trino.operator.aggregation.state.RegressionState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.RealSumAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableDoubleState","io.trino.operator.aggregation.state.NullableDoubleState"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableDoubleState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"sum","parameterTypes":["io.trino.operator.aggregation.state.NullableDoubleState","long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.ReduceAggregationFunction",
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.GenericBooleanState","io.trino.operator.aggregation.state.GenericBooleanState","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.GenericDoubleState","io.trino.operator.aggregation.state.GenericDoubleState","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.GenericLongState","io.trino.operator.aggregation.state.GenericLongState","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.GenericBooleanState","java.lang.Object","boolean","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.GenericDoubleState","java.lang.Object","double","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.GenericLongState","java.lang.Object","long","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.StringApproximateMostFrequentStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.StringApproximateMostFrequentStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.SumDataSizeForStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.operator.aggregation.state.NullableLongState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.NullableLongState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.TDigestAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","io.trino.operator.aggregation.state.TDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","double"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"weightedInput","parameterTypes":["io.trino.operator.aggregation.state.TDigestState","double","double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.VarcharApproximateMostFrequent",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.VarcharApproximateMostFrequent$State","io.trino.operator.aggregation.VarcharApproximateMostFrequent$State"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.VarcharApproximateMostFrequent$State","long","io.airlift.slice.Slice","long"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.VarcharApproximateMostFrequent$State","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.VarianceAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bigintInput","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","long"] }, 
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","io.trino.operator.aggregation.state.VarianceState"] }, 
    {"name":"doubleInput","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","double"] }, 
    {"name":"stddev","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"stddevPop","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"variance","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","io.trino.spi.block.BlockBuilder"] }, 
    {"name":"variancePop","parameterTypes":["io.trino.operator.aggregation.state.VarianceState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.arrayagg.ArrayAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.arrayagg.ArrayAggregationState","io.trino.operator.aggregation.arrayagg.ArrayAggregationState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.arrayagg.ArrayAggregationState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.arrayagg.ArrayAggregationState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.arrayagg.ArrayAggregationStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.arrayagg.ArrayAggregationStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.histogram.Histogram",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.histogram.HistogramState","io.trino.operator.aggregation.histogram.HistogramState"] }, 
    {"name":"input","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.histogram.HistogramState","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.histogram.HistogramState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.histogram.HistogramStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.histogram.HistogramStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.listagg.ListaggAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.listagg.ListaggAggregationState","io.trino.operator.aggregation.listagg.ListaggAggregationState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.listagg.ListaggAggregationState","io.trino.spi.block.Block","io.airlift.slice.Slice","boolean","io.airlift.slice.Slice","boolean","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.listagg.ListaggAggregationState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.listagg.ListaggAggregationStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.listagg.ListaggAggregationStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MaxByNAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MaxByNState","io.trino.operator.aggregation.minmaxbyn.MaxByNState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MaxByNState","io.trino.spi.block.Block","io.trino.spi.block.Block","long","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MaxByNState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MaxByNStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MaxByNStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MinByNAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MinByNState","io.trino.operator.aggregation.minmaxbyn.MinByNState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MinByNState","io.trino.spi.block.Block","io.trino.spi.block.Block","long","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.minmaxbyn.MinByNState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MinByNStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxbyn.MinByNStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MaxNAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.minmaxn.MaxNState","io.trino.operator.aggregation.minmaxn.MaxNState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.minmaxn.MaxNState","io.trino.spi.block.Block","long","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.minmaxn.MaxNState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MaxNStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MaxNStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MinNAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.minmaxn.MinNState","io.trino.operator.aggregation.minmaxn.MinNState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.minmaxn.MinNState","io.trino.spi.block.Block","long","int"] }, 
    {"name":"output","parameterTypes":["io.trino.operator.aggregation.minmaxn.MinNState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MinNStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.minmaxn.MinNStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.multimapagg.MultimapAggregationFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.operator.aggregation.multimapagg.MultimapAggregationState","io.trino.operator.aggregation.multimapagg.MultimapAggregationState"] }, 
    {"name":"input","parameterTypes":["io.trino.operator.aggregation.multimapagg.MultimapAggregationState","io.trino.spi.block.Block","io.trino.spi.block.Block","int"] }, 
    {"name":"output","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.type.Type","io.trino.operator.aggregation.multimapagg.MultimapAggregationState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.multimapagg.MultimapAggregationStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.multimapagg.MultimapAggregationStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.BooleanDistinctState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getByte","parameterTypes":[] }, 
    {"name":"setByte","parameterTypes":["byte"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.CentralMomentsState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getM1","parameterTypes":[] }, 
    {"name":"getM2","parameterTypes":[] }, 
    {"name":"getM3","parameterTypes":[] }, 
    {"name":"getM4","parameterTypes":[] }, 
    {"name":"setCount","parameterTypes":["long"] }, 
    {"name":"setM1","parameterTypes":["double"] }, 
    {"name":"setM2","parameterTypes":["double"] }, 
    {"name":"setM3","parameterTypes":["double"] }, 
    {"name":"setM4","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.CorrelationState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getM2X","parameterTypes":[] }, 
    {"name":"getM2Y","parameterTypes":[] }, 
    {"name":"setM2X","parameterTypes":["double"] }, 
    {"name":"setM2Y","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.CovarianceState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getC2","parameterTypes":[] }, 
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getMeanX","parameterTypes":[] }, 
    {"name":"getMeanY","parameterTypes":[] }, 
    {"name":"setC2","parameterTypes":["double"] }, 
    {"name":"setCount","parameterTypes":["long"] }, 
    {"name":"setMeanX","parameterTypes":["double"] }, 
    {"name":"setMeanY","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.DoubleHistogramStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.DoubleState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getValue","parameterTypes":[] }, 
    {"name":"setValue","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.GenericBooleanState",
  "methods":[{"name":"write","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.GenericBooleanState","io.trino.spi.block.BlockBuilder"] }]
},
{
  "name":"io.trino.operator.aggregation.state.GenericDoubleState",
  "methods":[{"name":"write","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.GenericDoubleState","io.trino.spi.block.BlockBuilder"] }]
},
{
  "name":"io.trino.operator.aggregation.state.GenericLongState",
  "methods":[{"name":"write","parameterTypes":["io.trino.spi.type.Type","io.trino.operator.aggregation.state.GenericLongState","io.trino.spi.block.BlockBuilder"] }]
},
{
  "name":"io.trino.operator.aggregation.state.HyperLogLogStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.HyperLogLogStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.KeyValuePairStateSerializer",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.KeyValuePairsStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.LongAndDoubleState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getDouble","parameterTypes":[] }, 
    {"name":"getLong","parameterTypes":[] }, 
    {"name":"setDouble","parameterTypes":["double"] }, 
    {"name":"setLong","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.LongDecimalWithOverflowStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.LongState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getValue","parameterTypes":[] }, 
    {"name":"setValue","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.NullableDoubleStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.NullableLongStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.QuantileDigestAndPercentileStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.QuantileDigestAndPercentileStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.QuantileDigestStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.QuantileDigestStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.RegressionState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getM2X","parameterTypes":[] }, 
    {"name":"setM2X","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.aggregation.state.TDigestAndPercentileArrayStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.TDigestAndPercentileArrayStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.TDigestAndPercentileStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.TDigestAndPercentileStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.TDigestStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.operator.aggregation.state.TDigestStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.TriStateBooleanStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.aggregation.state.VarianceState",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getCount","parameterTypes":[] }, 
    {"name":"getM2","parameterTypes":[] }, 
    {"name":"getMean","parameterTypes":[] }, 
    {"name":"setCount","parameterTypes":["long"] }, 
    {"name":"setM2","parameterTypes":["double"] }, 
    {"name":"setMean","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.operator.index.IndexJoinLookupStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getStreamedIndexJoinLookups","parameterTypes":[] }, 
    {"name":"getSuccessfulIndexJoinLookupsByCacheReset","parameterTypes":[] }, 
    {"name":"getSuccessfulIndexJoinLookupsByLimitedRequest","parameterTypes":[] }, 
    {"name":"getSuccessfulIndexJoinLookupsBySingleRequest","parameterTypes":[] }, 
    {"name":"getTotalIndexJoinLookups","parameterTypes":[] }, 
    {"name":"recordIndexJoinLookup","parameterTypes":[] }, 
    {"name":"recordStreamedIndexJoinLookup","parameterTypes":[] }, 
    {"name":"recordSuccessfulIndexJoinLookupByCacheReset","parameterTypes":[] }, 
    {"name":"recordSuccessfulIndexJoinLookupByLimitedRequest","parameterTypes":[] }, 
    {"name":"recordSuccessfulIndexJoinLookupBySingleRequest","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.index.IndexJoinLookupStats$$FastClassByGuice$$138878434",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.operator.scalar.ArrayAllMatchFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"allMatchBoolean","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.BooleanToBooleanFunction"] }, 
    {"name":"allMatchDouble","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.DoubleToBooleanFunction"] }, 
    {"name":"allMatchLong","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.LongToBooleanFunction"] }, 
    {"name":"allMatchObject","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ObjectToBooleanFunction"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayAnyMatchFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"anyMatchBoolean","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.BooleanToBooleanFunction"] }, 
    {"name":"anyMatchDouble","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.DoubleToBooleanFunction"] }, 
    {"name":"anyMatchLong","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.LongToBooleanFunction"] }, 
    {"name":"anyMatchObject","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ObjectToBooleanFunction"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayCardinalityFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"arrayCardinality","parameterTypes":["io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayCombinationsFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"combinations","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayConcatFunction",
  "methods":[
    {"name":"concat","parameterTypes":["io.trino.spi.type.Type","java.lang.Object","io.trino.spi.block.Block[]"] }, 
    {"name":"createState","parameterTypes":["io.trino.spi.type.Type"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayConcatUtils",
  "methods":[
    {"name":"appendElement","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","double"] }, 
    {"name":"appendElement","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"appendElement","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.airlift.slice.Slice"] }, 
    {"name":"appendElement","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"appendElement","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","boolean"] }, 
    {"name":"prependElement","parameterTypes":["io.trino.spi.type.Type","double","io.trino.spi.block.Block"] }, 
    {"name":"prependElement","parameterTypes":["io.trino.spi.type.Type","long","io.trino.spi.block.Block"] }, 
    {"name":"prependElement","parameterTypes":["io.trino.spi.type.Type","io.airlift.slice.Slice","io.trino.spi.block.Block"] }, 
    {"name":"prependElement","parameterTypes":["io.trino.spi.type.Type","java.lang.Object","io.trino.spi.block.Block"] }, 
    {"name":"prependElement","parameterTypes":["io.trino.spi.type.Type","boolean","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayContains",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"contains","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","double"] }, 
    {"name":"contains","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","long"] }, 
    {"name":"contains","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"contains","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayContainsSequence",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"containsSequence","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayDistinctFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"bigintDistinct","parameterTypes":["io.trino.spi.block.Block"] }, 
    {"name":"distinct","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayElementAtFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"booleanElementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"doubleElementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"longElementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"sliceElementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayExceptFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"except","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayFilterFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"filterBoolean","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.BooleanToBooleanFunction"] }, 
    {"name":"filterDouble","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.DoubleToBooleanFunction"] }, 
    {"name":"filterLong","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.LongToBooleanFunction"] }, 
    {"name":"filterObject","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ObjectToBooleanFunction"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayFlattenFunction",
  "methods":[{"name":"flatten","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"arrayConstructor","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.scalar.ArrayIntersectFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"intersect","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayJoin",
  "methods":[
    {"name":"arrayJoin","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.Object","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","io.airlift.slice.Slice"] }, 
    {"name":"arrayJoin","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.Object","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"createState","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayMaxFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"booleanArrayMax","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"doubleArrayMax","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"doubleTypeArrayMax","parameterTypes":["io.trino.spi.block.Block"] }, 
    {"name":"longArrayMax","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"objectArrayMax","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"realTypeArrayMax","parameterTypes":["io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayMinFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"booleanArrayMin","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"doubleArrayMin","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"longArrayMin","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }, 
    {"name":"objectArrayMin","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayNgramsFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"ngrams","parameterTypes":["io.trino.spi.block.Block","long"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayNoneMatchFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"noneMatchBoolean","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.BooleanToBooleanFunction"] }, 
    {"name":"noneMatchDouble","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.DoubleToBooleanFunction"] }, 
    {"name":"noneMatchLong","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.LongToBooleanFunction"] }, 
    {"name":"noneMatchObject","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ObjectToBooleanFunction"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayPositionFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"arrayPosition","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","double"] }, 
    {"name":"arrayPosition","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","long"] }, 
    {"name":"arrayPosition","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"arrayPosition","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayReduceFunction",
  "methods":[{"name":"reduce","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","java.lang.Object","io.trino.sql.gen.lambda.BinaryFunctionInterface","io.trino.sql.gen.lambda.UnaryFunctionInterface"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayRemoveFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"remove","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block","double"] }, 
    {"name":"remove","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"remove","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"remove","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayReverseFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"reverse","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayShuffleFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"shuffle","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArraySliceFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"slice","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long","long"] }]
},
{
  "name":"io.trino.operator.scalar.ArraySortComparatorFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"sortBoolean","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ArraySortComparatorFunction$ComparatorBooleanLambda"] }, 
    {"name":"sortDouble","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ArraySortComparatorFunction$ComparatorDoubleLambda"] }, 
    {"name":"sortLong","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ArraySortComparatorFunction$ComparatorLongLambda"] }, 
    {"name":"sortObject","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.operator.scalar.ArraySortComparatorFunction$ComparatorObjectLambda"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArraySortFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"sort","parameterTypes":["io.trino.type.BlockTypeOperators$BlockPositionComparison","io.trino.spi.type.Type","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArraySubscriptOperator",
  "methods":[
    {"name":"booleanSubscript","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"doubleSubscript","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"longSubscript","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"objectSubscript","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"sliceSubscript","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayToArrayCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"filterBoolean","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }, 
    {"name":"filterDouble","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }, 
    {"name":"filterLong","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }, 
    {"name":"filterObject","parameterTypes":["io.trino.spi.type.Type","java.lang.invoke.MethodHandle","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArrayToJsonCast",
  "methods":[{"name":"toJson","parameterTypes":["io.trino.util.JsonUtil$JsonGeneratorWriter","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayTrimFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"trim","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }]
},
{
  "name":"io.trino.operator.scalar.ArrayUnionFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"bigintUnion","parameterTypes":["io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"union","parameterTypes":["io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ArraysOverlapFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"arraysOverlap","parameterTypes":["io.trino.type.BlockTypeOperators$BlockPositionComparison","io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"arraysOverlapInt","parameterTypes":["io.trino.operator.scalar.ArraysOverlapFunction$LongComparison","io.trino.spi.type.Type","io.trino.spi.block.Block","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.BitwiseFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"bitCount","parameterTypes":["long","long"] }, 
    {"name":"bitwiseAnd","parameterTypes":["long","long"] }, 
    {"name":"bitwiseLeftShiftBigint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseLeftShiftInteger","parameterTypes":["long","long"] }, 
    {"name":"bitwiseLeftShiftSmallint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseLeftShiftTinyint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseNot","parameterTypes":["long"] }, 
    {"name":"bitwiseOr","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftArithmeticBigint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftArithmeticInteger","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftArithmeticSmallint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftArithmeticTinyint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftBigint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftInteger","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftSmallint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseRightShiftTinyint","parameterTypes":["long","long"] }, 
    {"name":"bitwiseXor","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.CastFromUnknownOperator",
  "methods":[{"name":"handleNonNull","parameterTypes":["boolean"] }]
},
{
  "name":"io.trino.operator.scalar.CharacterStringCasts",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"charToCharCast","parameterTypes":["java.lang.Long","java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"charToVarcharCast","parameterTypes":["java.lang.Long","java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"varcharToCharCast","parameterTypes":["java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"varcharToCharSaturatedFloorCast","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"varcharToVarcharCast","parameterTypes":["java.lang.Long","java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"varcharToVarcharSaturatedFloorCast","parameterTypes":["long","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ColorFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"bar","parameterTypes":["double","long"] }, 
    {"name":"bar","parameterTypes":["double","long","long","long"] }, 
    {"name":"color","parameterTypes":["double","double","double","long","long"] }, 
    {"name":"color","parameterTypes":["double","long","long"] }, 
    {"name":"color","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"render","parameterTypes":["double","long"] }, 
    {"name":"render","parameterTypes":["long","long"] }, 
    {"name":"render","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"render","parameterTypes":["boolean"] }, 
    {"name":"rgb","parameterTypes":["long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.CombineHashFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getHash","parameterTypes":["long","long"] }]
},
{
  "name":"io.trino.operator.scalar.ConcatWsFunction$ConcatArrayWs",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"concatWsArray","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.DataSizeFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"parsePrestoDataSize","parameterTypes":["io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.DateTimeFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"addFieldValueDate","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"currentDate","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"currentTimeZone","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"dateParse","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"dayFromDate","parameterTypes":["long"] }, 
    {"name":"dayFromInterval","parameterTypes":["long"] }, 
    {"name":"dayOfWeekFromDate","parameterTypes":["long"] }, 
    {"name":"dayOfYearFromDate","parameterTypes":["long"] }, 
    {"name":"diffDate","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"fromISO8601Date","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromISO8601Timestamp","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }, 
    {"name":"fromIso8601TimestampNanos","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }, 
    {"name":"fromUnixTime","parameterTypes":["double","long","long"] }, 
    {"name":"fromUnixTime","parameterTypes":["double","io.airlift.slice.Slice"] }, 
    {"name":"fromUnixTime","parameterTypes":["io.trino.spi.connector.ConnectorSession","double"] }, 
    {"name":"fromUnixtimeNanosLong","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"hourFromInterval","parameterTypes":["long"] }, 
    {"name":"lastDayOfMonthFromDate","parameterTypes":["long"] }, 
    {"name":"millisecondFromInterval","parameterTypes":["long"] }, 
    {"name":"minuteFromInterval","parameterTypes":["long"] }, 
    {"name":"monthFromDate","parameterTypes":["long"] }, 
    {"name":"monthFromInterval","parameterTypes":["long"] }, 
    {"name":"now","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"parseDatetime","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"parseDuration","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"quarterFromDate","parameterTypes":["long"] }, 
    {"name":"secondFromInterval","parameterTypes":["long"] }, 
    {"name":"toISO8601FromDate","parameterTypes":["long"] }, 
    {"name":"toMilliseconds","parameterTypes":["long"] }, 
    {"name":"truncateDate","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"weekFromDate","parameterTypes":["long"] }, 
    {"name":"yearFromDate","parameterTypes":["long"] }, 
    {"name":"yearFromInterval","parameterTypes":["long"] }, 
    {"name":"yearOfWeekFromDate","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.DateTimeFunctions$FromUnixtimeNanosDecimal",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"fromLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.Int128"] }, 
    {"name":"fromShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.EmptyMapConstructor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"map","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.scalar.FailureFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"fail","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"fail","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"failWithException","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.FormatFunction",
  "methods":[{"name":"sqlFormat","parameterTypes":["java.util.List","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.FormatNumberFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"formatNumber","parameterTypes":["double"] }, 
    {"name":"formatNumber","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.HmacFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"hmacMd5","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"hmacSha1","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"hmacSha256","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"hmacSha512","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.HyperLogLogFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cardinality","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"emptyApproxSet","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.operator.scalar.IpAddressFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"contains","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.JoniRegexpCasts",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castCharToJoniRegexp","parameterTypes":["java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"castVarcharToJoniRegexp","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.JoniRegexpFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"regexpCount","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpExtract","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpExtract","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","long"] }, 
    {"name":"regexpExtractAll","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpExtractAll","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","long"] }, 
    {"name":"regexpLike","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpPosition","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpPosition","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","long"] }, 
    {"name":"regexpPosition","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","long","long"] }, 
    {"name":"regexpReplace","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }, 
    {"name":"regexpReplace","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","io.airlift.slice.Slice"] }, 
    {"name":"regexpSplit","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.JoniRegexpReplaceLambdaFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"regexpReplace","parameterTypes":["io.airlift.slice.Slice","io.trino.type.JoniRegexp","io.trino.sql.gen.lambda.UnaryFunctionInterface"] }
  ]
},
{
  "name":"io.trino.operator.scalar.JsonFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castCharToJsonPath","parameterTypes":["java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"castVarcharToJsonPath","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"isJsonScalar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"jsonArrayContains","parameterTypes":["io.airlift.slice.Slice","double"] }, 
    {"name":"jsonArrayContains","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"jsonArrayContains","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"jsonArrayContains","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"jsonArrayGet","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"jsonArrayLength","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"jsonExtract","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }, 
    {"name":"jsonExtractScalar","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }, 
    {"name":"jsonFormat","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"jsonParse","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"jsonSize","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }, 
    {"name":"varcharIsJsonScalar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"varcharJsonArrayContains","parameterTypes":["io.airlift.slice.Slice","double"] }, 
    {"name":"varcharJsonArrayContains","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"varcharJsonArrayContains","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"varcharJsonArrayContains","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"varcharJsonArrayGet","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"varcharJsonArrayLength","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"varcharJsonExtract","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }, 
    {"name":"varcharJsonExtractScalar","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }, 
    {"name":"varcharJsonSize","parameterTypes":["io.airlift.slice.Slice","io.trino.operator.scalar.JsonPath"] }
  ]
},
{
  "name":"io.trino.operator.scalar.JsonOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromBigint","parameterTypes":["long"] }, 
    {"name":"castFromBoolean","parameterTypes":["boolean"] }, 
    {"name":"castFromDate","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"castFromDouble","parameterTypes":["double"] }, 
    {"name":"castFromInteger","parameterTypes":["long"] }, 
    {"name":"castFromReal","parameterTypes":["long"] }, 
    {"name":"castFromSmallInt","parameterTypes":["long"] }, 
    {"name":"castFromTinyInt","parameterTypes":["long"] }, 
    {"name":"castFromVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBigint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBoolean","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToDouble","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToInteger","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToReal","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToSmallint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToTinyint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToVarchar","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.JsonToArrayCast",
  "methods":[{"name":"toArray","parameterTypes":["io.trino.spi.type.ArrayType","io.trino.util.JsonUtil$BlockBuilderAppender","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.JsonToMapCast",
  "methods":[{"name":"toMap","parameterTypes":["io.trino.spi.type.MapType","io.trino.util.JsonUtil$BlockBuilderAppender","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.JsonToRowCast",
  "methods":[{"name":"toRow","parameterTypes":["io.trino.spi.type.RowType","io.trino.util.JsonUtil$BlockBuilderAppender","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.LuhnCheckFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"luhnCheck","parameterTypes":["io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.MapCardinalityFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"mapCardinality","parameterTypes":["io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.MapConcatFunction",
  "methods":[
    {"name":"createMapState","parameterTypes":["io.trino.spi.type.MapType"] }, 
    {"name":"mapConcat","parameterTypes":["io.trino.spi.type.MapType","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","java.lang.Object","io.trino.spi.block.Block[]"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapConstructor",
  "methods":[{"name":"createMap","parameterTypes":["io.trino.spi.type.MapType","java.lang.invoke.MethodHandle","io.trino.operator.scalar.MapConstructor$State","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.MapElementAtFunction",
  "methods":[
    {"name":"elementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","double"] }, 
    {"name":"elementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","long"] }, 
    {"name":"elementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"elementAt","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapEntriesFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"mapFromEntries","parameterTypes":["io.trino.spi.type.RowType","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapFilterFunction",
  "methods":[{"name":"createState","parameterTypes":["io.trino.spi.type.MapType"] }]
},
{
  "name":"io.trino.operator.scalar.MapFromEntriesFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"mapFromEntries","parameterTypes":["io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.type.MapType","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapKeys",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getKeys","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.MapSubscriptOperator",
  "methods":[
    {"name":"subscript","parameterTypes":["io.trino.operator.scalar.MapSubscriptOperator$MissingKeyExceptionFactory","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","double"] }, 
    {"name":"subscript","parameterTypes":["io.trino.operator.scalar.MapSubscriptOperator$MissingKeyExceptionFactory","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","long"] }, 
    {"name":"subscript","parameterTypes":["io.trino.operator.scalar.MapSubscriptOperator$MissingKeyExceptionFactory","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","java.lang.Object"] }, 
    {"name":"subscript","parameterTypes":["io.trino.operator.scalar.MapSubscriptOperator$MissingKeyExceptionFactory","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapToJsonCast",
  "methods":[{"name":"toJson","parameterTypes":["io.trino.util.JsonUtil$ObjectKeyProvider","io.trino.util.JsonUtil$JsonGeneratorWriter","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.MapToMapCast",
  "methods":[
    {"name":"checkBlockIsNotNull","parameterTypes":["io.trino.spi.block.Block"] }, 
    {"name":"checkBooleanIsNotNull","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"checkDoubleIsNotNull","parameterTypes":["java.lang.Double"] }, 
    {"name":"checkLongIsNotNull","parameterTypes":["java.lang.Long"] }, 
    {"name":"checkSliceIsNotNull","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"mapCast","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.invoke.MethodHandle","io.trino.spi.type.Type","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.connector.ConnectorSession","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MapTransformKeysFunction",
  "methods":[{"name":"createState","parameterTypes":["io.trino.spi.type.MapType"] }]
},
{
  "name":"io.trino.operator.scalar.MapValues",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getValues","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.MapZipWithFunction",
  "methods":[
    {"name":"createState","parameterTypes":["io.trino.spi.type.MapType"] }, 
    {"name":"mapZipWith","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.type.MapType","java.lang.Object","io.trino.spi.block.Block","io.trino.spi.block.Block","io.trino.operator.scalar.MapZipWithFunction$MapZipWithLambda"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"abs","parameterTypes":["double"] }, 
    {"name":"abs","parameterTypes":["long"] }, 
    {"name":"absFloat","parameterTypes":["long"] }, 
    {"name":"absInteger","parameterTypes":["long"] }, 
    {"name":"absSmallint","parameterTypes":["long"] }, 
    {"name":"absTinyint","parameterTypes":["long"] }, 
    {"name":"acos","parameterTypes":["double"] }, 
    {"name":"asin","parameterTypes":["double"] }, 
    {"name":"atan","parameterTypes":["double"] }, 
    {"name":"atan2","parameterTypes":["double","double"] }, 
    {"name":"betaCdf","parameterTypes":["double","double","double"] }, 
    {"name":"cbrt","parameterTypes":["double"] }, 
    {"name":"ceiling","parameterTypes":["double"] }, 
    {"name":"ceiling","parameterTypes":["long"] }, 
    {"name":"ceilingFloat","parameterTypes":["long"] }, 
    {"name":"ceilingInteger","parameterTypes":["long"] }, 
    {"name":"ceilingSmallint","parameterTypes":["long"] }, 
    {"name":"ceilingTinyint","parameterTypes":["long"] }, 
    {"name":"cos","parameterTypes":["double"] }, 
    {"name":"cosh","parameterTypes":["double"] }, 
    {"name":"cosineSimilarity","parameterTypes":["io.trino.type.BlockTypeOperators$BlockPositionEqual","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"degrees","parameterTypes":["double"] }, 
    {"name":"e","parameterTypes":[] }, 
    {"name":"exp","parameterTypes":["double"] }, 
    {"name":"floor","parameterTypes":["double"] }, 
    {"name":"floor","parameterTypes":["long"] }, 
    {"name":"floorFloat","parameterTypes":["long"] }, 
    {"name":"floorInteger","parameterTypes":["long"] }, 
    {"name":"floorSmallint","parameterTypes":["long"] }, 
    {"name":"floorTinyint","parameterTypes":["long"] }, 
    {"name":"fromBase","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"infinity","parameterTypes":[] }, 
    {"name":"inverseBetaCdf","parameterTypes":["double","double","double"] }, 
    {"name":"inverseNormalCdf","parameterTypes":["double","double","double"] }, 
    {"name":"isFinite","parameterTypes":["double"] }, 
    {"name":"isInfinite","parameterTypes":["double"] }, 
    {"name":"isNaN","parameterTypes":["double"] }, 
    {"name":"isNaNReal","parameterTypes":["long"] }, 
    {"name":"ln","parameterTypes":["double"] }, 
    {"name":"log","parameterTypes":["double","double"] }, 
    {"name":"log10","parameterTypes":["double"] }, 
    {"name":"log2","parameterTypes":["double"] }, 
    {"name":"mod","parameterTypes":["double","double"] }, 
    {"name":"mod","parameterTypes":["long","long"] }, 
    {"name":"modFloat","parameterTypes":["long","long"] }, 
    {"name":"modInteger","parameterTypes":["long","long"] }, 
    {"name":"modSmallint","parameterTypes":["long","long"] }, 
    {"name":"modTinyint","parameterTypes":["long","long"] }, 
    {"name":"nan","parameterTypes":[] }, 
    {"name":"normalCdf","parameterTypes":["double","double","double"] }, 
    {"name":"pi","parameterTypes":[] }, 
    {"name":"power","parameterTypes":["double","double"] }, 
    {"name":"radians","parameterTypes":["double"] }, 
    {"name":"random","parameterTypes":[] }, 
    {"name":"random","parameterTypes":["long"] }, 
    {"name":"random","parameterTypes":["long","long"] }, 
    {"name":"randomInteger","parameterTypes":["long"] }, 
    {"name":"randomInteger","parameterTypes":["long","long"] }, 
    {"name":"randomSmallint","parameterTypes":["long"] }, 
    {"name":"randomSmallint","parameterTypes":["long","long"] }, 
    {"name":"randomTinyint","parameterTypes":["long"] }, 
    {"name":"randomTinyint","parameterTypes":["long","long"] }, 
    {"name":"round","parameterTypes":["double"] }, 
    {"name":"round","parameterTypes":["double","long"] }, 
    {"name":"round","parameterTypes":["long"] }, 
    {"name":"round","parameterTypes":["long","long"] }, 
    {"name":"roundInteger","parameterTypes":["long"] }, 
    {"name":"roundInteger","parameterTypes":["long","long"] }, 
    {"name":"roundReal","parameterTypes":["long"] }, 
    {"name":"roundReal","parameterTypes":["long","long"] }, 
    {"name":"roundSmallint","parameterTypes":["long"] }, 
    {"name":"roundSmallint","parameterTypes":["long","long"] }, 
    {"name":"roundTinyint","parameterTypes":["long"] }, 
    {"name":"roundTinyint","parameterTypes":["long","long"] }, 
    {"name":"sign","parameterTypes":["double"] }, 
    {"name":"sign","parameterTypes":["long"] }, 
    {"name":"signFloat","parameterTypes":["long"] }, 
    {"name":"signInteger","parameterTypes":["long"] }, 
    {"name":"signSmallint","parameterTypes":["long"] }, 
    {"name":"signTinyint","parameterTypes":["long"] }, 
    {"name":"sin","parameterTypes":["double"] }, 
    {"name":"sqrt","parameterTypes":["double"] }, 
    {"name":"tan","parameterTypes":["double"] }, 
    {"name":"tanh","parameterTypes":["double"] }, 
    {"name":"toBase","parameterTypes":["long","long"] }, 
    {"name":"truncate","parameterTypes":["double"] }, 
    {"name":"truncate","parameterTypes":["long"] }, 
    {"name":"widthBucket","parameterTypes":["double","double","double","long"] }, 
    {"name":"widthBucket","parameterTypes":["double","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Abs",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"absLong","parameterTypes":["io.trino.spi.type.Int128"] }, 
    {"name":"absShort","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Ceiling",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"ceilingLong","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"ceilingLongShort","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"ceilingShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Floor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"floorLong","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"floorLongShort","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"floorShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Round",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"roundLongLong","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"roundLongShort","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"roundShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$RoundN",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"roundNLong","parameterTypes":["long","long","io.trino.spi.type.Int128","long"] }, 
    {"name":"roundNShort","parameterTypes":["long","long","long","long"] }, 
    {"name":"roundNShortLong","parameterTypes":["long","long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Sign",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"signDecimalLong","parameterTypes":["io.trino.spi.type.Int128"] }, 
    {"name":"signDecimalShort","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$Truncate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"truncateLong","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"truncateLongShort","parameterTypes":["long","io.trino.spi.type.Int128"] }, 
    {"name":"truncateShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MathFunctions$TruncateN",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"truncateLong","parameterTypes":["long","long","io.trino.spi.type.Int128","long"] }, 
    {"name":"truncateShort","parameterTypes":["long","long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.MultimapFromEntriesFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"multimapFromEntries","parameterTypes":["io.trino.spi.type.MapType","io.trino.type.BlockTypeOperators$BlockPositionIsDistinctFrom","io.trino.type.BlockTypeOperators$BlockPositionHashCode","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.QuantileDigestFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"valueAtQuantileBigint","parameterTypes":["io.airlift.slice.Slice","double"] }, 
    {"name":"valueAtQuantileDouble","parameterTypes":["io.airlift.slice.Slice","double"] }, 
    {"name":"valueAtQuantileReal","parameterTypes":["io.airlift.slice.Slice","double"] }, 
    {"name":"valuesAtQuantilesBigint","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.block.Block"] }, 
    {"name":"valuesAtQuantilesDouble","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.block.Block"] }, 
    {"name":"valuesAtQuantilesReal","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.Re2JCastToRegexpFunction",
  "methods":[{"name":"castToRegexp","parameterTypes":["int","int","boolean","long","io.airlift.slice.Slice"] }]
},
{
  "name":"io.trino.operator.scalar.RepeatFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"repeat","parameterTypes":["io.trino.spi.type.Type","java.lang.Boolean","long"] }, 
    {"name":"repeat","parameterTypes":["io.trino.spi.type.Type","java.lang.Double","long"] }, 
    {"name":"repeat","parameterTypes":["io.trino.spi.type.Type","java.lang.Long","long"] }, 
    {"name":"repeat","parameterTypes":["io.trino.spi.type.Type","java.lang.Object","long"] }, 
    {"name":"repeat","parameterTypes":["java.lang.Boolean","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.RowToJsonCast",
  "methods":[{"name":"toJsonObject","parameterTypes":["java.util.List","java.util.List","io.trino.spi.block.Block"] }]
},
{
  "name":"io.trino.operator.scalar.SequenceFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"sequence","parameterTypes":["long","long","long"] }, 
    {"name":"sequenceDateDayToSecond","parameterTypes":["long","long","long"] }, 
    {"name":"sequenceDateDefaultStep","parameterTypes":["long","long"] }, 
    {"name":"sequenceDateYearToMonth","parameterTypes":["long","long","long"] }, 
    {"name":"sequenceDefaultStep","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.SessionFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"currentCatalog","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"currentGroups","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"currentPath","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"currentSchema","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }, 
    {"name":"currentUser","parameterTypes":["io.trino.spi.connector.ConnectorSession"] }
  ]
},
{
  "name":"io.trino.operator.scalar.SplitToMapFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"splitToMap","parameterTypes":["io.trino.spi.type.Type","io.airlift.slice.Slice","io.airlift.slice.Slice","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.SplitToMultimapFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.spi.type.Type"] }, 
    {"name":"splitToMultimap","parameterTypes":["io.trino.spi.type.Type","io.airlift.slice.Slice","io.airlift.slice.Slice","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.StringFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castCharToCodePoints","parameterTypes":["java.lang.Long","io.airlift.slice.Slice"] }, 
    {"name":"castVarcharToCodePoints","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"charLeftTrim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"charLeftTrim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"charLength","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"charLower","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"charRightTrim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"charRightTrim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"charSubstr","parameterTypes":["java.lang.Long","io.airlift.slice.Slice","long","long"] }, 
    {"name":"charSubstring","parameterTypes":["java.lang.Long","io.airlift.slice.Slice","long"] }, 
    {"name":"charTrim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"charTrim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"charUpper","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"chr","parameterTypes":["long"] }, 
    {"name":"codepoint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"concat","parameterTypes":["java.lang.Long","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"fromUtf8","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromUtf8","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"fromUtf8","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"hammingDistance","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"leftPad","parameterTypes":["io.airlift.slice.Slice","long","io.airlift.slice.Slice"] }, 
    {"name":"leftTrim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"leftTrim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"length","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"levenshteinDistance","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"lower","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"normalize","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"replace","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"replace","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"reverse","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"rightPad","parameterTypes":["io.airlift.slice.Slice","long","io.airlift.slice.Slice"] }, 
    {"name":"rightTrim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"rightTrim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"soundex","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"spaceTrimmedLength","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"split","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"split","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice","long"] }, 
    {"name":"splitPart","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice","long"] }, 
    {"name":"startsWith","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"stringPosition","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"stringPosition","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice","long"] }, 
    {"name":"substring","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"substring","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"toUtf8","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"translate","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"trim","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"trim","parameterTypes":["io.airlift.slice.Slice","int[]"] }, 
    {"name":"upper","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.TDigestFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"valueAtQuantile","parameterTypes":["io.airlift.stats.TDigest","double"] }, 
    {"name":"valuesAtQuantiles","parameterTypes":["io.airlift.stats.TDigest","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.operator.scalar.TryFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"tryBoolean","parameterTypes":["io.trino.operator.scalar.TryFunction$TryBooleanLambda"] }, 
    {"name":"tryDouble","parameterTypes":["io.trino.operator.scalar.TryFunction$TryDoubleLambda"] }, 
    {"name":"tryLong","parameterTypes":["io.trino.operator.scalar.TryFunction$TryLongLambda"] }, 
    {"name":"tryObject","parameterTypes":["io.trino.operator.scalar.TryFunction$TryObjectLambda"] }
  ]
},
{
  "name":"io.trino.operator.scalar.TypeOfFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"typeof","parameterTypes":["io.trino.spi.type.Type","java.lang.Object"] }]
},
{
  "name":"io.trino.operator.scalar.UrlFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"urlDecode","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlEncode","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractFragment","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractHost","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractParameter","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"urlExtractPath","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractPort","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractProtocol","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"urlExtractQuery","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.VarbinaryFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"crc32","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase32Varbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase32Varchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase64UrlVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase64UrlVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase64Varbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBase64Varchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBigEndian32","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromBigEndian64","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromHexVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromHexVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromIEEE754Binary32","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"fromIEEE754Binary64","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"leftPad","parameterTypes":["io.airlift.slice.Slice","long","io.airlift.slice.Slice"] }, 
    {"name":"length","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"md5","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"murmur3","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"reverse","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"rightPad","parameterTypes":["io.airlift.slice.Slice","long","io.airlift.slice.Slice"] }, 
    {"name":"sha1","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"sha256","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"sha512","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"spookyHashV2_32","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"spookyHashV2_64","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"substr","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"substr","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"toBase32","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"toBase64","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"toBase64Url","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"toBigEndian32","parameterTypes":["long"] }, 
    {"name":"toBigEndian64","parameterTypes":["long"] }, 
    {"name":"toHex","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"toIEEE754Binary32","parameterTypes":["long"] }, 
    {"name":"toIEEE754Binary64","parameterTypes":["double"] }, 
    {"name":"xxhash64","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.VersionFunction",
  "methods":[{"name":"getVersion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.trino.operator.scalar.WilsonInterval",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"wilsonIntervalLower","parameterTypes":["long","long","double"] }, 
    {"name":"wilsonIntervalUpper","parameterTypes":["long","long","double"] }
  ]
},
{
  "name":"io.trino.operator.scalar.WordStemFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"wordStem","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"wordStem","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.ZipFunction",
  "methods":[{"name":"zip","parameterTypes":["java.util.List","io.trino.spi.block.Block[]"] }]
},
{
  "name":"io.trino.operator.scalar.ZipWithFunction",
  "methods":[
    {"name":"createState","parameterTypes":["io.trino.spi.type.ArrayType"] }, 
    {"name":"zipWith","parameterTypes":["io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.spi.type.ArrayType","java.lang.Object","io.trino.spi.block.Block","io.trino.spi.block.Block","io.trino.sql.gen.lambda.BinaryFunctionInterface"] }
  ]
},
{
  "name":"io.trino.operator.scalar.json.JsonArrayFunction",
  "methods":[{"name":"jsonArray","parameterTypes":["io.trino.spi.type.RowType","io.trino.spi.block.Block","boolean"] }]
},
{
  "name":"io.trino.operator.scalar.json.JsonExistsFunction",
  "methods":[{"name":"jsonExists","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long"] }]
},
{
  "name":"io.trino.operator.scalar.json.JsonInputFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"varbinaryToJson","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"varbinaryUtf16ToJson","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"varbinaryUtf32ToJson","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"varbinaryUtf8ToJson","parameterTypes":["io.airlift.slice.Slice","boolean"] }, 
    {"name":"varcharToJson","parameterTypes":["io.airlift.slice.Slice","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.json.JsonObjectFunction",
  "methods":[{"name":"jsonObject","parameterTypes":["io.trino.spi.type.RowType","io.trino.spi.type.RowType","io.trino.spi.block.Block","io.trino.spi.block.Block","boolean","boolean"] }]
},
{
  "name":"io.trino.operator.scalar.json.JsonOutputFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"jsonToVarbinary","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","long","boolean"] }, 
    {"name":"jsonToVarbinaryUtf16","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","long","boolean"] }, 
    {"name":"jsonToVarbinaryUtf32","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","long","boolean"] }, 
    {"name":"jsonToVarbinaryUtf8","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","long","boolean"] }, 
    {"name":"jsonToVarchar","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","long","boolean"] }
  ]
},
{
  "name":"io.trino.operator.scalar.json.JsonQueryFunction",
  "methods":[{"name":"jsonQuery","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","long","long"] }]
},
{
  "name":"io.trino.operator.scalar.json.JsonValueFunction",
  "methods":[
    {"name":"jsonValue","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","java.lang.Object","long","java.lang.Object"] }, 
    {"name":"jsonValueBoolean","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","java.lang.Boolean","long","java.lang.Boolean"] }, 
    {"name":"jsonValueDouble","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","java.lang.Double","long","java.lang.Double"] }, 
    {"name":"jsonValueLong","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","java.lang.Long","long","java.lang.Long"] }, 
    {"name":"jsonValueSlice","parameterTypes":["io.trino.metadata.FunctionManager","io.trino.metadata.Metadata","io.trino.spi.type.TypeManager","io.trino.spi.type.Type","io.trino.spi.type.Type","io.trino.json.JsonPathInvocationContext","io.trino.spi.connector.ConnectorSession","com.fasterxml.jackson.databind.JsonNode","io.trino.json.ir.IrJsonPath","io.trino.spi.block.Block","long","io.airlift.slice.Slice","long","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.time.LocalTimeFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"localTime","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","java.lang.Long"] }]
},
{
  "name":"io.trino.operator.scalar.time.TimeFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"dateAdd","parameterTypes":["long","io.airlift.slice.Slice","long","long"] }, 
    {"name":"dateDiff","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"hour","parameterTypes":["long"] }, 
    {"name":"millisecond","parameterTypes":["long"] }, 
    {"name":"minute","parameterTypes":["long"] }, 
    {"name":"second","parameterTypes":["long"] }, 
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.time.TimeOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromVarchar","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"castToTime","parameterTypes":["long","long","long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"intervalDayToSecondPlusTime","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"timeMinusIntervalDayToSecond","parameterTypes":["long","long"] }, 
    {"name":"timePlusIntervalDayToSecond","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.time.TimeToTimeWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"castToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.time.TimeToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"castToShort","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.time.TimeToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"castToShort","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.DateAdd",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","io.airlift.slice.Slice","long","long"] }, 
    {"name":"add","parameterTypes":["io.airlift.slice.Slice","long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.DateDiff",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimestamp","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.DateFormat",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.airlift.slice.Slice"] }, 
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.DateToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long"] }, 
    {"name":"castToShort","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.DateTrunc",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractDay",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractDayOfWeek",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractDayOfYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractHour",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractMillisecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractMinute",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractQuarter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractWeekOfYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ExtractYearOfWeek",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.FormatDateTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.airlift.slice.Slice"] }, 
    {"name":"formatDatetime","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.HumanReadableSeconds",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"humanReadableSeconds","parameterTypes":["double"] }]
},
{
  "name":"io.trino.operator.scalar.timestamp.LastDayOfMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"lastDayOfMonth","parameterTypes":["long"] }, 
    {"name":"lastDayOfMonth","parameterTypes":["io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.LocalTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"localTimestamp","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"localTimestamp","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","java.lang.Long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.SequenceIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"sequence","parameterTypes":["long","long","long"] }, 
    {"name":"sequence","parameterTypes":["io.trino.spi.type.LongTimestamp","io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.SequenceIntervalYearToMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"sequence","parameterTypes":["long","long","long"] }, 
    {"name":"sequence","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp","io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimeWithTimeZoneToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"shortToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$IntervalDayToSecondPlusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$IntervalYearToMonthPlusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$TimestampMinusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$TimestampMinusIntervalYearToMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$TimestampMinusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimestamp","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$TimestampPlusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampOperators$TimestampPlusIntervalYearToMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.type.LongTimestamp","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToDateCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"cast","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToJsonCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToTimeCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToTimeWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"shortToLong","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"shortToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"shortToLong","parameterTypes":["long"] }, 
    {"name":"shortToShort","parameterTypes":["long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestamp"] }, 
    {"name":"shortToLong","parameterTypes":["long","long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"shortToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.TimestampToVarcharCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.ToIso8601",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"toIso8601","parameterTypes":["long","long"] }, 
    {"name":"toIso8601","parameterTypes":["long","io.trino.spi.type.LongTimestamp"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.VarcharToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"castToShort","parameterTypes":["long","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamp.WithTimeZone",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"largePrecision","parameterTypes":["long","io.trino.spi.type.LongTimestamp","io.airlift.slice.Slice"] }, 
    {"name":"mediumPrecision","parameterTypes":["long","long","io.airlift.slice.Slice"] }, 
    {"name":"shortPrecision","parameterTypes":["long","long","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.AtTimeZone",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"atTimeZone","parameterTypes":["long","io.airlift.slice.Slice"] }, 
    {"name":"atTimeZone","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.AtTimeZoneWithOffset",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"atTimeZone","parameterTypes":["long","long"] }, 
    {"name":"atTimeZone","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.CurrentTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longTimestamp","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"shortTimestamp","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","java.lang.Long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.DateAdd",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","io.airlift.slice.Slice","long","long"] }, 
    {"name":"add","parameterTypes":["io.airlift.slice.Slice","long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.DateDiff",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.DateFormat",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.airlift.slice.Slice"] }, 
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestampWithTimeZone","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.DateToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"castToShort","parameterTypes":["io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.DateTrunc",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractDay",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractDayOfWeek",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractDayOfYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractHour",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractMillisecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractMinute",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractQuarter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractWeekOfYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractYear",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ExtractYearOfWeek",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.FormatDateTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.airlift.slice.Slice"] }, 
    {"name":"format","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimestampWithTimeZone","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.LastDayOfMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"lastDayOfMonth","parameterTypes":["long"] }, 
    {"name":"lastDayOfMonth","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimeZoneHour",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimeZoneMinute",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$IntervalDayToSecondPlusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long","long"] }, 
    {"name":"add","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$IntervalYearToMonthPlusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$TimestampMinusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$TimestampMinusIntervalYearToMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$TimestampMinusTimestamp",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$TimestampPlusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneOperators$TimestampPlusIntervalYearToMonth",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToDateCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long"] }, 
    {"name":"cast","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToTimeCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToTimeWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long"] }, 
    {"name":"shortToShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToTimestampCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long"] }, 
    {"name":"shortToShort","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long"] }, 
    {"name":"shortToShort","parameterTypes":["long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.TimestampWithTimeZoneToVarcharCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ToIso8601",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"toIso8601","parameterTypes":["long","long"] }, 
    {"name":"toIso8601","parameterTypes":["long","io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.ToUnixTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"toUnixTime","parameterTypes":["long"] }, 
    {"name":"toUnixTime","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timestamptz.VarcharToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }, 
    {"name":"castToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.AtTimeZone",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"atTimeZone","parameterTypes":["io.trino.spi.connector.ConnectorSession","long","io.airlift.slice.Slice"] }, 
    {"name":"atTimeZone","parameterTypes":["io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.AtTimeZoneWithOffset",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"atTimeZone","parameterTypes":["long","long"] }, 
    {"name":"atTimeZone","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.CurrentTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longTime","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"shortTime","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","java.lang.Long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.DateAdd",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","io.airlift.slice.Slice","long","long"] }, 
    {"name":"add","parameterTypes":["io.airlift.slice.Slice","long","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.DateDiff",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","long","long"] }, 
    {"name":"diff","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimeWithTimeZone","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.DateTrunc",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","long"] }, 
    {"name":"truncate","parameterTypes":["io.airlift.slice.Slice","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.ExtractHour",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.ExtractMillisecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.ExtractMinute",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.ExtractSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneOperators$IntervalDayToSecondPlusTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["long","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneOperators$TimeMinusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneOperators$TimeMinusTime",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"subtract","parameterTypes":["long","long"] }, 
    {"name":"subtract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneOperators$TimePlusIntervalDayToSecond",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"add","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneToTimeCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneToTimeWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long"] }, 
    {"name":"shortToShort","parameterTypes":["long","long","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneToTimestampWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"longToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"longToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.trino.spi.type.LongTimeWithTimeZone"] }, 
    {"name":"shortToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }, 
    {"name":"shortToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","long"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeWithTimeZoneToVarcharCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cast","parameterTypes":["long","long"] }, 
    {"name":"cast","parameterTypes":["long","io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeZoneHour",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.TimeZoneMinute",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"extract","parameterTypes":["long"] }, 
    {"name":"extract","parameterTypes":["io.trino.spi.type.LongTimeWithTimeZone"] }
  ]
},
{
  "name":"io.trino.operator.scalar.timetz.VarcharToTimeWithTimeZoneCast",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToLong","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }, 
    {"name":"castToShort","parameterTypes":["long","io.trino.spi.connector.ConnectorSession","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.operator.window.CumulativeDistributionFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.window.DenseRankFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.window.FirstValueFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"io.trino.operator.window.LagFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"io.trino.operator.window.LastValueFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"io.trino.operator.window.LeadFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"io.trino.operator.window.NTileFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.trino.operator.window.NthValueFunction",
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"io.trino.operator.window.PercentRankFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.window.RankFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.operator.window.RowNumberFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.plugin.base.metrics.DurationTiming",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"getAirliftDuration","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.plugin.base.metrics.TDigestHistogram",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.airlift.stats.TDigest"] }, 
    {"name":"getDigest","parameterTypes":[] }, 
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getP01","parameterTypes":[] }, 
    {"name":"getP05","parameterTypes":[] }, 
    {"name":"getP10","parameterTypes":[] }, 
    {"name":"getP25","parameterTypes":[] }, 
    {"name":"getP50","parameterTypes":[] }, 
    {"name":"getP75","parameterTypes":[] }, 
    {"name":"getP90","parameterTypes":[] }, 
    {"name":"getP95","parameterTypes":[] }, 
    {"name":"getP99","parameterTypes":[] }, 
    {"name":"getTotal","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.plugin.base.metrics.TDigestHistogram$Base64ToTDigestConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.plugin.base.metrics.TDigestHistogram$TDigestToBase64Converter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.plugin.memory.MemoryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxDataPerNode","parameterTypes":[] }, 
    {"name":"getSplitsPerNode","parameterTypes":[] }, 
    {"name":"isEnableLazyDynamicFiltering","parameterTypes":[] }, 
    {"name":"setEnableLazyDynamicFiltering","parameterTypes":["boolean"] }, 
    {"name":"setMaxDataPerNode","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSplitsPerNode","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.plugin.memory.MemoryConnector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemoryConnector$$FastClassByGuice$$312553000",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.memory.MemoryMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemoryMetadata$$FastClassByGuice$$314304706",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.memory.MemoryModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.plugin.memory.MemoryPageSinkProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemoryPageSinkProvider$$FastClassByGuice$$317874982",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.memory.MemoryPageSourceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemoryPageSourceProvider$$FastClassByGuice$$317175357",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.memory.MemoryPagesStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemoryPagesStore$$FastClassByGuice$$316548102",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.memory.MemorySplitManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.plugin.memory.MemorySplitManager$$FastClassByGuice$$314862971",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.plugin.tpch.TpchColumnHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","io.trino.spi.type.Type"] }, 
    {"name":"getColumnName","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.plugin.tpch.TpchSplit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["int","int","java.util.List"] }, 
    {"name":"getAddresses","parameterTypes":[] }, 
    {"name":"getPartNumber","parameterTypes":[] }, 
    {"name":"getTotalParts","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.plugin.tpch.TpchTableHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","double","io.trino.spi.predicate.TupleDomain"] }, 
    {"name":"getConstraint","parameterTypes":[] }, 
    {"name":"getScaleFactor","parameterTypes":[] }, 
    {"name":"getSchemaName","parameterTypes":[] }, 
    {"name":"getTableName","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.plugin.tpch.TpchTransactionHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.security.AccessControl",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.security.AccessControlConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.security.AccessControlConfig$$FastClassByGuice$$180567729",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.security.AccessControlManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.security.GroupProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.security.GroupProviderManager$$FastClassByGuice$$184957249",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.AsyncHttpExecutionMBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getResponseExecutor","parameterTypes":[] }, 
    {"name":"getTimeoutExecutor","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.AsyncHttpExecutionMBean$$FastClassByGuice$$140202950",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.CoordinatorModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.CoordinatorModule$$FastClassByGuice$$41086804",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.CoordinatorModule$ExecutorCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.trino.server.CoordinatorModule$ExecutorCleanup$$FastClassByGuice$$109724633",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.DynamicFilterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.DynamicFilterService$$FastClassByGuice$$91583687",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ExchangeExecutionMBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getExecutor","parameterTypes":[] }]
},
{
  "name":"io.trino.server.ExchangeExecutionMBean$$FastClassByGuice$$144916446",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ExpressionSerialization$ExpressionDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ExpressionSerialization$ExpressionDeserializer$$FastClassByGuice$$300023967",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ExpressionSerialization$ExpressionSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.ExpressionSerialization$ExpressionSerializer$$FastClassByGuice$$299838717",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ForAsyncHttp",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ForStartup",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ForStatementResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ForWorkerInfo",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.GenerateTraceTokenRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.GenerateTraceTokenRequestFilter$$FastClassByGuice$$209310048",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.GracefulShutdownHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.GracefulShutdownHandler$$FastClassByGuice$$186530861",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.HttpRemoteTaskFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"createRemoteTask","parameterTypes":["io.trino.Session","io.trino.execution.TaskId","io.trino.metadata.InternalNode","io.trino.sql.planner.PlanFragment","com.google.common.collect.Multimap","io.trino.execution.buffer.OutputBuffers","io.trino.execution.NodeTaskMap$PartitionedSplitCountTracker","java.util.Set","java.util.Optional","boolean"] }, 
    {"name":"getExecutor","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.HttpRemoteTaskFactory$$FastClassByGuice$$208334042",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.HttpRequestSessionContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.HttpRequestSessionContextFactory$$FastClassByGuice$$112507334",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.InternalAuthenticationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.InternalAuthenticationManager$$FastClassByGuice$$113760420",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.InternalCommunicationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getKeyStorePassword","parameterTypes":[] }, 
    {"name":"getKeyStorePath","parameterTypes":[] }, 
    {"name":"getSharedSecret","parameterTypes":[] }, 
    {"name":"getTrustStorePassword","parameterTypes":[] }, 
    {"name":"getTrustStorePath","parameterTypes":[] }, 
    {"name":"isHttp2Enabled","parameterTypes":[] }, 
    {"name":"isHttpServerHttpsEnabled","parameterTypes":[] }, 
    {"name":"isHttpsEnabledWhenRequired","parameterTypes":[] }, 
    {"name":"isHttpsRequired","parameterTypes":[] }, 
    {"name":"isRequiredSharedSecretSet","parameterTypes":[] }, 
    {"name":"setHttp2Enabled","parameterTypes":["boolean"] }, 
    {"name":"setHttpServerHttpsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setHttpsRequired","parameterTypes":["boolean"] }, 
    {"name":"setKeyStorePassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setKeyStorePath","parameterTypes":["java.lang.String"] }, 
    {"name":"setSharedSecret","parameterTypes":["java.lang.String"] }, 
    {"name":"setTrustStorePassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setTrustStorePath","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.server.InternalCommunicationModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.NodeResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getFailed","parameterTypes":[] }, 
    {"name":"getNodeStats","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.NodeResource$$FastClassByGuice$$69412410",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.PagesResponseWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getSize","parameterTypes":["java.util.List","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"writeTo","parameterTypes":["java.util.List","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType","javax.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }
  ]
},
{
  "name":"io.trino.server.PagesResponseWriter$$FastClassByGuice$$144250206",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.PluginManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.PluginManager$$FastClassByGuice$$172913916",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.PluginManager$PluginsProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ProtocolConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAlternateHeaderName","parameterTypes":[] }, 
    {"name":"getPreparedStatementCompressionMinimalGain","parameterTypes":[] }, 
    {"name":"getPreparedStatementCompressionThreshold","parameterTypes":[] }, 
    {"name":"setAlternateHeaderName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPreparedStatementCompressionMinimalGain","parameterTypes":["int"] }, 
    {"name":"setPreparedStatementCompressionThreshold","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.server.QueryExecutionFactoryModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.QueryResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cancelQuery","parameterTypes":["io.trino.spi.QueryId","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"getAllQueryInfo","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"getQueryInfo","parameterTypes":["io.trino.spi.QueryId","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"killQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"preemptQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }
  ]
},
{
  "name":"io.trino.server.QueryResource$$FastClassByGuice$$72773637",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.QuerySessionSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.QuerySessionSupplier$$FastClassByGuice$$193368573",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.QueryStateInfoResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getQueryStateInfo","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"getQueryStateInfos","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }
  ]
},
{
  "name":"io.trino.server.QueryStateInfoResource$$FastClassByGuice$$73872665",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ResourceGroupStateInfoResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getQueryStateInfos","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.trino.server.ResourceGroupStateInfoResource$$FastClassByGuice$$75396430",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getGracePeriod","parameterTypes":[] }, 
    {"name":"getQueryInfoUrlTemplate","parameterTypes":[] }, 
    {"name":"isConcurrentStartup","parameterTypes":[] }, 
    {"name":"isCoordinator","parameterTypes":[] }, 
    {"name":"isIncludeExceptionInResponse","parameterTypes":[] }, 
    {"name":"isQueryResultsCompressionEnabled","parameterTypes":[] }, 
    {"name":"setConcurrentStartup","parameterTypes":["boolean"] }, 
    {"name":"setCoordinator","parameterTypes":["boolean"] }, 
    {"name":"setGracePeriod","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setIncludeExceptionInResponse","parameterTypes":["boolean"] }, 
    {"name":"setQueryInfoUrlTemplate","parameterTypes":["java.lang.String"] }, 
    {"name":"setQueryResultsCompressionEnabled","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.server.ServerInfoResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getInfo","parameterTypes":[] }, 
    {"name":"getServerCoordinator","parameterTypes":[] }, 
    {"name":"getServerState","parameterTypes":[] }, 
    {"name":"updateState","parameterTypes":["io.trino.metadata.NodeState"] }
  ]
},
{
  "name":"io.trino.server.ServerInfoResource$$FastClassByGuice$$170803047",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerMainModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ServerMainModule$$FastClassByGuice$$44115254",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerMainModule$ExecutorCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.trino.server.ServerMainModule$ExecutorCleanup$$FastClassByGuice$$179152427",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerMainModule$RegisterFunctionBundles",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ServerMainModule$RegisterFunctionBundles$$FastClassByGuice$$158849294",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerMainModule$RegisterJsonPath2016Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ServerMainModule$RegisterJsonPath2016Type$$FastClassByGuice$$161873787",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerPluginsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ServerPluginsProvider$$FastClassByGuice$$301281887",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ServerPluginsProviderConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getInstalledPluginsDir","parameterTypes":[] }, 
    {"name":"setInstalledPluginsDir","parameterTypes":["java.io.File"] }
  ]
},
{
  "name":"io.trino.server.SessionPropertyDefaults",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.SessionPropertyDefaults$$FastClassByGuice$$118573430",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.SessionSupplier",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ShutdownAction",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.SliceSerialization$SliceDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.SliceSerialization$SliceDeserializer$$FastClassByGuice$$297990675",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.SliceSerialization$SliceSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.SliceSerialization$SliceSerializer$$FastClassByGuice$$296817374",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.StartupStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.StartupStatus$$FastClassByGuice$$110479567",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.StatementHttpExecutionMBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getResponseExecutor","parameterTypes":[] }, 
    {"name":"getTimeoutExecutor","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.StatementHttpExecutionMBean$$FastClassByGuice$$66347963",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.StatusResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"statusPing","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.StatusResource$$FastClassByGuice$$171172596",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.TaskExecutorResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getMaxActiveSplit","parameterTypes":[] }]
},
{
  "name":"io.trino.server.TaskExecutorResource$$FastClassByGuice$$125610108",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.TaskResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"acknowledgeAndGetNewDynamicFilterDomains","parameterTypes":["io.trino.execution.TaskId","java.lang.Long","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"acknowledgeResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId","long"] }, 
    {"name":"createOrUpdateTask","parameterTypes":["io.trino.execution.TaskId","io.trino.server.TaskUpdateRequest","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"deleteTask","parameterTypes":["io.trino.execution.TaskId","boolean","javax.ws.rs.core.UriInfo"] }, 
    {"name":"destroyTaskResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"failTask","parameterTypes":["io.trino.execution.TaskId","io.trino.server.FailTaskRequest","javax.ws.rs.core.UriInfo"] }, 
    {"name":"getAllTaskInfo","parameterTypes":["javax.ws.rs.core.UriInfo"] }, 
    {"name":"getReadFromOutputBufferTime","parameterTypes":[] }, 
    {"name":"getResults","parameterTypes":["io.trino.execution.TaskId","io.trino.execution.buffer.PipelinedOutputBuffers$OutputBufferId","long","io.airlift.units.DataSize","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"getResultsRequestTime","parameterTypes":[] }, 
    {"name":"getTaskInfo","parameterTypes":["io.trino.execution.TaskId","java.lang.Long","io.airlift.units.Duration","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"getTaskStatus","parameterTypes":["io.trino.execution.TaskId","java.lang.Long","io.airlift.units.Duration","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }
  ]
},
{
  "name":"io.trino.server.TaskResource$$FastClassByGuice$$123820672",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.TaskUpdateRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.SessionRepresentation","java.util.Map","java.util.Optional","java.util.List","io.trino.execution.buffer.OutputBuffers","java.util.Map","java.util.Optional"] }, 
    {"name":"getDynamicFilterDomains","parameterTypes":[] }, 
    {"name":"getExchangeEncryptionKey","parameterTypes":[] }, 
    {"name":"getExtraCredentials","parameterTypes":[] }, 
    {"name":"getFragment","parameterTypes":[] }, 
    {"name":"getOutputIds","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"getSplitAssignments","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.ThreadResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getThreadInfo","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.ThreadResource$$FastClassByGuice$$174738821",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ThrowableMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"io.trino.server.ThrowableMapper$$FastClassByGuice$$115591740",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.protocol.ExecutingStatementResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cancelQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","long"] }, 
    {"name":"getQueryResults","parameterTypes":["io.trino.spi.QueryId","java.lang.String","long","io.airlift.units.Duration","io.airlift.units.DataSize","javax.ws.rs.core.UriInfo","javax.ws.rs.container.AsyncResponse"] }, 
    {"name":"partialCancel","parameterTypes":["io.trino.spi.QueryId","int","java.lang.String","long"] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.protocol.ExecutingStatementResource$$FastClassByGuice$$65567778",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.protocol.PreparedStatementEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.protocol.PreparedStatementEncoder$$FastClassByGuice$$112151362",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.protocol.QueryInfoUrlFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.protocol.QueryInfoUrlFactory$$FastClassByGuice$$67754422",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.remotetask.HttpLocationFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.remotetask.HttpLocationFactory$$FastClassByGuice$$263373983",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.remotetask.RemoteTaskStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getInfoRoundTripMillis","parameterTypes":[] }, 
    {"name":"getRequestFailure","parameterTypes":[] }, 
    {"name":"getRequestSuccess","parameterTypes":[] }, 
    {"name":"getResponseSizeBytes","parameterTypes":[] }, 
    {"name":"getStatusRoundTripMillis","parameterTypes":[] }, 
    {"name":"getUpdateRoundTripMillis","parameterTypes":[] }, 
    {"name":"getUpdateWithDynamicFilterBytes","parameterTypes":[] }, 
    {"name":"getUpdateWithPlanBytes","parameterTypes":[] }, 
    {"name":"infoRoundTripMillis","parameterTypes":["long"] }, 
    {"name":"responseSize","parameterTypes":["long"] }, 
    {"name":"statusRoundTripMillis","parameterTypes":["long"] }, 
    {"name":"updateFailure","parameterTypes":[] }, 
    {"name":"updateRoundTripMillis","parameterTypes":["long"] }, 
    {"name":"updateSuccess","parameterTypes":[] }, 
    {"name":"updateWithDynamicFilterBytes","parameterTypes":["long"] }, 
    {"name":"updateWithPlanBytes","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.server.remotetask.RemoteTaskStats$$FastClassByGuice$$99803880",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.AuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.security.AuthenticationFilter$$FastClassByGuice$$47356421",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.Authenticator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.security.CertificateAuthenticatorManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.security.CertificateAuthenticatorManager$$FastClassByGuice$$51648418",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.InsecureAuthenticator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.security.InsecureAuthenticator$$FastClassByGuice$$52597927",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.InsecureAuthenticatorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getUserMappingFile","parameterTypes":[] }, 
    {"name":"getUserMappingPattern","parameterTypes":[] }, 
    {"name":"setUserMappingFile","parameterTypes":["java.io.File"] }, 
    {"name":"setUserMappingPattern","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.server.security.ResourceAccessType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.security.ResourceAccessType$$FastClassByGuice$$49403801",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.ResourceAccessTypeLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.security.ResourceSecurity$AccessType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.security.ResourceSecurityBinder$StaticResourceAccessTypeLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.security.ResourceSecurityBinder$StaticResourceAccessTypeLoader$$FastClassByGuice$$50405561",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.ResourceSecurityDynamicFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"configure","parameterTypes":["javax.ws.rs.container.ResourceInfo","javax.ws.rs.core.FeatureContext"] }]
},
{
  "name":"io.trino.server.security.ResourceSecurityDynamicFeature$$FastClassByGuice$$48456592",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.security.SecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAuthenticationTypes","parameterTypes":[] }, 
    {"name":"getFixedManagementUser","parameterTypes":[] }, 
    {"name":"isFixedManagementUserForHttps","parameterTypes":[] }, 
    {"name":"isInsecureAuthenticationOverHttpAllowed","parameterTypes":[] }, 
    {"name":"setAuthenticationTypes","parameterTypes":["java.lang.String"] }, 
    {"name":"setAuthenticationTypes","parameterTypes":["java.util.List"] }, 
    {"name":"setFixedManagementUser","parameterTypes":["java.lang.String"] }, 
    {"name":"setFixedManagementUserForHttps","parameterTypes":["boolean"] }, 
    {"name":"setInsecureAuthenticationOverHttpAllowed","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.server.security.ServerSecurityModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.security.ServerSecurityModule$$FastClassByGuice$$38407573",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.testing.TestingTrinoServer$TestShutdownAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.server.testing.TestingTrinoServer$TestShutdownAction$$FastClassByGuice$$311179944",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.ClusterResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getInfo","parameterTypes":[] }]
},
{
  "name":"io.trino.server.ui.ClusterResource$$FastClassByGuice$$61481134",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.ClusterStatsResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getClusterStats","parameterTypes":[] }]
},
{
  "name":"io.trino.server.ui.ClusterStatsResource$$FastClassByGuice$$62263494",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.FixedUiAuthenticatorModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ui.FixedUserWebUiAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.server.ui.FixedUserWebUiAuthenticationFilter$$FastClassByGuice$$190014627",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.FixedUserWebUiConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getUsername","parameterTypes":[] }, 
    {"name":"setUsername","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.server.ui.UiQueryResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getAllQueryInfo","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"getQueryInfo","parameterTypes":["io.trino.spi.QueryId","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"killQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"preemptQuery","parameterTypes":["io.trino.spi.QueryId","java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }
  ]
},
{
  "name":"io.trino.server.ui.UiQueryResource$$FastClassByGuice$$63522004",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.WebUiAuthenticationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAuthentication","parameterTypes":[] }, 
    {"name":"setAuthentication","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.server.ui.WebUiAuthenticationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ui.WebUiAuthenticationModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ui.WebUiAuthenticationModule$ConditionalWebUiAuthenticationModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ui.WebUiConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.server.ui.WebUiModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.server.ui.WebUiStaticResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAssetsFile","parameterTypes":["java.lang.String","javax.servlet.ServletContext"] }, 
    {"name":"getFile","parameterTypes":["java.lang.String","javax.servlet.ServletContext"] }, 
    {"name":"getRoot","parameterTypes":[] }, 
    {"name":"getUi","parameterTypes":[] }, 
    {"name":"getVendorFile","parameterTypes":["java.lang.String","javax.servlet.ServletContext"] }, 
    {"name":"postFile","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.server.ui.WebUiStaticResource$$FastClassByGuice$$60371151",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.server.ui.WorkerResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getStatus","parameterTypes":["java.lang.String"] }, 
    {"name":"getThreads","parameterTypes":["io.trino.execution.TaskId","java.lang.String","javax.servlet.http.HttpServletRequest","javax.ws.rs.core.HttpHeaders"] }, 
    {"name":"getThreads","parameterTypes":["java.lang.String"] }, 
    {"name":"getWorkerList","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.server.ui.WorkerResource$$FastClassByGuice$$70939354",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.spi.ErrorCode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.ErrorType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.HostAddress",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromString","parameterTypes":["java.lang.String"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.Mergeable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.NodeManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.Page",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.PageIndexerFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.PageSorter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.QueryId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.spi.SplitWeight",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.TrinoException",
  "methods":[{"name":"<init>","parameterTypes":["io.trino.spi.ErrorCodeSupplier","java.lang.String"] }]
},
{
  "name":"io.trino.spi.VersionEmbedder",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.block.AbstractRowBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.AbstractSingleRowBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.AbstractVariableWidthBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.Block",
  "methods":[{"name":"isNull","parameterTypes":["int"] }]
},
{
  "name":"io.trino.spi.block.BlockBuilder",
  "methods":[{"name":"appendNull","parameterTypes":[] }]
},
{
  "name":"io.trino.spi.block.BlockBuilderStatus",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.BlockEncodingSerde",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.block.LazyBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.LazyBlock$LazyData",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.LongArrayBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.LongArrayBlockBuilder",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.PageBuilderStatus",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.RowBlockBuilder",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.RunLengthEncodedBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.SingleMapBlock",
  "methods":[{"name":"seekKey","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","int"] }]
},
{
  "name":"io.trino.spi.block.SingleRowBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.SingleRowBlockWriter",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.VariableWidthBlock",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.block.VariableWidthBlockBuilder",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.connector.CatalogHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromId","parameterTypes":["java.lang.String"] }, 
    {"name":"getId","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.connector.CatalogHandle$CatalogVersion",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.connector.ColumnHandle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.Connector",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorMetadata",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorPageSinkProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorPageSourceProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorPartitioningHandle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorSplit",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorSplitManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorTableHandle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.ConnectorTransactionHandle",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.SchemaTableName",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.connector.SortOrder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.connector.SystemTable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.exchange.ExchangeId",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.function.Description",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.trino.spi.function.FunctionProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.memory.ClusterMemoryPoolManager",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addChangeListener","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"io.trino.spi.memory.MemoryAllocation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","long"] }, 
    {"name":"getAllocation","parameterTypes":[] }, 
    {"name":"getTag","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.memory.MemoryPoolInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["long","long","long","java.util.Map","java.util.Map","java.util.Map","java.util.Map","java.util.Map"] }, 
    {"name":"getFreeBytes","parameterTypes":[] }, 
    {"name":"getMaxBytes","parameterTypes":[] }, 
    {"name":"getQueryMemoryAllocations","parameterTypes":[] }, 
    {"name":"getQueryMemoryReservations","parameterTypes":[] }, 
    {"name":"getQueryMemoryRevocableReservations","parameterTypes":[] }, 
    {"name":"getReservedBytes","parameterTypes":[] }, 
    {"name":"getReservedRevocableBytes","parameterTypes":[] }, 
    {"name":"getTaskMemoryReservations","parameterTypes":[] }, 
    {"name":"getTaskMemoryRevocableReservations","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.metrics.Distribution",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.metrics.Metric",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.metrics.Metrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Map"] }, 
    {"name":"getMetrics","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.metrics.Timing",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.predicate.Domain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.predicate.NullableValue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.predicate.NullableValue$Serializable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.predicate.SortedRangeSet",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.predicate.TupleDomain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"fromColumnDomains","parameterTypes":["java.util.Optional"] }, 
    {"name":"getColumnDomains","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.predicate.TupleDomain$ColumnDomain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.predicate.ValueSet",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.procedure.Procedure",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.resourcegroups.ResourceGroupConfigurationManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.security.GroupProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.security.SelectedRole",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.security.SelectedRole$Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.session.ResourceEstimates",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Optional","java.util.Optional","java.util.Optional"] }, 
    {"name":"getCpuTime","parameterTypes":[] }, 
    {"name":"getExecutionTime","parameterTypes":[] }, 
    {"name":"getPeakMemoryBytes","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spi.type.AbstractIntType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.AbstractLongType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.AbstractType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.type.AbstractVariableWidthType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.type.ArrayType",
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"distinctFromOperator","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"equalOperator","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"hashOperator","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block"] }, 
    {"name":"indeterminateOperator","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.spi.type.BigintType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spi.type.BooleanType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"equalOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"lessThanOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"xxHash64Operator","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.spi.type.DecimalConversions",
  "queryAllPublicMethods":true
},
{
  "name":"io.trino.spi.type.DoubleType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonUnorderedFirstOperator","parameterTypes":["double","double"] }, 
    {"name":"comparisonUnorderedLastOperator","parameterTypes":["double","double"] }, 
    {"name":"distinctFromOperator","parameterTypes":["double","boolean","double","boolean"] }, 
    {"name":"equalOperator","parameterTypes":["double","double"] }, 
    {"name":"hashCodeOperator","parameterTypes":["double"] }, 
    {"name":"lessThanOperator","parameterTypes":["double","double"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["double","double"] }, 
    {"name":"xxHash64","parameterTypes":["double"] }
  ]
},
{
  "name":"io.trino.spi.type.FixedWidthType",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.type.Int128",
  "allDeclaredFields":true
},
{
  "name":"io.trino.spi.type.LongTimestampWithTimeZoneType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"lessThanOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"lessThanOperator","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone","io.trino.spi.type.LongTimestampWithTimeZone"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.type.LongTimestampWithTimeZone"] }
  ]
},
{
  "name":"io.trino.spi.type.MapType",
  "methods":[
    {"name":"distinctFromOperator","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"equalOperator","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"hashOperator","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.invoke.MethodHandle","io.trino.spi.block.Block"] }, 
    {"name":"indeterminate","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","boolean"] }
  ]
},
{
  "name":"io.trino.spi.type.RealType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonUnorderedFirstOperator","parameterTypes":["long","long"] }, 
    {"name":"comparisonUnorderedLastOperator","parameterTypes":["long","long"] }, 
    {"name":"distinctFromOperator","parameterTypes":["long","boolean","long","boolean"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.RowType",
  "methods":[
    {"name":"chainComparison","parameterTypes":["long","int","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"chainDistinctFrom","parameterTypes":["boolean","int","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"chainDistinctFromStart","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"chainEqual","parameterTypes":["java.lang.Boolean","int","java.lang.invoke.MethodHandle","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"chainHashCode","parameterTypes":["long","int","java.lang.invoke.MethodHandle","io.trino.spi.block.Block"] }, 
    {"name":"chainIndeterminate","parameterTypes":["boolean","int","java.lang.invoke.MethodHandle","io.trino.spi.block.Block"] }, 
    {"name":"megamorphicComparisonOperator","parameterTypes":["java.util.List","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"megamorphicDistinctFromOperator","parameterTypes":["java.util.List","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"megamorphicEqualOperator","parameterTypes":["java.util.List","io.trino.spi.block.Block","io.trino.spi.block.Block"] }, 
    {"name":"megamorphicHashCodeOperator","parameterTypes":["java.util.List","io.trino.spi.block.Block"] }, 
    {"name":"megamorphicIndeterminateOperator","parameterTypes":["java.util.List","io.trino.spi.block.Block"] }
  ]
},
{
  "name":"io.trino.spi.type.ShortDecimalType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.ShortTimestampWithTimeZoneType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.SmallintType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.TimeZoneKey",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getKey","parameterTypes":[] }, 
    {"name":"getTimeZoneKey","parameterTypes":["short"] }
  ]
},
{
  "name":"io.trino.spi.type.TinyintType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["long","long"] }, 
    {"name":"equalOperator","parameterTypes":["long","long"] }, 
    {"name":"hashCodeOperator","parameterTypes":["long"] }, 
    {"name":"lessThanOperator","parameterTypes":["long","long"] }, 
    {"name":"lessThanOrEqualOperator","parameterTypes":["long","long"] }, 
    {"name":"xxHash64Operator","parameterTypes":["long"] }
  ]
},
{
  "name":"io.trino.spi.type.Type",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDouble","parameterTypes":["io.trino.spi.block.Block","int"] }, 
    {"name":"getSlice","parameterTypes":["io.trino.spi.block.Block","int"] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"writeBoolean","parameterTypes":["io.trino.spi.block.BlockBuilder","boolean"] }, 
    {"name":"writeDouble","parameterTypes":["io.trino.spi.block.BlockBuilder","double"] }, 
    {"name":"writeLong","parameterTypes":["io.trino.spi.block.BlockBuilder","long"] }, 
    {"name":"writeObject","parameterTypes":["io.trino.spi.block.BlockBuilder","java.lang.Object"] }
  ]
},
{
  "name":"io.trino.spi.type.TypeId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getId","parameterTypes":[] }]
},
{
  "name":"io.trino.spi.type.TypeManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spi.type.TypeOperators",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"genericBlockPositionDistinctFrom","parameterTypes":["java.lang.invoke.MethodHandle","io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"isComparisonLessThan","parameterTypes":["long"] }, 
    {"name":"isComparisonLessThanOrEqual","parameterTypes":["long"] }, 
    {"name":"notEqual","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"orderComparisonResult","parameterTypes":["io.trino.spi.connector.SortOrder","long"] }, 
    {"name":"orderNulls","parameterTypes":["io.trino.spi.connector.SortOrder","boolean","boolean"] }
  ]
},
{
  "name":"io.trino.spi.type.UuidType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"equalOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.spi.type.VarbinaryType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"equalOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.spi.type.VarcharType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"equalOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.spi.type.VariableWidthType",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spiller.FileSingleStreamSpillerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"cleanupOldSpillFiles","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spiller.FileSingleStreamSpillerFactory$$FastClassByGuice$$308635427",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.spiller.GenericPartitioningSpillerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spiller.GenericPartitioningSpillerFactory$$FastClassByGuice$$310085079",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.spiller.GenericSpillerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spiller.GenericSpillerFactory$$FastClassByGuice$$308206525",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.spiller.LocalSpillManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.spiller.LocalSpillManager$$FastClassByGuice$$178136099",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.spiller.NodeSpillConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxSpillPerNode","parameterTypes":[] }, 
    {"name":"getQueryMaxSpillPerNode","parameterTypes":[] }, 
    {"name":"isSpillCompressionEnabled","parameterTypes":[] }, 
    {"name":"isSpillEncryptionEnabled","parameterTypes":[] }, 
    {"name":"setMaxSpillPerNode","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setQueryMaxSpillPerNode","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setSpillCompressionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setSpillEncryptionEnabled","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.spiller.PartitioningSpillerFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spiller.SingleStreamSpillerFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spiller.SpillerFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.spiller.SpillerStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"addToTotalSpilledBytes","parameterTypes":["long"] }, 
    {"name":"getTotalSpilledBytes","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.spiller.SpillerStats$$FastClassByGuice$$176688890",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.split.PageSinkManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.split.PageSinkManager$$FastClassByGuice$$148052759",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.split.PageSinkProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.split.PageSourceManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.split.PageSourceManager$$FastClassByGuice$$147716360",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.split.PageSourceProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.split.RemoteSplit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.exchange.ExchangeInput"] }, 
    {"name":"getExchangeInput","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.split.SplitManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.split.SplitManager$$FastClassByGuice$$163176646",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.DynamicFilters$Function",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"dynamicFilter","parameterTypes":["double","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["long","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["java.lang.Object","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["boolean","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }
  ]
},
{
  "name":"io.trino.sql.DynamicFilters$NullableFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"dynamicFilter","parameterTypes":["double","boolean","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["long","boolean","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["java.lang.Object","boolean","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }, 
    {"name":"dynamicFilter","parameterTypes":["boolean","boolean","io.airlift.slice.Slice","io.airlift.slice.Slice","boolean"] }
  ]
},
{
  "name":"io.trino.sql.PlannerContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.PlannerContext$$FastClassByGuice$$156972005",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.SqlEnvironmentConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getDefaultCatalog","parameterTypes":[] }, 
    {"name":"getDefaultSchema","parameterTypes":[] }, 
    {"name":"getForcedSessionTimeZone","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"setDefaultCatalog","parameterTypes":["java.lang.String"] }, 
    {"name":"setDefaultSchema","parameterTypes":["java.lang.String"] }, 
    {"name":"setForcedSessionTimeZone","parameterTypes":["java.lang.String"] }, 
    {"name":"setPath","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.sql.SqlPath",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Optional"] }, 
    {"name":"getRawPath","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.analyzer.AnalyzerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.analyzer.AnalyzerFactory$$FastClassByGuice$$92485161",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.analyzer.QueryExplainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.analyzer.QueryExplainerFactory$$FastClassByGuice$$98046481",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.analyzer.StatementAnalyzerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.analyzer.StatementAnalyzerFactory$$FastClassByGuice$$116784504",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.gen.Bootstrap",
  "methods":[{"name":"bootstrap","parameterTypes":["java.lang.invoke.MethodHandles$Lookup","java.lang.String","java.lang.invoke.MethodType","long"] }]
},
{
  "name":"io.trino.sql.gen.ExpressionCompiler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"compileCursorProcessor","parameterTypes":["java.util.Optional","java.util.List","java.lang.Object"] }, 
    {"name":"compilePageProcessor","parameterTypes":["java.util.Optional","java.util.List"] }, 
    {"name":"compilePageProcessor","parameterTypes":["java.util.Optional","java.util.List","int"] }, 
    {"name":"compilePageProcessor","parameterTypes":["java.util.Optional","java.util.List","java.util.Optional"] }, 
    {"name":"getCursorProcessorCache","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.gen.ExpressionCompiler$$FastClassByGuice$$136804965",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.gen.JoinCompiler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"compileLookupSourceFactory","parameterTypes":["java.util.List","java.util.List","java.util.Optional","java.util.Optional"] }, 
    {"name":"compilePagesHashStrategyFactory","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"compilePagesHashStrategyFactory","parameterTypes":["java.util.List","java.util.List","java.util.Optional"] }, 
    {"name":"getHashStrategiesStats","parameterTypes":[] }, 
    {"name":"getLookupSourceStats","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.gen.JoinCompiler$$FastClassByGuice$$141858730",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.gen.JoinFilterFunctionCompiler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"compileJoinFilterFunction","parameterTypes":["io.trino.sql.relational.RowExpression","int"] }, 
    {"name":"getJoinFilterFunctionFactoryStats","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.gen.JoinFilterFunctionCompiler$$FastClassByGuice$$140954414",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.gen.OrderingCompiler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"compilePageWithPositionComparator","parameterTypes":["java.util.List","java.util.List","java.util.List"] }, 
    {"name":"compilePagesIndexOrdering","parameterTypes":["java.util.List","java.util.List","java.util.List"] }, 
    {"name":"getPageWithPositionsComparatorsStats","parameterTypes":[] }, 
    {"name":"getPagesIndexOrderingsStats","parameterTypes":[] }, 
    {"name":"internalCompilePagesIndexOrdering","parameterTypes":["java.util.List","java.util.List","java.util.List"] }
  ]
},
{
  "name":"io.trino.sql.gen.OrderingCompiler$$FastClassByGuice$$142758777",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.gen.PageFunctionCompiler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"compileFilter","parameterTypes":["io.trino.sql.relational.RowExpression","java.util.Optional"] }, 
    {"name":"compileProjection","parameterTypes":["io.trino.sql.relational.RowExpression","java.util.Optional"] }, 
    {"name":"getFilterCache","parameterTypes":[] }, 
    {"name":"getProjectionCache","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.gen.PageFunctionCompiler$$FastClassByGuice$$137687611",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.parser.SqlParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.sql.parser.SqlParser$$FastClassByGuice$$115335836",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.CompilerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExpressionCacheSize","parameterTypes":[] }, 
    {"name":"setExpressionCacheSize","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.sql.planner.LocalExecutionPlanner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.LocalExecutionPlanner$$FastClassByGuice$$135596853",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.NodePartitioningManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.NodePartitioningManager$$FastClassByGuice$$164398723",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.OptimizerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAdaptivePartialAggregationMinRows","parameterTypes":[] }, 
    {"name":"getAdaptivePartialAggregationUniqueRowsRatioThreshold","parameterTypes":[] }, 
    {"name":"getCpuCostWeight","parameterTypes":[] }, 
    {"name":"getFilterConjunctionIndependenceFactor","parameterTypes":[] }, 
    {"name":"getIterativeOptimizerTimeout","parameterTypes":[] }, 
    {"name":"getJoinDistributionType","parameterTypes":[] }, 
    {"name":"getJoinMaxBroadcastTableSize","parameterTypes":[] }, 
    {"name":"getJoinMultiClauseIndependenceFactor","parameterTypes":[] }, 
    {"name":"getJoinPartitionedBuildMinRowCount","parameterTypes":[] }, 
    {"name":"getJoinReorderingStrategy","parameterTypes":[] }, 
    {"name":"getMaxReorderedJoins","parameterTypes":[] }, 
    {"name":"getMemoryCostWeight","parameterTypes":[] }, 
    {"name":"getNetworkCostWeight","parameterTypes":[] }, 
    {"name":"getPreferredWritePartitioningMinNumberOfPartitions","parameterTypes":[] }, 
    {"name":"getTableScanNodePartitioningMinBucketToTaskRatio","parameterTypes":[] }, 
    {"name":"isAdaptivePartialAggregationEnabled","parameterTypes":[] }, 
    {"name":"isCollectPlanStatisticsForAllQueries","parameterTypes":[] }, 
    {"name":"isColocatedJoinsEnabled","parameterTypes":[] }, 
    {"name":"isComplexExpressionPushdownEnabled","parameterTypes":[] }, 
    {"name":"isDefaultFilterFactorEnabled","parameterTypes":[] }, 
    {"name":"isDictionaryAggregation","parameterTypes":[] }, 
    {"name":"isDistributedIndexJoinsEnabled","parameterTypes":[] }, 
    {"name":"isDistributedSortEnabled","parameterTypes":[] }, 
    {"name":"isEnableForcedExchangeBelowGroupId","parameterTypes":[] }, 
    {"name":"isEnableIntermediateAggregations","parameterTypes":[] }, 
    {"name":"isEnableStatsCalculator","parameterTypes":[] }, 
    {"name":"isForceSingleNodeOutput","parameterTypes":[] }, 
    {"name":"isIgnoreDownstreamPreferences","parameterTypes":[] }, 
    {"name":"isIgnoreStatsCalculatorFailures","parameterTypes":[] }, 
    {"name":"isMergeProjectWithValues","parameterTypes":[] }, 
    {"name":"isNonEstimatablePredicateApproximationEnabled","parameterTypes":[] }, 
    {"name":"isOptimizeDuplicateInsensitiveJoins","parameterTypes":[] }, 
    {"name":"isOptimizeHashGeneration","parameterTypes":[] }, 
    {"name":"isOptimizeMetadataQueries","parameterTypes":[] }, 
    {"name":"isOptimizeMixedDistinctAggregations","parameterTypes":[] }, 
    {"name":"isOptimizeTopNRanking","parameterTypes":[] }, 
    {"name":"isPreAggregateCaseAggregationsEnabled","parameterTypes":[] }, 
    {"name":"isPredicatePushdownUseTableProperties","parameterTypes":[] }, 
    {"name":"isPreferPartialAggregation","parameterTypes":[] }, 
    {"name":"isPushAggregationThroughOuterJoin","parameterTypes":[] }, 
    {"name":"isPushPartialAggregationThoughJoin","parameterTypes":[] }, 
    {"name":"isPushTableWriteThroughUnion","parameterTypes":[] }, 
    {"name":"isRewriteFilteringSemiJoinToInnerJoin","parameterTypes":[] }, 
    {"name":"isSkipRedundantSort","parameterTypes":[] }, 
    {"name":"isSpatialJoinsEnabled","parameterTypes":[] }, 
    {"name":"isStatisticsPrecalculationForPushdownEnabled","parameterTypes":[] }, 
    {"name":"isUseExactPartitioning","parameterTypes":[] }, 
    {"name":"isUseLegacyWindowFilterPushdown","parameterTypes":[] }, 
    {"name":"isUseMarkDistinct","parameterTypes":[] }, 
    {"name":"isUsePreferredWritePartitioning","parameterTypes":[] }, 
    {"name":"isUseTableScanNodePartitioning","parameterTypes":[] }, 
    {"name":"setAdaptivePartialAggregationEnabled","parameterTypes":["boolean"] }, 
    {"name":"setAdaptivePartialAggregationMinRows","parameterTypes":["long"] }, 
    {"name":"setAdaptivePartialAggregationUniqueRowsRatioThreshold","parameterTypes":["double"] }, 
    {"name":"setCollectPlanStatisticsForAllQueries","parameterTypes":["boolean"] }, 
    {"name":"setColocatedJoinsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setComplexExpressionPushdownEnabled","parameterTypes":["boolean"] }, 
    {"name":"setCpuCostWeight","parameterTypes":["double"] }, 
    {"name":"setDefaultFilterFactorEnabled","parameterTypes":["boolean"] }, 
    {"name":"setDictionaryAggregation","parameterTypes":["boolean"] }, 
    {"name":"setDistributedIndexJoinsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setDistributedSortEnabled","parameterTypes":["boolean"] }, 
    {"name":"setEnableForcedExchangeBelowGroupId","parameterTypes":["boolean"] }, 
    {"name":"setEnableIntermediateAggregations","parameterTypes":["boolean"] }, 
    {"name":"setEnableStatsCalculator","parameterTypes":["boolean"] }, 
    {"name":"setFilterConjunctionIndependenceFactor","parameterTypes":["double"] }, 
    {"name":"setForceSingleNodeOutput","parameterTypes":["boolean"] }, 
    {"name":"setIgnoreDownstreamPreferences","parameterTypes":["boolean"] }, 
    {"name":"setIgnoreStatsCalculatorFailures","parameterTypes":["boolean"] }, 
    {"name":"setIterativeOptimizerTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setJoinDistributionType","parameterTypes":["io.trino.sql.planner.OptimizerConfig$JoinDistributionType"] }, 
    {"name":"setJoinMaxBroadcastTableSize","parameterTypes":["io.airlift.units.DataSize"] }, 
    {"name":"setJoinMultiClauseIndependenceFactor","parameterTypes":["double"] }, 
    {"name":"setJoinPartitionedBuildMinRowCount","parameterTypes":["long"] }, 
    {"name":"setJoinReorderingStrategy","parameterTypes":["io.trino.sql.planner.OptimizerConfig$JoinReorderingStrategy"] }, 
    {"name":"setMaxReorderedJoins","parameterTypes":["int"] }, 
    {"name":"setMemoryCostWeight","parameterTypes":["double"] }, 
    {"name":"setMergeProjectWithValues","parameterTypes":["boolean"] }, 
    {"name":"setNetworkCostWeight","parameterTypes":["double"] }, 
    {"name":"setNonEstimatablePredicateApproximationEnabled","parameterTypes":["boolean"] }, 
    {"name":"setOptimizeDuplicateInsensitiveJoins","parameterTypes":["boolean"] }, 
    {"name":"setOptimizeHashGeneration","parameterTypes":["boolean"] }, 
    {"name":"setOptimizeMetadataQueries","parameterTypes":["boolean"] }, 
    {"name":"setOptimizeMixedDistinctAggregations","parameterTypes":["boolean"] }, 
    {"name":"setOptimizeTopNRanking","parameterTypes":["boolean"] }, 
    {"name":"setPreAggregateCaseAggregationsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setPredicatePushdownUseTableProperties","parameterTypes":["boolean"] }, 
    {"name":"setPreferPartialAggregation","parameterTypes":["boolean"] }, 
    {"name":"setPreferredWritePartitioningMinNumberOfPartitions","parameterTypes":["int"] }, 
    {"name":"setPushAggregationThroughOuterJoin","parameterTypes":["boolean"] }, 
    {"name":"setPushPartialAggregationThoughJoin","parameterTypes":["boolean"] }, 
    {"name":"setPushTableWriteThroughUnion","parameterTypes":["boolean"] }, 
    {"name":"setRewriteFilteringSemiJoinToInnerJoin","parameterTypes":["boolean"] }, 
    {"name":"setSkipRedundantSort","parameterTypes":["boolean"] }, 
    {"name":"setSpatialJoinsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setStatisticsPrecalculationForPushdownEnabled","parameterTypes":["boolean"] }, 
    {"name":"setTableScanNodePartitioningMinBucketToTaskRatio","parameterTypes":["double"] }, 
    {"name":"setUseExactPartitioning","parameterTypes":["boolean"] }, 
    {"name":"setUseLegacyWindowFilterPushdown","parameterTypes":["boolean"] }, 
    {"name":"setUseMarkDistinct","parameterTypes":["boolean"] }, 
    {"name":"setUsePreferredWritePartitioning","parameterTypes":["boolean"] }, 
    {"name":"setUseTableScanNodePartitioning","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.sql.planner.OptimizerStatsMBeanExporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"export","parameterTypes":[] }, 
    {"name":"unexport","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.OptimizerStatsMBeanExporter$$FastClassByGuice$$97171371",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.OrderingScheme",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.List","java.util.Map"] }, 
    {"name":"getOrderBy","parameterTypes":[] }, 
    {"name":"getOrderings","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.Partitioning",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getArguments","parameterTypes":[] }, 
    {"name":"getHandle","parameterTypes":[] }, 
    {"name":"jsonCreate","parameterTypes":["io.trino.sql.planner.PartitioningHandle","java.util.List"] }
  ]
},
{
  "name":"io.trino.sql.planner.Partitioning$ArgumentBinding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.PartitioningHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Optional","java.util.Optional","io.trino.spi.connector.ConnectorPartitioningHandle","boolean"] }, 
    {"name":"getCatalogHandle","parameterTypes":[] }, 
    {"name":"getConnectorHandle","parameterTypes":[] }, 
    {"name":"getTransactionHandle","parameterTypes":[] }, 
    {"name":"isScaleWriters","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.PartitioningScheme",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.Partitioning","java.util.List","java.util.Optional","boolean","java.util.Optional"] }, 
    {"name":"getBucketToPartition","parameterTypes":[] }, 
    {"name":"getHashColumn","parameterTypes":[] }, 
    {"name":"getOutputLayout","parameterTypes":[] }, 
    {"name":"getPartitioning","parameterTypes":[] }, 
    {"name":"isReplicateNullsAndAny","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.PlanFragment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanFragmentId","io.trino.sql.planner.plan.PlanNode","java.util.Map","io.trino.sql.planner.PartitioningHandle","java.util.List","io.trino.sql.planner.PartitioningScheme","io.trino.cost.StatsAndCosts","java.util.List","java.util.Optional"] }, 
    {"name":"getActiveCatalogs","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getJsonRepresentation","parameterTypes":[] }, 
    {"name":"getPartitionedSources","parameterTypes":[] }, 
    {"name":"getPartitioning","parameterTypes":[] }, 
    {"name":"getPartitioningScheme","parameterTypes":[] }, 
    {"name":"getRoot","parameterTypes":[] }, 
    {"name":"getStatsAndCosts","parameterTypes":[] }, 
    {"name":"getSymbols","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.PlanFragmenter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.PlanFragmenter$$FastClassByGuice$$94655970",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.PlanOptimizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.PlanOptimizers$$FastClassByGuice$$206997823",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.PlanOptimizersFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.RuleStatsRecorder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.sql.planner.RuleStatsRecorder$$FastClassByGuice$$96466413",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.SplitSourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.SplitSourceFactory$$FastClassByGuice$$102204804",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.Symbol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.SystemPartitioningHandle$SystemPartitioning","io.trino.sql.planner.SystemPartitioningHandle$SystemPartitionFunction"] }, 
    {"name":"getFunction","parameterTypes":[] }, 
    {"name":"getPartitioning","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle$SystemPartitionFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle$SystemPartitionFunction$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle$SystemPartitionFunction$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle$SystemPartitionFunction$5",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.SystemPartitioningHandle$SystemPartitioning",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.TypeAnalyzer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.TypeAnalyzer$$FastClassByGuice$$160092378",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.planner.iterative.RuleStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getFailures","parameterTypes":[] }, 
    {"name":"getHits","parameterTypes":[] }, 
    {"name":"getInvocations","parameterTypes":[] }, 
    {"name":"getTime","parameterTypes":[] }, 
    {"name":"record","parameterTypes":["long","boolean"] }, 
    {"name":"recordFailure","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.optimizations.OptimizerStats",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getFailures","parameterTypes":[] }, 
    {"name":"getTime","parameterTypes":[] }, 
    {"name":"record","parameterTypes":["long"] }, 
    {"name":"recordFailure","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.Assignments",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.util.Map"] }, 
    {"name":"getMap","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.DynamicFilterId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.planner.plan.ExchangeNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.sql.planner.plan.ExchangeNode$Type","io.trino.sql.planner.plan.ExchangeNode$Scope","io.trino.sql.planner.PartitioningScheme","java.util.List","java.util.List","java.util.Optional"] }, 
    {"name":"getInputs","parameterTypes":[] }, 
    {"name":"getOrderingScheme","parameterTypes":[] }, 
    {"name":"getPartitioningScheme","parameterTypes":[] }, 
    {"name":"getScope","parameterTypes":[] }, 
    {"name":"getSources","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.ExchangeNode$Scope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.plan.ExchangeNode$Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.sql.planner.plan.FilterNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.sql.planner.plan.PlanNode","io.trino.sql.tree.Expression"] }, 
    {"name":"getPredicate","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.OutputNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.sql.planner.plan.PlanNode","java.util.List","java.util.List"] }, 
    {"name":"getColumnNames","parameterTypes":[] }, 
    {"name":"getOutputSymbols","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.PlanFragmentId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.PlanNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getId","parameterTypes":[] }]
},
{
  "name":"io.trino.sql.planner.plan.PlanNodeId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.ProjectNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.sql.planner.plan.PlanNode","io.trino.sql.planner.plan.Assignments"] }, 
    {"name":"getAssignments","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.RemoteSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","java.util.List","java.util.List","java.util.Optional","io.trino.sql.planner.plan.ExchangeNode$Type","io.trino.operator.RetryPolicy"] }, 
    {"name":"getExchangeType","parameterTypes":[] }, 
    {"name":"getOrderingScheme","parameterTypes":[] }, 
    {"name":"getOutputSymbols","parameterTypes":[] }, 
    {"name":"getRetryPolicy","parameterTypes":[] }, 
    {"name":"getSourceFragmentIds","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.SortNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.sql.planner.plan.PlanNode","io.trino.sql.planner.OrderingScheme","boolean"] }, 
    {"name":"getOrderingScheme","parameterTypes":[] }, 
    {"name":"getSource","parameterTypes":[] }, 
    {"name":"isPartial","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.TableScanNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","io.trino.metadata.TableHandle","java.util.List","java.util.Map","boolean","java.util.Optional"] }, 
    {"name":"getAssignments","parameterTypes":[] }, 
    {"name":"getOutputSymbols","parameterTypes":[] }, 
    {"name":"getTable","parameterTypes":[] }, 
    {"name":"getUseConnectorNodePartitioning","parameterTypes":[] }, 
    {"name":"isUpdateTarget","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.plan.ValuesNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["io.trino.sql.planner.plan.PlanNodeId","java.util.List","int","java.util.Optional"] }, 
    {"name":"getOutputSymbols","parameterTypes":[] }, 
    {"name":"getRowCount","parameterTypes":[] }, 
    {"name":"getRows","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.planprinter.JsonRenderer$JsonRenderedNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getChildren","parameterTypes":[] }, 
    {"name":"getDescriptor","parameterTypes":[] }, 
    {"name":"getDetails","parameterTypes":[] }, 
    {"name":"getEstimates","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOutputs","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.planner.planprinter.NodeRepresentation$TypedSymbol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getSymbol","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.sql.rewrite.DescribeInputRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.DescribeInputRewrite$$FastClassByGuice$$201606967",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.DescribeOutputRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.DescribeOutputRewrite$$FastClassByGuice$$203085210",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.ExplainRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.ExplainRewrite$$FastClassByGuice$$205798921",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.ShowQueriesRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.ShowQueriesRewrite$$FastClassByGuice$$203754960",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.ShowStatsRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.ShowStatsRewrite$$FastClassByGuice$$205398024",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.StatementRewrite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.sql.rewrite.StatementRewrite$$FastClassByGuice$$93602997",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.sql.rewrite.StatementRewrite$Rewrite",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.testing.ProcedureTester",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.testing.ProcedureTester$$FastClassByGuice$$186697012",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.testing.TestingAccessControlManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.testing.TestingAccessControlManager$$FastClassByGuice$$182247089",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.testing.TestingEventListenerManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.testing.TestingEventListenerManager$$FastClassByGuice$$184537726",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.testing.TestingGroupProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.testing.TestingGroupProvider$$FastClassByGuice$$182654646",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.testing.TestingWarningCollectorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAddWarnings","parameterTypes":[] }, 
    {"name":"getPreloadedWarnings","parameterTypes":[] }, 
    {"name":"setAddWarnings","parameterTypes":["boolean"] }, 
    {"name":"setPreloadedWarnings","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.testing.TestingWarningCollectorModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.testing.TestingWarningCollectorModule$$FastClassByGuice$$45840343",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.transaction.ForTransactionManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.transaction.InMemoryTransactionManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.transaction.InMemoryTransactionManagerModule",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.transaction.InMemoryTransactionManagerModule$$FastClassByGuice$$40273286",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.transaction.InMemoryTransactionManagerModule$ExecutorCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.trino.transaction.InMemoryTransactionManagerModule$ExecutorCleanup$$FastClassByGuice$$58933637",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.transaction.InternalConnector",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.transaction.TransactionId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.trino.transaction.TransactionManager",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.transaction.TransactionManagerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getIdleCheckInterval","parameterTypes":[] }, 
    {"name":"getIdleTimeout","parameterTypes":[] }, 
    {"name":"getMaxFinishingConcurrency","parameterTypes":[] }, 
    {"name":"setIdleCheckInterval","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setIdleTimeout","parameterTypes":["io.airlift.units.Duration"] }, 
    {"name":"setMaxFinishingConcurrency","parameterTypes":["int"] }
  ]
},
{
  "name":"io.trino.transaction.TransactionManagerModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.trino.type.BigintOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"castToBoolean","parameterTypes":["long"] }, 
    {"name":"castToDouble","parameterTypes":["long"] }, 
    {"name":"castToInteger","parameterTypes":["long"] }, 
    {"name":"castToReal","parameterTypes":["long"] }, 
    {"name":"castToSmallint","parameterTypes":["long"] }, 
    {"name":"castToTinyint","parameterTypes":["long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"divide","parameterTypes":["long","long"] }, 
    {"name":"modulus","parameterTypes":["long","long"] }, 
    {"name":"multiply","parameterTypes":["long","long"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToInteger","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToSmallint","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToTinyint","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.BlockTypeOperators",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.type.BlockTypeOperators$$FastClassByGuice$$152349827",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.BooleanOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToBigint","parameterTypes":["boolean"] }, 
    {"name":"castToDouble","parameterTypes":["boolean"] }, 
    {"name":"castToInteger","parameterTypes":["boolean"] }, 
    {"name":"castToReal","parameterTypes":["boolean"] }, 
    {"name":"castToSmallint","parameterTypes":["boolean"] }, 
    {"name":"castToTinyint","parameterTypes":["boolean"] }, 
    {"name":"castToVarchar","parameterTypes":["boolean"] }, 
    {"name":"not","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.type.DateOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.DateTimeOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"dateMinusIntervalDayToSecond","parameterTypes":["long","long"] }, 
    {"name":"dateMinusIntervalYearToMonth","parameterTypes":["long","long"] }, 
    {"name":"datePlusIntervalDayToSecond","parameterTypes":["long","long"] }, 
    {"name":"datePlusIntervalYearToMonth","parameterTypes":["long","long"] }, 
    {"name":"intervalDayToSecondPlusDate","parameterTypes":["long","long"] }, 
    {"name":"intervalYearToMonthPlusDate","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.DecimalCasts",
  "queryAllPublicMethods":true
},
{
  "name":"io.trino.type.DecimalOperators",
  "queryAllPublicMethods":true
},
{
  "name":"io.trino.type.DecimalOperators$Negation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"negate","parameterTypes":["io.trino.spi.type.Int128"] }
  ]
},
{
  "name":"io.trino.type.DecimalSaturatedFloorCasts",
  "queryAllPublicMethods":true
},
{
  "name":"io.trino.type.DoubleOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["double","double"] }, 
    {"name":"castToBoolean","parameterTypes":["double"] }, 
    {"name":"castToInteger","parameterTypes":["double"] }, 
    {"name":"castToLong","parameterTypes":["double"] }, 
    {"name":"castToReal","parameterTypes":["double"] }, 
    {"name":"castToSmallint","parameterTypes":["double"] }, 
    {"name":"castToTinyint","parameterTypes":["double"] }, 
    {"name":"castToVarchar","parameterTypes":["long","double"] }, 
    {"name":"divide","parameterTypes":["double","double"] }, 
    {"name":"modulus","parameterTypes":["double","double"] }, 
    {"name":"multiply","parameterTypes":["double","double"] }, 
    {"name":"negate","parameterTypes":["double"] }, 
    {"name":"saturatedFloorCastToFloat","parameterTypes":["double"] }, 
    {"name":"saturatedFloorCastToInteger","parameterTypes":["double"] }, 
    {"name":"saturatedFloorCastToSmallint","parameterTypes":["double"] }, 
    {"name":"saturatedFloorCastToTinyint","parameterTypes":["double"] }, 
    {"name":"subtract","parameterTypes":["double","double"] }
  ]
},
{
  "name":"io.trino.type.HyperLogLogOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromP4Hll","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToP4Hll","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.IntegerOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"castToBigint","parameterTypes":["long"] }, 
    {"name":"castToBoolean","parameterTypes":["long"] }, 
    {"name":"castToDouble","parameterTypes":["long"] }, 
    {"name":"castToReal","parameterTypes":["long"] }, 
    {"name":"castToSmallint","parameterTypes":["long"] }, 
    {"name":"castToTinyint","parameterTypes":["long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"divide","parameterTypes":["long","long"] }, 
    {"name":"modulus","parameterTypes":["long","long"] }, 
    {"name":"multiply","parameterTypes":["long","long"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToSmallint","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToTinyint","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.InternalTypeManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.type.InternalTypeManager$$FastClassByGuice$$269038701",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.IntervalDayTimeOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"bigintMultiply","parameterTypes":["long","long"] }, 
    {"name":"castToVarchar","parameterTypes":["long"] }, 
    {"name":"divideByDouble","parameterTypes":["long","double"] }, 
    {"name":"doubleMultiply","parameterTypes":["double","long"] }, 
    {"name":"multiplyByBigint","parameterTypes":["long","long"] }, 
    {"name":"multiplyByDouble","parameterTypes":["long","double"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.IntervalYearMonthOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"bigintMultiply","parameterTypes":["long","long"] }, 
    {"name":"castToVarchar","parameterTypes":["long"] }, 
    {"name":"divideByDouble","parameterTypes":["long","double"] }, 
    {"name":"doubleMultiply","parameterTypes":["double","long"] }, 
    {"name":"multiplyByBigint","parameterTypes":["long","long"] }, 
    {"name":"multiplyByDouble","parameterTypes":["long","double"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.IpAddressOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromIpAddressToVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromIpAddressToVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarbinaryToIpAddress","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarcharToIpAddress","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.IpAddressType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"comparisonOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"equalOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.type.JsonType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"equalOperator","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"equalOperator","parameterTypes":["io.trino.spi.block.Block","int","io.trino.spi.block.Block","int"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"xxHash64Operator","parameterTypes":["io.trino.spi.block.Block","int"] }
  ]
},
{
  "name":"io.trino.type.LikeFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"likeChar","parameterTypes":["java.lang.Long","io.airlift.slice.Slice","io.trino.likematcher.LikeMatcher"] }, 
    {"name":"likePattern","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"likePattern","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"likeVarchar","parameterTypes":["io.airlift.slice.Slice","io.trino.likematcher.LikeMatcher"] }
  ]
},
{
  "name":"io.trino.type.QuantileDigestOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromVarbinaryBigint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarbinaryDouble","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarbinaryReal","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinaryBigint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinaryDouble","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinaryReal","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.RealOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"castToBoolean","parameterTypes":["long"] }, 
    {"name":"castToDouble","parameterTypes":["long"] }, 
    {"name":"castToInteger","parameterTypes":["long"] }, 
    {"name":"castToLong","parameterTypes":["long"] }, 
    {"name":"castToSmallint","parameterTypes":["long"] }, 
    {"name":"castToTinyint","parameterTypes":["long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"divide","parameterTypes":["long","long"] }, 
    {"name":"modulus","parameterTypes":["long","long"] }, 
    {"name":"multiply","parameterTypes":["long","long"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToSmallint","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToTinyint","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.SmallintOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"castToBigint","parameterTypes":["long"] }, 
    {"name":"castToBoolean","parameterTypes":["long"] }, 
    {"name":"castToDouble","parameterTypes":["long"] }, 
    {"name":"castToInteger","parameterTypes":["long"] }, 
    {"name":"castToReal","parameterTypes":["long"] }, 
    {"name":"castToTinyint","parameterTypes":["long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"divide","parameterTypes":["long","long"] }, 
    {"name":"modulus","parameterTypes":["long","long"] }, 
    {"name":"multiply","parameterTypes":["long","long"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"saturatedFloorCastToTinyint","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.TDigestOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinary","parameterTypes":["io.airlift.stats.TDigest"] }
  ]
},
{
  "name":"io.trino.type.TinyintOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long","long"] }, 
    {"name":"castToBigint","parameterTypes":["long"] }, 
    {"name":"castToBoolean","parameterTypes":["long"] }, 
    {"name":"castToDouble","parameterTypes":["long"] }, 
    {"name":"castToInteger","parameterTypes":["long"] }, 
    {"name":"castToReal","parameterTypes":["long"] }, 
    {"name":"castToSmallint","parameterTypes":["long"] }, 
    {"name":"castToVarchar","parameterTypes":["long","long"] }, 
    {"name":"divide","parameterTypes":["long","long"] }, 
    {"name":"modulus","parameterTypes":["long","long"] }, 
    {"name":"multiply","parameterTypes":["long","long"] }, 
    {"name":"negate","parameterTypes":["long"] }, 
    {"name":"subtract","parameterTypes":["long","long"] }
  ]
},
{
  "name":"io.trino.type.TypeDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.type.TypeDeserializer$$FastClassByGuice$$265825178",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.TypeOperatorsCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"apply","parameterTypes":["java.lang.Object","java.util.function.Supplier"] }, 
    {"name":"cacheReset","parameterTypes":[] }, 
    {"name":"cacheSize","parameterTypes":[] }, 
    {"name":"getCacheHitRate","parameterTypes":[] }, 
    {"name":"getCacheMissRate","parameterTypes":[] }, 
    {"name":"getCacheRequestCount","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.type.TypeOperatorsCache$$FastClassByGuice$$152015803",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.TypeSignatureDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.type.TypeSignatureDeserializer$$FastClassByGuice$$266899598",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.TypeSignatureKeyDeserializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.type.TypeSignatureKeyDeserializer$$FastClassByGuice$$267593751",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.type.UnknownType",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"comparisonOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"equalOperator","parameterTypes":["boolean","boolean"] }, 
    {"name":"xxHash64Operator","parameterTypes":["boolean"] }
  ]
},
{
  "name":"io.trino.type.UuidOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromUuidToVarbinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromUuidToVarchar","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarbinaryToUuid","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castFromVarcharToUuid","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"uuid","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.type.VarcharOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castToBigint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBoolean","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToDouble","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToFloat","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToInteger","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToSmallint","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToTinyint","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.setdigest.BuildSetDigestAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.trino.type.setdigest.SetDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.type.setdigest.SetDigestState","long"] }, 
    {"name":"input","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.airlift.slice.Slice"] }, 
    {"name":"output","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.type.setdigest.MergeSetDigestAggregation",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.trino.type.setdigest.SetDigestState"] }, 
    {"name":"input","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.airlift.slice.Slice"] }, 
    {"name":"output","parameterTypes":["io.trino.type.setdigest.SetDigestState","io.trino.spi.block.BlockBuilder"] }
  ]
},
{
  "name":"io.trino.type.setdigest.SetDigestFunctions",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"cardinality","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"hashCounts","parameterTypes":["io.trino.spi.type.Type","io.airlift.slice.Slice"] }, 
    {"name":"intersectionCardinality","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }, 
    {"name":"jaccardIndex","parameterTypes":["io.airlift.slice.Slice","io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.setdigest.SetDigestOperators",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"castFromBinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToBinary","parameterTypes":["io.airlift.slice.Slice"] }, 
    {"name":"castToHyperLogLog","parameterTypes":["io.airlift.slice.Slice"] }
  ]
},
{
  "name":"io.trino.type.setdigest.SetDigestStateFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"io.trino.type.setdigest.SetDigestStateSerializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.util.FinalizerService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.util.FinalizerService$$FastClassByGuice$$175145001",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"io.trino.util.PowerOfTwo",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"io.trino.util.PowerOfTwoValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.trino.version.EmbedVersion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.trino.version.EmbedVersion$$FastClassByGuice$$259276096",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"it.unimi.dsi.fastutil.longs.AbstractLong2IntFunction",
  "allDeclaredFields":true
},
{
  "name":"it.unimi.dsi.fastutil.longs.AbstractLong2IntMap",
  "allDeclaredFields":true
},
{
  "name":"it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap",
  "allDeclaredFields":true
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"java.io.InputStream",
  "allDeclaredFields":true
},
{
  "name":"java.io.OutputStream",
  "allDeclaredFields":true
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"java.lang.Boolean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"logicalOr","parameterTypes":["boolean","boolean"] }, 
    {"name":"logicalXor","parameterTypes":["boolean","boolean"] }, 
    {"name":"parseBoolean","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Byte",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseByte","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Character",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "methods":[
    {"name":"getModule","parameterTypes":[] }, 
    {"name":"isRecord","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.ClassLoader$$DefineAccessByGuice$$/0x0000000800dfc000",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseDouble","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Float",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseFloat","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseInt","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseLong","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.Module",
  "methods":[
    {"name":"getLayer","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.ModuleLayer",
  "methods":[{"name":"configuration","parameterTypes":[] }]
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getClass","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"notify","parameterTypes":[] }, 
    {"name":"notifyAll","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"wait","parameterTypes":[] }, 
    {"name":"wait","parameterTypes":["long"] }, 
    {"name":"wait","parameterTypes":["long","int"] }
  ]
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[
    {"name":"current","parameterTypes":[] }, 
    {"name":"pid","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Record"
},
{
  "name":"java.lang.Short",
  "allDeclaredFields":true,
  "fields":[{"name":"TYPE"}],
  "methods":[
    {"name":"parseShort","parameterTypes":["java.lang.String"] }, 
    {"name":"valueOf","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Throwable",
  "methods":[{"name":"addSuppressed","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.annotation.Annotation",
  "methods":[{"name":"annotationType","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllPublicMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Target",
  "queryAllPublicMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.invoke.MethodHandle",
  "methods":[
    {"name":"bindTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"invokeWithArguments","parameterTypes":["java.lang.Object[]"] }
  ]
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[
    {"name":"lookup","parameterTypes":[] }, 
    {"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }
  ]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "fields":[{"name":"IMPL_LOOKUP"}],
  "methods":[
    {"name":"defineHiddenClass","parameterTypes":["byte[]","boolean","java.lang.invoke.MethodHandles$Lookup$ClassOption[]"] }, 
    {"name":"findSpecial","parameterTypes":["java.lang.Class","java.lang.String","java.lang.invoke.MethodType","java.lang.Class"] }, 
    {"name":"in","parameterTypes":["java.lang.Class"] }, 
    {"name":"unreflectSpecial","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }
  ]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup$ClassOption"
},
{
  "name":"java.lang.invoke.MethodType",
  "methods":[{"name":"methodType","parameterTypes":["java.lang.Class","java.lang.Class[]"] }]
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, 
    {"name":"getLoggerNames","parameterTypes":[] }, 
    {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, 
    {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getUptime","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.module.Configuration",
  "methods":[{"name":"findModule","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.module.ModuleReference",
  "methods":[{"name":"location","parameterTypes":[] }]
},
{
  "name":"java.lang.module.ResolvedModule",
  "methods":[{"name":"reference","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Method",
  "methods":[
    {"name":"isDefault","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }
  ]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.URI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.Paths",
  "methods":[{"name":"get","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.sql.Connection"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager",
  "methods":[
    {"name":"getConnection","parameterTypes":["java.lang.String"] }, 
    {"name":"getDriver","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.sql.Time",
  "methods":[{"name":"<init>","parameterTypes":["long"] }]
},
{
  "name":"java.sql.Timestamp",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.Duration",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Instant",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDate",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.MonthDay",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Period",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Year",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.YearMonth",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.ZoneId",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZoneOffset",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZonedDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.AbstractMap$SimpleEntry",
  "allDeclaredFields":true
},
{
  "name":"java.util.Collection",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.HashMap",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.HashSet",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.List",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"get","parameterTypes":["int"] }]
},
{
  "name":"java.util.Locale",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Objects",
  "methods":[{"name":"isNull","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"java.util.Optional",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"empty","parameterTypes":[] }, 
    {"name":"ofNullable","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"java.util.OptionalDouble",
  "allDeclaredFields":true
},
{
  "name":"java.util.OptionalInt",
  "allDeclaredFields":true
},
{
  "name":"java.util.OptionalLong",
  "allDeclaredFields":true
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.RandomAccess",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Set",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.UUID",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.concurrent.AbstractExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executor",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ExecutorService",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executors$DelegatedExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executors$DelegatedScheduledExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.LinkedTransferQueue",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ScheduledExecutorService",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.function.BiFunction",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"andThen","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"javafx.beans.Observable"
},
{
  "name":"javassist.util.proxy.MethodHandler"
},
{
  "name":"javax.crypto.spec.SecretKeySpec",
  "allDeclaredFields":true
},
{
  "name":"javax.inject.Named",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"javax.inject.Provider",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.inject.Singleton",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServer",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerConnection",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.net.ssl.SSLParameters",
  "methods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"javax.net.ssl.SSLSocket",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }]
},
{
  "name":"javax.persistence.PersistenceUtil"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.servlet.Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.servlet.GenericServlet",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.servlet.Servlet",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.servlet.ServletConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.servlet.http.HttpServlet",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.validation.constraints.AssertTrue",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.DecimalMax",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"inclusive","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.DecimalMin",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"inclusive","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.Max",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.Min",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.NotEmpty",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.NotNull",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"javax.validation.constraints.Pattern",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, 
    {"name":"flags","parameterTypes":[] }, 
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"regexp","parameterTypes":[] }
  ]
},
{
  "name":"javax.ws.rs.container.ContainerRequestFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.ws.rs.container.DynamicFeature",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["javax.ws.rs.container.ResourceInfo","javax.ws.rs.core.FeatureContext"] }]
},
{
  "name":"javax.ws.rs.core.Application",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.ws.rs.core.Configurable",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.ws.rs.core.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.ws.rs.core.Feature",
  "methods":[{"name":"configure","parameterTypes":["javax.ws.rs.core.FeatureContext"] }]
},
{
  "name":"javax.ws.rs.core.UriInfo",
  "methods":[{"name":"getQueryParameters","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.ext.ExceptionMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toResponse","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"javax.ws.rs.ext.MessageBodyReader",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"isReadable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"readFrom","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType","javax.ws.rs.core.MultivaluedMap","java.io.InputStream"] }
  ]
},
{
  "name":"javax.ws.rs.ext.MessageBodyWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"isWriteable","parameterTypes":["java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] }, 
    {"name":"writeTo","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType","javax.ws.rs.core.MultivaluedMap","java.io.OutputStream"] }
  ]
},
{
  "name":"jdk.internal.vm.annotation.Contended"
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.bval.constraints.AssertTrueValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.DecimalMaxValidator$ForNumber",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.DecimalMaxValidator$ForString"
},
{
  "name":"org.apache.bval.constraints.DecimalMinValidator$ForNumber",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.DecimalMinValidator$ForString"
},
{
  "name":"org.apache.bval.constraints.MaxValidatorForNumber",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.MaxValidatorForString"
},
{
  "name":"org.apache.bval.constraints.MinValidatorForNumber",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.MinValidatorForString"
},
{
  "name":"org.apache.bval.constraints.NotEmptyValidator"
},
{
  "name":"org.apache.bval.constraints.NotEmptyValidatorForCharSequence"
},
{
  "name":"org.apache.bval.constraints.NotEmptyValidatorForCollection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.NotEmptyValidatorForMap"
},
{
  "name":"org.apache.bval.constraints.NotNullValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.constraints.PatternValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.el.ELFacade"
},
{
  "name":"org.apache.bval.jsr.ApacheValidationProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.ApacheValidatorFactory",
  "methods":[{"name":"<init>","parameterTypes":["javax.validation.spi.ConfigurationState"] }]
},
{
  "name":"org.apache.bval.jsr.ConstraintAnnotationAttributes$Types",
  "fields":[
    {"name":"groups"}, 
    {"name":"message"}, 
    {"name":"payload"}, 
    {"name":"validationAppliesTo"}, 
    {"name":"value"}
  ]
},
{
  "name":"org.apache.bval.jsr.valueextraction.FxExtractor$Activation",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.IterableElementExtractor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.ListElementExtractor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.MapExtractor",
  "allPublicClasses":true
},
{
  "name":"org.apache.bval.jsr.valueextraction.MapExtractor$Activation"
},
{
  "name":"org.apache.bval.jsr.valueextraction.MapExtractor$ForKey",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.MapExtractor$ForValue",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor",
  "allPublicClasses":true
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor$Activation"
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor$ForDouble",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor$ForInt",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor$ForLong",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.valueextraction.OptionalExtractor$ForObject",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.jsr.xml.ValidationMappingParser",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.bval.util.reflection.Reflection",
  "fields":[
    {"name":"NATIVE_CODES"}, 
    {"name":"PRIMITIVE_WRAPPER_MAP"}
  ]
},
{
  "name":"org.eclipse.jetty.http.pathmap.PathSpecSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.util.ModuleLocation",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.util.RegexSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jetty.util.log.Slf4jLog",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.hk2.internal.PerThreadContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.ExtendedConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.inject.hk2.ContextInjectionResolverImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2InjectionManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2RequestScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.InstanceSupplierFactoryBridge",
  "methods":[{"name":"provide","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.JerseyErrorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.RequestContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.process.internal.RequestScope"] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.SupplierFactoryBridge",
  "methods":[{"name":"provide","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.AbstractBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"bind","parameterTypes":["java.lang.Class"] }, 
    {"name":"bind","parameterTypes":["java.lang.Object"] }, 
    {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.Binding"] }, 
    {"name":"bind","parameterTypes":["org.glassfish.jersey.internal.inject.InjectionResolver"] }, 
    {"name":"bindAsContract","parameterTypes":["java.lang.Class"] }, 
    {"name":"bindAsContract","parameterTypes":["java.lang.reflect.Type"] }, 
    {"name":"bindAsContract","parameterTypes":["javax.ws.rs.core.GenericType"] }, 
    {"name":"bindFactory","parameterTypes":["java.lang.Class"] }, 
    {"name":"bindFactory","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"bindFactory","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"getBindings","parameterTypes":[] }, 
    {"name":"install","parameterTypes":["org.glassfish.jersey.internal.inject.AbstractBinder[]"] }
  ]
},
{
  "name":"org.glassfish.jersey.internal.inject.Binder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getBindings","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.Custom",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.internal.inject.ReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8",
  "fields":[
    {"name":"baseCount"}, 
    {"name":"cellsBusy"}, 
    {"name":"sizeCtl"}, 
    {"name":"transferIndex"}, 
    {"name":"transferOrigin"}
  ]
},
{
  "name":"org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8$CounterCell",
  "fields":[{"name":"value"}]
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractFormProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.BasicTypesMessageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ByteArrayProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.DataSourceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FileProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormMultivaluedMapProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.InputStreamProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ReaderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.RenderedImageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$DomSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SaxSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SourceWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider","javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$StreamSourceReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StreamingOutputProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StringMessageProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.process.Inflector",
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.glassfish.jersey.process.internal.RequestScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.BackgroundScheduler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ChunkedResponseWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.ManagedAsyncExecutor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig$WrappingResourceConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ServerConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultBackgroundSchedulerProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultManagedAsyncExecutorProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.filter.internal.ServerFiltersAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringAutodiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$ContainerRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.server.internal.process.RequestProcessingContextReference"] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$UriRoutingContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.server.internal.process.RequestProcessingContextReference"] }]
},
{
  "name":"org.glassfish.jersey.server.internal.process.RequestProcessingContextReference",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.model.ModelProcessor",
  "methods":[
    {"name":"processResourceModel","parameterTypes":["org.glassfish.jersey.server.model.ResourceModel","javax.ws.rs.core.Configuration"] }, 
    {"name":"processSubResource","parameterTypes":["org.glassfish.jersey.server.model.ResourceModel","javax.ws.rs.core.Configuration"] }
  ]
},
{
  "name":"org.glassfish.jersey.server.spi.Container",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.server.wadl.WadlFeature",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configure","parameterTypes":["javax.ws.rs.core.FeatureContext"] }
  ]
},
{
  "name":"org.glassfish.jersey.server.wadl.WadlFeature$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.glassfish.jersey.server.wadl.internal.WadlAutoDiscoverable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.server.wadl.internal.WadlResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"getExternalGrammar","parameterTypes":["javax.ws.rs.core.UriInfo","java.lang.String"] }, 
    {"name":"getWadl","parameterTypes":["javax.ws.rs.core.UriInfo"] }
  ]
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$GenericOptionsInflector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$PlainTextOptionsInflector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.WadlModelProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"processResourceModel","parameterTypes":["org.glassfish.jersey.server.model.ResourceModel","javax.ws.rs.core.Configuration"] }, 
    {"name":"processSubResource","parameterTypes":["org.glassfish.jersey.server.model.ResourceModel","javax.ws.rs.core.Configuration"] }
  ]
},
{
  "name":"org.glassfish.jersey.server.wadl.processor.WadlModelProcessor$OptionsHandler",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.servlet.ServletContainer",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$HttpServletRequestReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$HttpServletResponseReferencingFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.glassfish.jersey.servlet.WebComponent$WebComponentBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.glassfish.jersey.servlet.async.AsyncContextDelegateProviderImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.servlet.init.FilterUrlMappingsProviderImpl"
},
{
  "name":"org.glassfish.jersey.spi.AbstractThreadPoolProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.spi.ScheduledThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.spi.ThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.jline.terminal.impl.jna.osx.CLibrary$termios",
  "allDeclaredFields":true
},
{
  "name":"org.jline.terminal.impl.jna.osx.CLibrary$winsize",
  "allDeclaredFields":true
},
{
  "name":"org.joda.time.DateTime"
},
{
  "name":"org.jvnet.hk2.internal.DynamicConfigurationServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.jvnet.hk2.internal.ServiceLocatorRuntimeImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.openjdk.jol.vm.Experiments$CompressedOopsClass",
  "fields":[
    {"name":"obj1"}, 
    {"name":"obj2"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$HeaderClass",
  "fields":[{"name":"b1"}]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyBooleans4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyBytes4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyChars4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyDoubles4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyFloats4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyInts4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyLongs4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.openjdk.jol.vm.Experiments$MyShorts4",
  "fields":[
    {"name":"f1"}, 
    {"name":"f2"}, 
    {"name":"f3"}, 
    {"name":"f4"}
  ]
},
{
  "name":"org.osgi.framework.BundleReference"
},
{
  "name":"org.weakref.jmx.MBeanExporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.weakref.jmx.MBeanExporter$$FastClassByGuice$$4608289",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"org.weakref.jmx.Managed",
  "queryAllPublicMethods":true,
  "methods":[{"name":"description","parameterTypes":[] }]
},
{
  "name":"org.weakref.jmx.ManagedAnnotation",
  "queryAllPublicMethods":true
},
{
  "name":"org.weakref.jmx.guice.GuiceMBeanExporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.weakref.jmx.guice.GuiceMBeanExporter$$FastClassByGuice$$3484824",
  "fields":[{"name":"GUICE$INVOKERS"}]
},
{
  "name":"org.weakref.jmx.guice.MBeanModule",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.weakref.jmx.guice.Mapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.weakref.jmx.testing.TestingMBeanServer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"short",
  "queryAllDeclaredMethods":true
},
{
  "name":"sun.jvmstat.perfdata.monitor.v2_0.PerfDataBuffer",
  "methods":[{"name":"<init>","parameterTypes":["java.nio.ByteBuffer","int"] }]
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Contended"
},
{
  "name":"sun.misc.Signal",
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"handle","parameterTypes":["sun.misc.Signal","sun.misc.SignalHandler"] }
  ]
},
{
  "name":"sun.misc.SignalHandler",
  "fields":[{"name":"SIG_DFL"}]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[
    {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"staticFieldBase","parameterTypes":["java.lang.reflect.Field"] }, 
    {"name":"staticFieldOffset","parameterTypes":["java.lang.reflect.Field"] }
  ]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
